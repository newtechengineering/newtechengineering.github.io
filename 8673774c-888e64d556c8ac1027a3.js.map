{"version":3,"sources":["webpack:///./node_modules/@firebase/database/dist/index.cjs.js"],"names":["Object","defineProperty","exports","value","ex","id","firebase","tslib_1","util","logger$1","DOMStorageWrapper","domStorage_","this","prefix_","prototype","set","key","removeItem","prefixedName_","setItem","stringify","get","storedVal","getItem","jsonEval","remove","name","toString","MemoryStorage","cache_","isInMemoryStorage","contains","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","sha1","str","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","var_args","_i","arguments","length","message","i","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","assert","logLevel","LogLevel","VERBOSE","log","bind","logWrapper","prefix","concat","error","fatal","Error","warn","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","fn","forEach","val","doubleToIEEE754String","v","s","f","ln","bits","Infinity","Math","abs","pow","min","floor","LN2","round","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","INTEGER_REGEXP_","RegExp","test","intVal","exceptionGuard","setTimeout","stack","setTimeoutNonBlocking","time","timeout","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","enumerable","configurable","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","encodeURIComponent","String","slice","begin","parent","pieces","child","childPathObj","childPieces","isEmpty","relativePath","outerPath","innerPath","outer","inner","comparePaths","left","right","leftKeys","rightKeys","cmp","equals","other","j","ValidationPath","path","errorPrefix_","parts_","byteLength_","max","stringLength","checkValid_","pop","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","RepoInfo","host","secure","namespace","webSocketOnly","persistenceKey","domain","indexOf","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","type","params","connURL","pairs","toURLString","PUSH_CHARS","lastPushTime","lastRandChars","__EMPTY_NODE","MAX_NODE","parseRepoInfo","dataURL","parsedUrl","parseURL","subdomain","location","protocol","scheme","repoInfo","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","replace","decodePath","queryParams","queryString","results","charAt","_a","segment","kv","decodeQuery","parts","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","undefined","validateFirebaseData","errorPrefix","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergeDataArg","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","isValidRootPathString","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","validateArgCount","validateCallback","deferred","Deferred","onDisconnectCancel","wrapCallback","promise","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","nextPushId","now","duplicateTime","timeStampChars","random","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","_super","__extends","isDefinedOn","assertionError","maxPost","makePost","indexValue","KEY_INDEX","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","index","action","exportFormat","getValue","hash","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","_defaultIndexMap","PRIORITY_INDEX","PriorityIndex","aPriority","bPriority","indexCmp","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","result","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","root","base12","buildPennant","chunkSize","low","high","childTree","buildBalancedTree","namedNode","middle","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","safeGet","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","next","indexName","newIndexSet","clone","newIndexes","addToIndexes","_this","map","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newPriority","newIndexMap","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","call","defineProperties","MAX","setMaxNode$1","nodeFromJSON$1","json","node_1","jsonObj_1","childData","children_1","childrenHavePriority_1","hinzeJsonObj_1","childSet","sortedChildSet","setNodeFromJSON","__referenceConstructor","OperationType","VALUE_INDEX","ValueIndex","valueNode","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","childrenNode","hasChildren","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","ref","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","createEvent","change","query","getQueryParams","getIndex","snapshotNode","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","matches","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherCount","getCount","otherKey","getAnyKey","thisKey","every","cb","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","getIndexStartName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","on","callback","cancelCallbackOrContext","context","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","container","addEventCallbackForQuery","off","validateContextObject","valueCallback","removeEventCallbackForQuery","once","userCallback","cancelOrContext","firstCall","onceCallback","resolve","err","reject","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","CountedSet","add","item","clear","SparseSnapshotTree","find","childKey","remember","forget","self_1","tree","forEachTree","prefixPath","func","resolveDeferredValue","serverValues","resolveDeferredValueSnapshot","rawPri","leafNode","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","source","operationForChild","children","subtree","Empty","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","complete","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap_","oldChange","oldType","getChanges","getValues","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","calcCompleteEventCache","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","events","moves","generateEventsForType_","registrations","filteredChanges","filter","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","cache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","existing","generateEventsForChanges_","getInitialEvents","initialChanges","SyncPoint","views_","optCompleteServerCache","view","events_1","serverCacheComplete","eventCacheComplete","removed","hadCompleteView","hasCompleteView","viewQueryId","getQueryViews","viewForQuery","getCompleteView","viewExistsForQuery","findValue","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite_","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","findIndex","writeToRemove","splice","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","mergeAtPath","layerTree_","write","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","findKey","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap_","queryToTagMap_","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","tag","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","op","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","stopListening","queryToRemove","tagToRemove","removeTags_","maybeChildSyncPoint","childMap","views_1","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","childQueries","queryToStop","status","code","reason","toUpperCase","errorForServerCode","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","AuthTokenProvider","app_","getToken","forceRefresh","then","Promise","addTokenChangeListener","removeTokenChangeListener","notifyForInvalidToken","errorMessage","options","StatsCollection","counters_","incrementCounter","amount","deepCopy","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","delta","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","trigger","listeners","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","document","addEventListener","visible_","getInstance","OnlineMonitor","online_","isMobileCordova","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","BrowserPollConnection","connId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","isNodeSdk","readyState","called_1","wrappedFn_1","body","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","href","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","Windows","UI","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","base64Encode","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","pendingSegs","currentSerial","myIFrame","createIFrame_","script","iframeContents","doc","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","theURL","nodeRestRequest","newRequest_","curDataString","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","CONSTANTS","NODE_ADMIN","headers","SDK_VERSION","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports_1","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","Connection","repoInfo_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeout_ms","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","version","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens_","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","listen","currentHashFn","listenSpec","sendListen_","req","p","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isAdmin","token_1","authMethod","isValidFormat","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","request","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","accessToken","interrupt","resume","serverTimeOffset","q","normalizedPathString","statusCode","explanation","console","clientName","NODE_CLIENT","isReactNative","ReadonlyRestClient","getListenId_","listenId","thisListen","queryStringParameters","toRestQueryStringParameters","restRequest_","authTokenData","authToken","querystring","xhr","XMLHttpRequest","responseText","Repo","forceRestClient","app","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","authTokenProvider","search","authOverride","statsReporter_","transactions_init_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offset","generateServerValues","values","isMerge","taggedChildren","raw","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","newVal","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","resolvedTree","resolveDeferredValueTree","showDelta","longestName","reduce","previousValue","currentValue","statsIncrementCounter","metric","__database","Database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","self","startName","endName","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","inRange","oldChildSnap","compareNext","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","Reference","parentPath","getRoot","databaseProp","database","transaction","transactionUpdate","applyLocally","promiseComplete","startTransaction","setPriority","thennablePushRef","pushRef","TransactionStatus","TreeNode","childCount","Tree","name_","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","watchRef","order","retryCount","unwatcher","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","abortTransaction","currentNode","newDataNode","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","to","from","abortTransactionsOnNode_","lastSent","_staticInstance","RepoManager","repos_","useRestClient_","appName","dbUrl","databaseFromApp","createRepo","deleteRepo","appRepos","INTERNAL","DatabaseInternals","checkDeleted_","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP","__awaiter","__generator","freeze","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","opt_onComplete","opt_hash","listens","firebaseRef","_forceRestClient","registerDatabase","instance","registerService","unused","module"],"mappings":"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","file":"8673774c-888e64d556c8ac1027a3.js","sourcesContent":["'use strict';\n\nrequire(\"core-js/modules/es6.object.freeze\");\n\nrequire(\"core-js/modules/es6.array.reduce\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.array.find-index\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.define-properties\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.date.to-json\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.regexp.search\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.function.bind\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar firebase = _interopDefault(require('@firebase/app'));\n\nvar tslib_1 = require('tslib');\n\nvar util = require('@firebase/util');\n\nvar logger$1 = require('@firebase/logger');\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\n\n\nvar DOMStorageWrapper =\n/** @class */\nfunction () {\n  /**\r\n   * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n   */\n  function DOMStorageWrapper(domStorage_) {\n    this.domStorage_ = domStorage_; // Use a prefix to avoid collisions with other stuff saved by the app.\n\n    this.prefix_ = 'firebase:';\n  }\n  /**\r\n   * @param {string} key The key to save the value under\r\n   * @param {?Object} value The value being stored, or null to remove the key.\r\n   */\n\n\n  DOMStorageWrapper.prototype.set = function (key, value) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\n    }\n  };\n  /**\r\n   * @param {string} key\r\n   * @return {*} The value that was stored under this key, or null\r\n   */\n\n\n  DOMStorageWrapper.prototype.get = function (key) {\n    var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n\n    if (storedVal == null) {\n      return null;\n    } else {\n      return util.jsonEval(storedVal);\n    }\n  };\n  /**\r\n   * @param {string} key\r\n   */\n\n\n  DOMStorageWrapper.prototype.remove = function (key) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  };\n  /**\r\n   * @param {string} name\r\n   * @return {string}\r\n   */\n\n\n  DOMStorageWrapper.prototype.prefixedName_ = function (name) {\n    return this.prefix_ + name;\n  };\n\n  DOMStorageWrapper.prototype.toString = function () {\n    return this.domStorage_.toString();\n  };\n\n  return DOMStorageWrapper;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\n\n\nvar MemoryStorage =\n/** @class */\nfunction () {\n  function MemoryStorage() {\n    this.cache_ = {};\n    this.isInMemoryStorage = true;\n  }\n\n  MemoryStorage.prototype.set = function (key, value) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  };\n\n  MemoryStorage.prototype.get = function (key) {\n    if (util.contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n\n    return null;\n  };\n\n  MemoryStorage.prototype.remove = function (key) {\n    delete this.cache_[key];\n  };\n\n  return MemoryStorage;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\n\n\nvar createStoragefor = function createStoragefor(domStorageName) {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (typeof window !== 'undefined' && typeof window[domStorageName] !== 'undefined') {\n      // Need to test cache. Just because it's here doesn't mean it works\n      var domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {} // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n\n\n  return new MemoryStorage();\n};\n/** A storage object that lasts across sessions */\n\n\nvar PersistentStorage = createStoragefor('localStorage');\n/** A storage object that only lasts one session */\n\nvar SessionStorage = createStoragefor('sessionStorage');\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar logClient = new logger$1.Logger('@firebase/database');\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\n\nvar LUIDGenerator = function () {\n  var id = 1;\n  return function () {\n    return id++;\n  };\n}();\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\n\n\nvar sha1 = function sha1(str) {\n  var utf8Bytes = util.stringToByteArray(str);\n  var sha1 = new util.Sha1();\n  sha1.update(utf8Bytes);\n  var sha1Bytes = sha1.digest();\n  return util.base64.encodeByteArray(sha1Bytes);\n};\n/**\r\n * @param {...*} var_args\r\n * @return {string}\r\n * @private\r\n */\n\n\nvar buildLogMessage_ = function buildLogMessage_() {\n  var var_args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    var_args[_i] = arguments[_i];\n  }\n\n  var message = '';\n\n  for (var i = 0; i < var_args.length; i++) {\n    if (Array.isArray(var_args[i]) || var_args[i] && typeof var_args[i] === 'object' && typeof var_args[i].length === 'number') {\n      message += buildLogMessage_.apply(null, var_args[i]);\n    } else if (typeof var_args[i] === 'object') {\n      message += util.stringify(var_args[i]);\n    } else {\n      message += var_args[i];\n    }\n\n    message += ' ';\n  }\n\n  return message;\n};\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\n\n\nvar logger = null;\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\n\nvar firstLog_ = true;\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\n\nvar enableLogging = function enableLogging(logger_, persistent) {\n  util.assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\n\n  if (logger_ === true) {\n    logClient.logLevel = logger$1.LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) SessionStorage.set('logging_enabled', true);\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n/**\r\n *\r\n * @param {...(string|Arguments)} var_args\r\n */\n\n\nvar log = function log() {\n  var var_args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    var_args[_i] = arguments[_i];\n  }\n\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) enableLogging(true);\n  }\n\n  if (logger) {\n    var message = buildLogMessage_.apply(null, var_args);\n    logger(message);\n  }\n};\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\n\n\nvar logWrapper = function logWrapper(prefix) {\n  return function () {\n    var var_args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      var_args[_i] = arguments[_i];\n    }\n\n    log.apply(void 0, [prefix].concat(var_args));\n  };\n};\n/**\r\n * @param {...string} var_args\r\n */\n\n\nvar error = function error() {\n  var var_args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    var_args[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);\n  logClient.error(message);\n};\n/**\r\n * @param {...string} var_args\r\n */\n\n\nvar fatal = function fatal() {\n  var var_args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    var_args[_i] = arguments[_i];\n  }\n\n  var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, var_args);\n  logClient.error(message);\n  throw new Error(message);\n};\n/**\r\n * @param {...*} var_args\r\n */\n\n\nvar warn = function warn() {\n  var var_args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    var_args[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);\n  logClient.warn(message);\n};\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\n\n\nvar warnIfPageIsSecure = function warnIfPageIsSecure() {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (typeof window !== 'undefined' && window.location && window.location.protocol && window.location.protocol.indexOf('https:') !== -1) {\n    warn('Insecure Firebase access from a secure page. ' + 'Please use https in calls to new Firebase().');\n  }\n};\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\n\n\nvar isInvalidJSONNumber = function isInvalidJSONNumber(data) {\n  return typeof data === 'number' && (data != data || // NaN\n  data == Number.POSITIVE_INFINITY || data == Number.NEGATIVE_INFINITY);\n};\n/**\r\n * @param {function()} fn\r\n */\n\n\nvar executeWhenDOMReady = function executeWhenDOMReady(fn) {\n  if (util.isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n    var called_1 = false;\n\n    var wrappedFn_1 = function wrappedFn_1() {\n      if (!document.body) {\n        setTimeout(wrappedFn_1, Math.floor(10));\n        return;\n      }\n\n      if (!called_1) {\n        called_1 = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn_1, false); // fallback to onload.\n\n      window.addEventListener('load', wrappedFn_1, false);\n    } else if (document.attachEvent) {\n      // IE.\n      document.attachEvent('onreadystatechange', function () {\n        if (document.readyState === 'complete') wrappedFn_1();\n      }); // fallback to onload.\n\n      window.attachEvent('onload', wrappedFn_1); // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\n\n\nvar MIN_NAME = '[MIN_NAME]';\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\n\nvar MAX_NAME = '[MAX_NAME]';\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\n\nvar nameCompare = function nameCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    var aAsInt = tryParseInt(a),\n        bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\n\n\nvar stringCompare = function stringCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\n\n\nvar requireKey = function requireKey(key, obj) {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\n  }\n};\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\n\n\nvar ObjectToUniqueKey = function ObjectToUniqueKey(obj) {\n  if (typeof obj !== 'object' || obj === null) return util.stringify(obj);\n  var keys = [];\n\n  for (var k in obj) {\n    keys.push(k);\n  } // Export as json, but with the keys sorted.\n\n\n  keys.sort();\n  var key = '{';\n\n  for (var i = 0; i < keys.length; i++) {\n    if (i !== 0) key += ',';\n    key += util.stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\n\n\nvar splitStringBySize = function splitStringBySize(str, segsize) {\n  var len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  var dataSegs = [];\n\n  for (var c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n\n  return dataSegs;\n};\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param {!(Object|Array)} obj The object or array to iterate over\r\n * @param {function(?, ?)} fn The function to apply\r\n */\n\n\nvar each = function each(obj, fn) {\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; ++i) {\n      fn(i, obj[i]);\n    }\n  } else {\n    /**\r\n     * in the conversion of code we removed the goog.object.forEach\r\n     * function which did a value,key callback. We standardized on\r\n     * a single impl that does a key, value callback. So we invert\r\n     * to not have to touch the `each` code points\r\n     */\n    util.forEach(obj, function (key, val) {\n      return fn(val, key);\n    });\n  }\n};\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\n\n\nvar doubleToIEEE754String = function doubleToIEEE754String(v) {\n  util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  var ebits = 11,\n      fbits = 52;\n  var bias = (1 << ebits - 1) - 1,\n      s,\n      e,\n      f,\n      ln,\n      i,\n      bits,\n      str; // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  } // Pack sign, exponent, fraction\n\n\n  bits = [];\n\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  str = bits.join(''); // Return the data as a hex string. --MJL\n\n  var hexByteString = '';\n\n  for (i = 0; i < 64; i += 8) {\n    var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) hexByte = '0' + hexByte;\n    hexByteString = hexByteString + hexByte;\n  }\n\n  return hexByteString.toLowerCase();\n};\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\n\n\nvar isChromeExtensionContentScript = function isChromeExtensionContentScript() {\n  return !!(typeof window === 'object' && window['chrome'] && window['chrome']['extension'] && !/^chrome/.test(window.location.href));\n};\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\n\n\nvar isWindowsStoreApp = function isWindowsStoreApp() {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\n\n\nvar errorForServerCode = function errorForServerCode(code, query) {\n  var reason = 'Unknown Error';\n\n  if (code === 'too_big') {\n    reason = 'The data requested exceeds the maximum size ' + 'that can be accessed with a single request.';\n  } else if (code == 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code == 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\n  error.code = code.toUpperCase();\n  return error;\n};\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\n\n\nvar INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\n\nvar tryParseInt = function tryParseInt(str) {\n  if (INTEGER_REGEXP_.test(str)) {\n    var intVal = Number(str);\n\n    if (intVal >= -2147483648 && intVal <= 2147483647) {\n      return intVal;\n    }\n  }\n\n  return null;\n};\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\n\n\nvar exceptionGuard = function exceptionGuard(fn) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(function () {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      var stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\n\n\nvar beingCrawled = function beingCrawled() {\n  var userAgent = typeof window === 'object' && window['navigator'] && window['navigator']['userAgent'] || ''; // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n\n  return userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0;\n};\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\n\n\nvar setTimeoutNonBlocking = function setTimeoutNonBlocking(fn, time) {\n  var timeout = setTimeout(fn, time);\n\n  if (typeof timeout === 'object' && timeout['unref']) {\n    timeout['unref']();\n  }\n\n  return timeout;\n};\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\n\n\nvar Path =\n/** @class */\nfunction () {\n  /**\r\n   * @param {string|Array.<string>} pathOrString Path string to parse,\r\n   *      or another path, or the raw tokens array\r\n   * @param {number=} pieceNum\r\n   */\n  function Path(pathOrString, pieceNum) {\n    if (pieceNum === void 0) {\n      this.pieces_ = pathOrString.split('/'); // Remove empty pieces.\n\n      var copyTo = 0;\n\n      for (var i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n\n      this.pieces_.length = copyTo;\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString;\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  Object.defineProperty(Path, \"Empty\", {\n    /**\r\n     * Singleton to represent an empty path\r\n     *\r\n     * @const\r\n     */\n    get: function get() {\n      return new Path('');\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Path.prototype.getFront = function () {\n    if (this.pieceNum_ >= this.pieces_.length) return null;\n    return this.pieces_[this.pieceNum_];\n  };\n  /**\r\n   * @return {number} The number of segments in this path\r\n   */\n\n\n  Path.prototype.getLength = function () {\n    return this.pieces_.length - this.pieceNum_;\n  };\n  /**\r\n   * @return {!Path}\r\n   */\n\n\n  Path.prototype.popFront = function () {\n    var pieceNum = this.pieceNum_;\n\n    if (pieceNum < this.pieces_.length) {\n      pieceNum++;\n    }\n\n    return new Path(this.pieces_, pieceNum);\n  };\n  /**\r\n   * @return {?string}\r\n   */\n\n\n  Path.prototype.getBack = function () {\n    if (this.pieceNum_ < this.pieces_.length) return this.pieces_[this.pieces_.length - 1];\n    return null;\n  };\n\n  Path.prototype.toString = function () {\n    var pathString = '';\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') pathString += '/' + this.pieces_[i];\n    }\n\n    return pathString || '/';\n  };\n\n  Path.prototype.toUrlEncodedString = function () {\n    var pathString = '';\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\n    }\n\n    return pathString || '/';\n  };\n  /**\r\n   * Shallow copy of the parts of the path.\r\n   *\r\n   * @param {number=} begin\r\n   * @return {!Array<string>}\r\n   */\n\n\n  Path.prototype.slice = function (begin) {\n    if (begin === void 0) {\n      begin = 0;\n    }\n\n    return this.pieces_.slice(this.pieceNum_ + begin);\n  };\n  /**\r\n   * @return {?Path}\r\n   */\n\n\n  Path.prototype.parent = function () {\n    if (this.pieceNum_ >= this.pieces_.length) return null;\n    var pieces = [];\n\n    for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++) {\n      pieces.push(this.pieces_[i]);\n    }\n\n    return new Path(pieces, 0);\n  };\n  /**\r\n   * @param {string|!Path} childPathObj\r\n   * @return {!Path}\r\n   */\n\n\n  Path.prototype.child = function (childPathObj) {\n    var pieces = [];\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      pieces.push(this.pieces_[i]);\n    }\n\n    if (childPathObj instanceof Path) {\n      for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n        pieces.push(childPathObj.pieces_[i]);\n      }\n    } else {\n      var childPieces = childPathObj.split('/');\n\n      for (var i = 0; i < childPieces.length; i++) {\n        if (childPieces[i].length > 0) pieces.push(childPieces[i]);\n      }\n    }\n\n    return new Path(pieces, 0);\n  };\n  /**\r\n   * @return {boolean} True if there are no segments in this path\r\n   */\n\n\n  Path.prototype.isEmpty = function () {\n    return this.pieceNum_ >= this.pieces_.length;\n  };\n  /**\r\n   * @param {!Path} outerPath\r\n   * @param {!Path} innerPath\r\n   * @return {!Path} The path from outerPath to innerPath\r\n   */\n\n\n  Path.relativePath = function (outerPath, innerPath) {\n    var outer = outerPath.getFront(),\n        inner = innerPath.getFront();\n\n    if (outer === null) {\n      return innerPath;\n    } else if (outer === inner) {\n      return Path.relativePath(outerPath.popFront(), innerPath.popFront());\n    } else {\n      throw new Error('INTERNAL ERROR: innerPath (' + innerPath + ') is not within ' + 'outerPath (' + outerPath + ')');\n    }\n  };\n  /**\r\n   * @param {!Path} left\r\n   * @param {!Path} right\r\n   * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n   */\n\n\n  Path.comparePaths = function (left, right) {\n    var leftKeys = left.slice();\n    var rightKeys = right.slice();\n\n    for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n      var cmp = nameCompare(leftKeys[i], rightKeys[i]);\n      if (cmp !== 0) return cmp;\n    }\n\n    if (leftKeys.length === rightKeys.length) return 0;\n    return leftKeys.length < rightKeys.length ? -1 : 1;\n  };\n  /**\r\n   *\r\n   * @param {Path} other\r\n   * @return {boolean} true if paths are the same.\r\n   */\n\n\n  Path.prototype.equals = function (other) {\n    if (this.getLength() !== other.getLength()) {\n      return false;\n    }\n\n    for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\n      if (this.pieces_[i] !== other.pieces_[j]) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\r\n   *\r\n   * @param {!Path} other\r\n   * @return {boolean} True if this path is a parent (or the same as) other\r\n   */\n\n\n  Path.prototype.contains = function (other) {\n    var i = this.pieceNum_;\n    var j = other.pieceNum_;\n\n    if (this.getLength() > other.getLength()) {\n      return false;\n    }\n\n    while (i < this.pieces_.length) {\n      if (this.pieces_[i] !== other.pieces_[j]) {\n        return false;\n      }\n\n      ++i;\n      ++j;\n    }\n\n    return true;\n  };\n\n  return Path;\n}(); // end Path\n\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\n\n\nvar ValidationPath =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Path} path Initial Path.\r\n   * @param {string} errorPrefix_ Prefix for any error messages.\r\n   */\n  function ValidationPath(path, errorPrefix_) {\n    this.errorPrefix_ = errorPrefix_;\n    /** @type {!Array<string>} */\n\n    this.parts_ = path.slice();\n    /** @type {number} Initialize to number of '/' chars needed in path. */\n\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (var i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += util.stringLength(this.parts_[i]);\n    }\n\n    this.checkValid_();\n  }\n\n  Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\n    /** @const {number} Maximum key depth. */\n    get: function get() {\n      return 32;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\n    /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\n    get: function get() {\n      return 768;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /** @param {string} child */\n\n  ValidationPath.prototype.push = function (child) {\n    // Count the needed '/'\n    if (this.parts_.length > 0) {\n      this.byteLength_ += 1;\n    }\n\n    this.parts_.push(child);\n    this.byteLength_ += util.stringLength(child);\n    this.checkValid_();\n  };\n\n  ValidationPath.prototype.pop = function () {\n    var last = this.parts_.pop();\n    this.byteLength_ -= util.stringLength(last); // Un-count the previous '/'\n\n    if (this.parts_.length > 0) {\n      this.byteLength_ -= 1;\n    }\n  };\n\n  ValidationPath.prototype.checkValid_ = function () {\n    if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\n      throw new Error(this.errorPrefix_ + 'has a key path longer than ' + ValidationPath.MAX_PATH_LENGTH_BYTES + ' bytes (' + this.byteLength_ + ').');\n    }\n\n    if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\n      throw new Error(this.errorPrefix_ + 'path specified exceeds the maximum depth that can be written (' + ValidationPath.MAX_PATH_DEPTH + ') or object contains a cycle ' + this.toErrorString());\n    }\n  };\n  /**\r\n   * String for use in error messages - uses '.' notation for path.\r\n   *\r\n   * @return {string}\r\n   */\n\n\n  ValidationPath.prototype.toErrorString = function () {\n    if (this.parts_.length == 0) {\n      return '';\n    }\n\n    return \"in property '\" + this.parts_.join('.') + \"'\";\n  };\n\n  return ValidationPath;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PROTOCOL_VERSION = '5';\nvar VERSION_PARAM = 'v';\nvar TRANSPORT_SESSION_PARAM = 's';\nvar REFERER_PARAM = 'r';\nvar FORGE_REF = 'f';\nvar FORGE_DOMAIN = 'firebaseio.com';\nvar LAST_SESSION_PARAM = 'ls';\nvar WEBSOCKET = 'websocket';\nvar LONG_POLLING = 'long_polling';\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\n\nvar RepoInfo =\n/** @class */\nfunction () {\n  /**\r\n   * @param {string} host Hostname portion of the url for the repo\r\n   * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n   * @param {string} namespace The namespace represented by the repo\r\n   * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n   * @param {string=} persistenceKey Override the default session persistence storage key\r\n   */\n  function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {\n    if (persistenceKey === void 0) {\n      persistenceKey = '';\n    }\n\n    this.secure = secure;\n    this.namespace = namespace;\n    this.webSocketOnly = webSocketOnly;\n    this.persistenceKey = persistenceKey;\n    this.host = host.toLowerCase();\n    this.domain = this.host.substr(this.host.indexOf('.') + 1);\n    this.internalHost = PersistentStorage.get('host:' + host) || this.host;\n  }\n\n  RepoInfo.prototype.needsQueryParam = function () {\n    return this.host !== this.internalHost || this.isCustomHost();\n  };\n\n  RepoInfo.prototype.isCacheableHost = function () {\n    return this.internalHost.substr(0, 2) === 's-';\n  };\n\n  RepoInfo.prototype.isDemoHost = function () {\n    return this.domain === 'firebaseio-demo.com';\n  };\n\n  RepoInfo.prototype.isCustomHost = function () {\n    return this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com';\n  };\n\n  RepoInfo.prototype.updateHost = function (newHost) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this.host, this.internalHost);\n      }\n    }\n  };\n  /**\r\n   * Returns the websocket URL for this repo\r\n   * @param {string} type of connection\r\n   * @param {Object} params list\r\n   * @return {string} The URL for this repo\r\n   */\n\n\n  RepoInfo.prototype.connectionURL = function (type, params) {\n    util.assert(typeof type === 'string', 'typeof type must == string');\n    util.assert(typeof params === 'object', 'typeof params must == object');\n    var connURL;\n\n    if (type === WEBSOCKET) {\n      connURL = (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\n    } else if (type === LONG_POLLING) {\n      connURL = (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\n    } else {\n      throw new Error('Unknown connection type: ' + type);\n    }\n\n    if (this.needsQueryParam()) {\n      params['ns'] = this.namespace;\n    }\n\n    var pairs = [];\n    util.forEach(params, function (key, value) {\n      pairs.push(key + '=' + value);\n    });\n    return connURL + pairs.join('&');\n  };\n  /** @return {string} */\n\n\n  RepoInfo.prototype.toString = function () {\n    var str = this.toURLString();\n\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n\n    return str;\n  };\n  /** @return {string} */\n\n\n  RepoInfo.prototype.toURLString = function () {\n    return (this.secure ? 'https://' : 'http://') + this.host;\n  };\n\n  return RepoInfo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\n\n\nfunction decodePath(pathString) {\n  var pathStringDecoded = '';\n  var pieces = pathString.split('/');\n\n  for (var i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      var piece = pieces[i];\n\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n\n      pathStringDecoded += '/' + piece;\n    }\n  }\n\n  return pathStringDecoded;\n}\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\n\n\nfunction decodeQuery(queryString) {\n  var results = {};\n\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n\n  for (var _i = 0, _a = queryString.split('&'); _i < _a.length; _i++) {\n    var segment = _a[_i];\n\n    if (segment.length === 0) {\n      continue;\n    }\n\n    var kv = segment.split('=');\n\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\n    }\n  }\n\n  return results;\n}\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\n\n\nvar parseRepoInfo = function parseRepoInfo(dataURL) {\n  var parsedUrl = parseURL(dataURL),\n      namespace = parsedUrl.subdomain;\n\n  if (parsedUrl.domain === 'firebase') {\n    fatal(parsedUrl.host + ' is no longer supported. ' + 'Please use <YOUR FIREBASE>.firebaseio.com instead');\n  } // Catch common error of uninitialized namespace value.\n\n\n  if ((!namespace || namespace == 'undefined') && parsedUrl.domain !== 'localhost') {\n    fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n  return {\n    repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\r\n */\n\n\nvar parseURL = function parseURL(dataURL) {\n  // Default to empty strings in the event of a malformed string.\n  var host = '',\n      domain = '',\n      subdomain = '',\n      pathString = ''; // Always default to SSL, unless otherwise specified.\n\n  var secure = true,\n      scheme = 'https',\n      port = 443; // Don't do any validation here. The caller is responsible for validating the result of parsing.\n\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    var colonInd = dataURL.indexOf('//');\n\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    } // Parse host, path, and query string.\n\n\n    var slashInd = dataURL.indexOf('/');\n\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n\n    var questionMarkInd = dataURL.indexOf('?');\n\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n\n    var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd))); // If we have a port, use scheme for determining if it's secure.\n\n    colonInd = host.indexOf(':');\n\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = dataURL.length;\n    }\n\n    var parts = host.split('.');\n\n    if (parts.length === 3) {\n      // Normalize namespaces to lowercase to share storage / connection.\n      domain = parts[1];\n      subdomain = parts[0].toLowerCase();\n    } else if (parts.length === 2) {\n      domain = parts[0];\n    } else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } // Support `ns` query param if subdomain not already set\n\n\n    if (subdomain === '' && 'ns' in queryParams) {\n      subdomain = queryParams['ns'];\n    }\n  }\n\n  return {\n    host: host,\n    port: port,\n    domain: domain,\n    subdomain: subdomain,\n    secure: secure,\n    scheme: scheme,\n    pathString: pathString\n  };\n};\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\n\n\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\n\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\n\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\n\nvar isValidKey = function isValidKey(key) {\n  return typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key);\n};\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\n\n\nvar isValidPathString = function isValidPathString(pathString) {\n  return typeof pathString === 'string' && pathString.length !== 0 && !INVALID_PATH_REGEX_.test(pathString);\n};\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\n\n\nvar isValidRootPathString = function isValidRootPathString(pathString) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\n\n\nvar isValidPriority = function isValidPriority(priority) {\n  return priority === null || typeof priority === 'string' || typeof priority === 'number' && !isInvalidJSONNumber(priority) || priority && typeof priority === 'object' && util.contains(priority, '.sv');\n};\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\n\n\nvar validateFirebaseDataArg = function validateFirebaseDataArg(fnName, argumentNumber, data, path, optional) {\n  if (optional && data === undefined) return;\n  validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\n};\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\n\n\nvar validateFirebaseData = function validateFirebaseData(errorPrefix, data, path_) {\n  var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\n  }\n\n  if (typeof data === 'function') {\n    throw new Error(errorPrefix + 'contains a function ' + path.toErrorString() + ' with contents = ' + data.toString());\n  }\n\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\n  } // Check max leaf size, but try to avoid the utf8 conversion if we can.\n\n\n  if (typeof data === 'string' && data.length > MAX_LEAF_SIZE_ / 3 && util.stringLength(data) > MAX_LEAF_SIZE_) {\n    throw new Error(errorPrefix + 'contains a string greater than ' + MAX_LEAF_SIZE_ + ' utf8 bytes ' + path.toErrorString() + \" ('\" + data.substring(0, 50) + \"...')\");\n  } // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n\n\n  if (data && typeof data === 'object') {\n    var hasDotValue_1 = false,\n        hasActualChild_1 = false;\n    util.forEach(data, function (key, value) {\n      if (key === '.value') {\n        hasDotValue_1 = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild_1 = true;\n\n        if (!isValidKey(key)) {\n          throw new Error(errorPrefix + ' contains an invalid key (' + key + ') ' + path.toErrorString() + '.  Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n        }\n      }\n\n      path.push(key);\n      validateFirebaseData(errorPrefix, value, path);\n      path.pop();\n    });\n\n    if (hasDotValue_1 && hasActualChild_1) {\n      throw new Error(errorPrefix + ' contains \".value\" child ' + path.toErrorString() + ' in addition to actual children.');\n    }\n  }\n};\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\n\n\nvar validateFirebaseMergePaths = function validateFirebaseMergePaths(errorPrefix, mergePaths) {\n  var i, curPath;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    var keys = curPath.slice();\n\n    for (var j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) ;else if (!isValidKey(keys[j])) {\n        throw new Error(errorPrefix + 'contains an invalid key (' + keys[j] + ') in path ' + curPath.toString() + '. Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n      }\n    }\n  } // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n\n\n  mergePaths.sort(Path.comparePaths);\n  var prevPath = null;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n\n    if (prevPath !== null && prevPath.contains(curPath)) {\n      throw new Error(errorPrefix + 'contains a path ' + prevPath.toString() + ' that is ancestor of another path ' + curPath.toString());\n    }\n\n    prevPath = curPath;\n  }\n};\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\n\n\nvar validateFirebaseMergeDataArg = function validateFirebaseMergeDataArg(fnName, argumentNumber, data, path, optional) {\n  if (optional && data === undefined) return;\n  var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(errorPrefix + ' must be an object containing the children to replace.');\n  }\n\n  var mergePaths = [];\n  util.forEach(data, function (key, value) {\n    var curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, path.child(curPath));\n\n    if (curPath.getBack() === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(errorPrefix + \"contains an invalid value for '\" + curPath.toString() + \"', which must be a valid \" + 'Firebase priority (a string, finite number, server value, or null).');\n      }\n    }\n\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nvar validatePriority = function validatePriority(fnName, argumentNumber, priority, optional) {\n  if (optional && priority === undefined) return;\n  if (isInvalidJSONNumber(priority)) throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'is ' + priority.toString() + ', but must be a valid Firebase priority (a string, finite number, ' + 'server value, or null).'); // Special case to allow importing data with a .sv.\n\n  if (!isValidPriority(priority)) throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a valid Firebase priority ' + '(a string, finite number, server value, or null).');\n};\n\nvar validateEventType = function validateEventType(fnName, argumentNumber, eventType, optional) {\n  if (optional && eventType === undefined) return;\n\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n\n    default:\n      throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n  }\n};\n\nvar validateKey = function validateKey(fnName, argumentNumber, key, optional) {\n  if (optional && key === undefined) return;\n  if (!isValidKey(key)) throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'was an invalid key = \"' + key + '\".  Firebase keys must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\n};\n\nvar validatePathString = function validatePathString(fnName, argumentNumber, pathString, optional) {\n  if (optional && pathString === undefined) return;\n  if (!isValidPathString(pathString)) throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'was an invalid path = \"' + pathString + '\". Paths must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n};\n\nvar validateRootPathString = function validateRootPathString(fnName, argumentNumber, pathString, optional) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentNumber, pathString, optional);\n};\n\nvar validateWritablePath = function validateWritablePath(fnName, path) {\n  if (path.getFront() === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nvar validateUrl = function validateUrl(fnName, argumentNumber, parsedUrl) {\n  // TODO = Validate server better.\n  var pathString = parsedUrl.path.toString();\n\n  if (!(typeof parsedUrl.repoInfo.host === 'string') || parsedUrl.repoInfo.host.length === 0 || !isValidKey(parsedUrl.repoInfo.namespace) && parsedUrl.repoInfo.host.split(':')[0] !== 'localhost' || pathString.length !== 0 && !isValidRootPathString(pathString)) {\n    throw new Error(util.errorPrefix(fnName, argumentNumber, false) + 'must be a valid firebase URL and ' + 'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\n  }\n};\n\nvar validateBoolean = function validateBoolean(fnName, argumentNumber, bool, optional) {\n  if (optional && bool === undefined) return;\n  if (typeof bool !== 'boolean') throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\n};\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n */\n\n\nvar OnDisconnect =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Repo} repo_\r\n   * @param {!Path} path_\r\n   */\n  function OnDisconnect(repo_, path_) {\n    this.repo_ = repo_;\n    this.path_ = path_;\n  }\n  /**\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.cancel = function (onComplete) {\n    util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.remove = function (onComplete) {\n    util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateWritablePath('OnDisconnect.remove', this.path_);\n    util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*} value\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.set = function (value, onComplete) {\n    util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.set', this.path_);\n    validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\n    util.validateCallback('OnDisconnect.set', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*} value\r\n   * @param {number|string|null} priority\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\n    util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('OnDisconnect.setWithPriority', this.path_);\n    validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\n    validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\n    util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {!Object} objectToMerge\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\n    util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.update', this.path_);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' + 'existing data, or an Object with integer keys if you really do want to only update some of the children.');\n    }\n\n    validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\n    util.validateCallback('OnDisconnect.update', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  return OnDisconnect;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TransactionResult =\n/** @class */\nfunction () {\n  /**\r\n   * A type for the resolve value of Firebase.transaction.\r\n   * @constructor\r\n   * @dict\r\n   * @param {boolean} committed\r\n   * @param {DataSnapshot} snapshot\r\n   */\n  function TransactionResult(committed, snapshot) {\n    this.committed = committed;\n    this.snapshot = snapshot;\n  } // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  TransactionResult.prototype.toJSON = function () {\n    util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n    return {\n      committed: this.committed,\n      snapshot: this.snapshot.toJSON()\n    };\n  };\n\n  return TransactionResult;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\n\n\nvar nextPushId = function () {\n  // Modeled after base64 web-safe chars, but ordered by ASCII.\n  var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz'; // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n\n  var lastPushTime = 0; // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n\n  var lastRandChars = [];\n  return function (now) {\n    var duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n    var i;\n    var timeStampChars = new Array(8);\n\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64); // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n\n      now = Math.floor(now / 64);\n    }\n\n    util.assert(now === 0, 'Cannot push at time == 0');\n    var id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n\n      lastRandChars[i]++;\n    }\n\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n\n    util.assert(id.length === 20, 'nextPushId: Length should be 20.');\n    return id;\n  };\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\n\n\nvar NamedNode =\n/** @class */\nfunction () {\n  function NamedNode(name, node) {\n    this.name = name;\n    this.node = node;\n  }\n  /**\r\n   *\r\n   * @param {!string} name\r\n   * @param {!Node} node\r\n   * @return {NamedNode}\r\n   */\n\n\n  NamedNode.Wrap = function (name, node) {\n    return new NamedNode(name, node);\n  };\n\n  return NamedNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @constructor\r\n */\n\n\nvar Index =\n/** @class */\nfunction () {\n  function Index() {}\n  /**\r\n   * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n   * this index\r\n   */\n\n\n  Index.prototype.getCompare = function () {\n    return this.compare.bind(this);\n  };\n  /**\r\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n   *\r\n   * @param {!Node} oldNode\r\n   * @param {!Node} newNode\r\n   * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n   */\n\n\n  Index.prototype.indexedValueChanged = function (oldNode, newNode) {\n    var oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    var newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  };\n  /**\r\n   * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n   * any other node wrapper, using this index\r\n   */\n\n\n  Index.prototype.minPost = function () {\n    return NamedNode.MIN;\n  };\n\n  return Index;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __EMPTY_NODE;\n\nvar KeyIndex =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(KeyIndex, _super);\n\n  function KeyIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\n    get: function get() {\n      return __EMPTY_NODE;\n    },\n    set: function set(val) {\n      __EMPTY_NODE = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * @inheritDoc\r\n   */\n\n  KeyIndex.prototype.compare = function (a, b) {\n    return nameCompare(a.name, b.name);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.isDefinedOn = function (node) {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return false; // The key for a node never changes.\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.minPost = function () {\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.maxPost = function () {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {string} name\r\n   * @return {!NamedNode}\r\n   */\n\n\n  KeyIndex.prototype.makePost = function (indexValue, name) {\n    util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.'); // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  };\n  /**\r\n   * @return {!string} String representation for inclusion in a query spec\r\n   */\n\n\n  KeyIndex.prototype.toString = function () {\n    return '.key';\n  };\n\n  return KeyIndex;\n}(Index);\n\nvar KEY_INDEX = new KeyIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar MAX_NODE;\n\nfunction setMaxNode(val) {\n  MAX_NODE = val;\n}\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\n\n\nvar priorityHashText = function priorityHashText(priority) {\n  if (typeof priority === 'number') return 'number:' + doubleToIEEE754String(priority);else return 'string:' + priority;\n};\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\n\n\nvar validatePriorityNode = function validatePriorityNode(priorityNode) {\n  if (priorityNode.isLeafNode()) {\n    var val = priorityNode.val();\n    util.assert(typeof val === 'string' || typeof val === 'number' || typeof val === 'object' && util.contains(val, '.sv'), 'Priority must be a string or number.');\n  } else {\n    util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\n  } // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n\n\n  util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\n};\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __childrenNodeConstructor;\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\n\n\nvar LeafNode =\n/** @class */\nfunction () {\n  /**\r\n   * @implements {Node}\r\n   * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n   *                                         The object type is possible in the event of a deferred value\r\n   * @param {!Node=} priorityNode_ The priority of this node.\r\n   */\n  function LeafNode(value_, priorityNode_) {\n    if (priorityNode_ === void 0) {\n      priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n\n    this.value_ = value_;\n    this.priorityNode_ = priorityNode_;\n    this.lazyHash_ = null;\n    util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\n    get: function get() {\n      return __childrenNodeConstructor;\n    },\n    set: function set(val) {\n      __childrenNodeConstructor = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  LeafNode.prototype.isLeafNode = function () {\n    return true;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPriority = function () {\n    return this.priorityNode_;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updatePriority = function (newPriorityNode) {\n    return new LeafNode(this.value_, newPriorityNode);\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getChild = function (path) {\n    if (path.isEmpty()) {\n      return this;\n    } else if (path.getFront() === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.hasChild = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\n    return null;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateChild = function (path, newChildNode) {\n    var front = path.getFront();\n\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n      return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.numChildren = function () {\n    return 0;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.forEachChild = function (index, action) {\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.val = function (exportFormat) {\n    if (exportFormat && !this.getPriority().isEmpty()) return {\n      '.value': this.getValue(),\n      '.priority': this.getPriority().val()\n    };else return this.getValue();\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash = '';\n      if (!this.priorityNode_.isEmpty()) toHash += 'priority:' + priorityHashText(this.priorityNode_.val()) + ':';\n      var type = typeof this.value_;\n      toHash += type + ':';\n\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_);\n      } else {\n        toHash += this.value_;\n      }\n\n      this.lazyHash_ = sha1(toHash);\n    }\n\n    return this.lazyHash_;\n  };\n  /**\r\n   * Returns the value of the leaf node.\r\n   * @return {Object|string|number|boolean} The value of the node.\r\n   */\n\n\n  LeafNode.prototype.getValue = function () {\n    return this.value_;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.compareTo = function (other) {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      util.assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other);\n    }\n  };\n  /**\r\n   * Comparison specifically for two leaf nodes\r\n   * @param {!LeafNode} otherLeaf\r\n   * @return {!number}\r\n   * @private\r\n   */\n\n\n  LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\n    var otherLeafType = typeof otherLeaf.value_;\n    var thisLeafType = typeof this.value_;\n    var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.withIndex = function () {\n    return this;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.isIndexed = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.equals = function (other) {\n    /**\r\n     * @inheritDoc\r\n     */\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      var otherLeaf = other;\n      return this.value_ === otherLeaf.value_ && this.priorityNode_.equals(otherLeaf.priorityNode_);\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n   * the same type, the comparison falls back to their value\r\n   * @type {Array.<!string>}\r\n   * @const\r\n   */\n\n\n  LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n  return LeafNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar nodeFromJSON;\nvar MAX_NODE$1;\n\nfunction setNodeFromJSON(val) {\n  nodeFromJSON = val;\n}\n\nfunction setMaxNode$1(val) {\n  MAX_NODE$1 = val;\n}\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\n\n\nvar PriorityIndex =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(PriorityIndex, _super);\n\n  function PriorityIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.compare = function (a, b) {\n    var aPriority = a.node.getPriority();\n    var bPriority = b.node.getPriority();\n    var indexCmp = aPriority.compareTo(bPriority);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.isDefinedOn = function (node) {\n    return !node.getPriority().isEmpty();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.minPost = function () {\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.maxPost = function () {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {string} name\r\n   * @return {!NamedNode}\r\n   */\n\n\n  PriorityIndex.prototype.makePost = function (indexValue, name) {\n    var priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  };\n  /**\r\n   * @return {!string} String representation for inclusion in a query spec\r\n   */\n\n\n  PriorityIndex.prototype.toString = function () {\n    return '.priority';\n  };\n\n  return PriorityIndex;\n}(Index);\n\nvar PRIORITY_INDEX = new PriorityIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An iterator over an LLRBNode.\r\n */\n\nvar SortedMapIterator =\n/** @class */\nfunction () {\n  /**\r\n   * @template K, V, T\r\n   * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n   * @param {?K} startKey\r\n   * @param {function(K, K): number} comparator\r\n   * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n   * @param {(function(K, V):T)=} resultGenerator_\r\n   */\n  function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\n    if (resultGenerator_ === void 0) {\n      resultGenerator_ = null;\n    }\n\n    this.isReverse_ = isReverse_;\n    this.resultGenerator_ = resultGenerator_;\n    /** @private\r\n     * @type {Array.<!LLRBNode>}\r\n     */\n\n    this.nodeStack_ = [];\n    var cmp = 1;\n\n    while (!node.isEmpty()) {\n      node = node;\n      cmp = startKey ? comparator(node.key, startKey) : 1; // flip the comparison if we're going in reverse\n\n      if (isReverse_) cmp *= -1;\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  SortedMapIterator.prototype.getNext = function () {\n    if (this.nodeStack_.length === 0) return null;\n    var node = this.nodeStack_.pop();\n    var result;\n    if (this.resultGenerator_) result = this.resultGenerator_(node.key, node.value);else result = {\n      key: node.key,\n      value: node.value\n    };\n\n    if (this.isReverse_) {\n      node = node.left;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  };\n\n  SortedMapIterator.prototype.hasNext = function () {\n    return this.nodeStack_.length > 0;\n  };\n\n  SortedMapIterator.prototype.peek = function () {\n    if (this.nodeStack_.length === 0) return null;\n    var node = this.nodeStack_[this.nodeStack_.length - 1];\n\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return {\n        key: node.key,\n        value: node.value\n      };\n    }\n  };\n\n  return SortedMapIterator;\n}();\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\n\n\nvar LLRBNode =\n/** @class */\nfunction () {\n  /**\r\n   * @template K, V\r\n   * @param {!K} key Key associated with this node.\r\n   * @param {!V} value Value associated with this node.\r\n   * @param {?boolean} color Whether this node is red.\r\n   * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n   * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n   */\n  function LLRBNode(key, value, color, left, right) {\n    this.key = key;\n    this.value = value;\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left = left != null ? left : SortedMap.EMPTY_NODE;\n    this.right = right != null ? right : SortedMap.EMPTY_NODE;\n  }\n  /**\r\n   * Returns a copy of the current node, optionally replacing pieces of it.\r\n   *\r\n   * @param {?K} key New key for the node, or null.\r\n   * @param {?V} value New value for the node, or null.\r\n   * @param {?boolean} color New color for the node, or null.\r\n   * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n   * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n   * @return {!LLRBNode} The node copy.\r\n   */\n\n\n  LLRBNode.prototype.copy = function (key, value, color, left, right) {\n    return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n  };\n  /**\r\n   * @return {number} The total number of nodes in the tree.\r\n   */\n\n\n  LLRBNode.prototype.count = function () {\n    return this.left.count() + 1 + this.right.count();\n  };\n  /**\r\n   * @return {boolean} True if the tree is empty.\r\n   */\n\n\n  LLRBNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!K, !V):*} action Callback function to be called for each\r\n   *   node.  If it returns true, traversal is aborted.\r\n   * @return {*} The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  LLRBNode.prototype.inorderTraversal = function (action) {\n    return this.left.inorderTraversal(action) || action(this.key, this.value) || this.right.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!Object, !Object)} action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return {*} True if traversal was aborted.\r\n   */\n\n\n  LLRBNode.prototype.reverseTraversal = function (action) {\n    return this.right.reverseTraversal(action) || action(this.key, this.value) || this.left.reverseTraversal(action);\n  };\n  /**\r\n   * @return {!Object} The minimum node in the tree.\r\n   * @private\r\n   */\n\n\n  LLRBNode.prototype.min_ = function () {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return this.left.min_();\n    }\n  };\n  /**\r\n   * @return {!K} The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.minKey = function () {\n    return this.min_().key;\n  };\n  /**\r\n   * @return {!K} The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.maxKey = function () {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  };\n  /**\r\n   *\r\n   * @param {!Object} key Key to insert.\r\n   * @param {!Object} value Value to insert.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBNode} New tree, with the key/value added.\r\n   */\n\n\n  LLRBNode.prototype.insert = function (key, value, comparator) {\n    var cmp, n;\n    n = this;\n    cmp = comparator(key, n.key);\n\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n   */\n\n\n  LLRBNode.prototype.removeMin_ = function () {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE;\n    }\n\n    var n = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) n = n.moveRedLeft_();\n    n = n.copy(null, null, null, n.left.removeMin_(), null);\n    return n.fixUp_();\n  };\n  /**\r\n   * @param {!Object} key The key of the item to remove.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n   */\n\n\n  LLRBNode.prototype.remove = function (key, comparator) {\n    var n, smallest;\n    n = this;\n\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) n = n.rotateRight_();\n\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE;\n        } else {\n          smallest = n.right.min_();\n          n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\n        }\n      }\n\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @private\r\n   * @return {boolean} Whether this is a RED node.\r\n   */\n\n\n  LLRBNode.prototype.isRed_ = function () {\n    return this.color;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree after performing any needed rotations.\r\n   */\n\n\n  LLRBNode.prototype.fixUp_ = function () {\n    var n = this;\n    if (n.right.isRed_() && !n.left.isRed_()) n = n.rotateLeft_();\n    if (n.left.isRed_() && n.left.left.isRed_()) n = n.rotateRight_();\n    if (n.left.isRed_() && n.right.isRed_()) n = n.colorFlip_();\n    return n;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after moveRedLeft.\r\n   */\n\n\n  LLRBNode.prototype.moveRedLeft_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.right.left.isRed_()) {\n      n = n.copy(null, null, null, null, n.right.rotateRight_());\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after moveRedRight.\r\n   */\n\n\n  LLRBNode.prototype.moveRedRight_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after rotateLeft.\r\n   */\n\n\n  LLRBNode.prototype.rotateLeft_ = function () {\n    var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null);\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after rotateRight.\r\n   */\n\n\n  LLRBNode.prototype.rotateRight_ = function () {\n    var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr);\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after colorFlip.\r\n   */\n\n\n  LLRBNode.prototype.colorFlip_ = function () {\n    var left = this.left.copy(null, null, !this.left.color, null, null);\n    var right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  };\n  /**\r\n   * For testing.\r\n   *\r\n   * @private\r\n   * @return {boolean} True if all is well.\r\n   */\n\n\n  LLRBNode.prototype.checkMaxDepth_ = function () {\n    var blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  };\n  /**\r\n   * @private\r\n   * @return {number} Not sure what this returns exactly. :-).\r\n   */\n\n\n  LLRBNode.prototype.check_ = function () {\n    var blackDepth;\n\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\n    }\n\n    if (this.right.isRed_()) {\n      throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\n    }\n\n    blackDepth = this.left.check_();\n\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  };\n\n  LLRBNode.RED = true;\n  LLRBNode.BLACK = false;\n  return LLRBNode;\n}();\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\n\n\nvar LLRBEmptyNode =\n/** @class */\nfunction () {\n  function LLRBEmptyNode() {}\n  /**\r\n   * Returns a copy of the current node.\r\n   *\r\n   * @return {!LLRBEmptyNode} The node copy.\r\n   */\n\n\n  LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n    return this;\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key/value added.\r\n   *\r\n   * @param {!K} key Key to be added.\r\n   * @param {!V} value Value to be added.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBNode} New tree, with item added.\r\n   */\n\n\n  LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n    return new LLRBNode(key, value, null);\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key removed.\r\n   *\r\n   * @param {!K} key The key to remove.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBEmptyNode} New tree, with item removed.\r\n   */\n\n\n  LLRBEmptyNode.prototype.remove = function (key, comparator) {\n    return this;\n  };\n  /**\r\n   * @return {number} The total number of nodes in the tree.\r\n   */\n\n\n  LLRBEmptyNode.prototype.count = function () {\n    return 0;\n  };\n  /**\r\n   * @return {boolean} True if the tree is empty.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isEmpty = function () {\n    return true;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!K, !V):*} action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return {boolean} True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!K, !V)} action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return {boolean} True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n    return false;\n  };\n  /**\r\n   * @return {null}\r\n   */\n\n\n  LLRBEmptyNode.prototype.minKey = function () {\n    return null;\n  };\n  /**\r\n   * @return {null}\r\n   */\n\n\n  LLRBEmptyNode.prototype.maxKey = function () {\n    return null;\n  };\n  /**\r\n   * @private\r\n   * @return {number} Not sure what this returns exactly. :-).\r\n   */\n\n\n  LLRBEmptyNode.prototype.check_ = function () {\n    return 0;\n  };\n  /**\r\n   * @private\r\n   * @return {boolean} Whether this node is red.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isRed_ = function () {\n    return false;\n  };\n\n  return LLRBEmptyNode;\n}();\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\n\n\nvar SortedMap =\n/** @class */\nfunction () {\n  /**\r\n   * @template K, V\r\n   * @param {function(K, K):number} comparator_ Key comparator.\r\n   * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n   */\n  function SortedMap(comparator_, root_) {\n    if (root_ === void 0) {\n      root_ = SortedMap.EMPTY_NODE;\n    }\n\n    this.comparator_ = comparator_;\n    this.root_ = root_;\n  }\n  /**\r\n   * Returns a copy of the map, with the specified key/value added or replaced.\r\n   * (TODO: We should perhaps rename this method to 'put')\r\n   *\r\n   * @param {!K} key Key to be added.\r\n   * @param {!V} value Value to be added.\r\n   * @return {!SortedMap.<K, V>} New map, with item added.\r\n   */\n\n\n  SortedMap.prototype.insert = function (key, value) {\n    return new SortedMap(this.comparator_, this.root_.insert(key, value, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns a copy of the map, with the specified key removed.\r\n   *\r\n   * @param {!K} key The key to remove.\r\n   * @return {!SortedMap.<K, V>} New map, with item removed.\r\n   */\n\n\n  SortedMap.prototype.remove = function (key) {\n    return new SortedMap(this.comparator_, this.root_.remove(key, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns the value of the node with the given key, or null.\r\n   *\r\n   * @param {!K} key The key to look up.\r\n   * @return {?V} The value of the node with the given key, or null if the\r\n   * key doesn't exist.\r\n   */\n\n\n  SortedMap.prototype.get = function (key) {\n    var cmp;\n    var node = this.root_;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n   * @param {K} key The key to find the predecessor of\r\n   * @return {?K} The predecessor key.\r\n   */\n\n\n  SortedMap.prototype.getPredecessorKey = function (key) {\n    var cmp,\n        node = this.root_,\n        rightParent = null;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\n  };\n  /**\r\n   * @return {boolean} True if the map is empty.\r\n   */\n\n\n  SortedMap.prototype.isEmpty = function () {\n    return this.root_.isEmpty();\n  };\n  /**\r\n   * @return {number} The total number of nodes in the map.\r\n   */\n\n\n  SortedMap.prototype.count = function () {\n    return this.root_.count();\n  };\n  /**\r\n   * @return {?K} The minimum key in the map.\r\n   */\n\n\n  SortedMap.prototype.minKey = function () {\n    return this.root_.minKey();\n  };\n  /**\r\n   * @return {?K} The maximum key in the map.\r\n   */\n\n\n  SortedMap.prototype.maxKey = function () {\n    return this.root_.maxKey();\n  };\n  /**\r\n   * Traverses the map in key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param {function(!K, !V):*} action Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @return {*} The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  SortedMap.prototype.inorderTraversal = function (action) {\n    return this.root_.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the map in reverse key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param {function(!Object, !Object)} action Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @return {*} True if the traversal was aborted.\r\n   */\n\n\n  SortedMap.prototype.reverseTraversal = function (action) {\n    return this.root_.reverseTraversal(action);\n  };\n  /**\r\n   * Returns an iterator over the SortedMap.\r\n   * @template T\r\n   * @param {(function(K, V):T)=} resultGenerator\r\n   * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n   */\n\n\n  SortedMap.prototype.getIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\n  };\n  /**\r\n   * Always use the same empty node, to reduce memory.\r\n   * @const\r\n   */\n\n\n  SortedMap.EMPTY_NODE = new LLRBEmptyNode();\n  return SortedMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LOG_2 = Math.log(2);\n/**\r\n * @constructor\r\n */\n\nvar Base12Num =\n/** @class */\nfunction () {\n  /**\r\n   * @param {number} length\r\n   */\n  function Base12Num(length) {\n    var logBase2 = function logBase2(num) {\n      return parseInt(Math.log(num) / LOG_2, 10);\n    };\n\n    var bitMask = function bitMask(bits) {\n      return parseInt(Array(bits + 1).join('1'), 2);\n    };\n\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    var mask = bitMask(this.count);\n    this.bits_ = length + 1 & mask;\n  }\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  Base12Num.prototype.nextBitIsOne = function () {\n    //noinspection JSBitwiseOperatorUsage\n    var result = !(this.bits_ & 0x1 << this.current_);\n    this.current_--;\n    return result;\n  };\n\n  return Base12Num;\n}();\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\n\n\nvar buildChildSet = function buildChildSet(childList, cmp, keyFn, mapSortFn) {\n  childList.sort(cmp);\n\n  var buildBalancedTree = function buildBalancedTree(low, high) {\n    var length = high - low;\n    var namedNode;\n    var key;\n\n    if (length == 0) {\n      return null;\n    } else if (length == 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\n    } else {\n      var middle = parseInt(length / 2, 10) + low;\n      var left = buildBalancedTree(low, middle);\n      var right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\n    }\n  };\n\n  var buildFrom12Array = function buildFrom12Array(base12) {\n    var node = null;\n    var root = null;\n    var index = childList.length;\n\n    var buildPennant = function buildPennant(chunkSize, color) {\n      var low = index - chunkSize;\n      var high = index;\n      index -= chunkSize;\n      var childTree = buildBalancedTree(low + 1, high);\n      var namedNode = childList[low];\n      var key = keyFn ? keyFn(namedNode) : namedNode;\n      attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\n    };\n\n    var attachPennant = function attachPennant(pennant) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (var i = 0; i < base12.count; ++i) {\n      var isOne = base12.nextBitIsOne(); // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n\n      var chunkSize = Math.pow(2, base12.count - (i + 1));\n\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n\n    return root;\n  };\n\n  var base12 = new Base12Num(childList.length);\n  var root = buildFrom12Array(base12);\n  return new SortedMap(mapSortFn || cmp, root);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _defaultIndexMap;\n\nvar fallbackObject = {};\n/**\r\n *\r\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\r\n * @param {Object.<string, Index>} indexSet\r\n * @constructor\r\n */\n\nvar IndexMap =\n/** @class */\nfunction () {\n  function IndexMap(indexes_, indexSet_) {\n    this.indexes_ = indexes_;\n    this.indexSet_ = indexSet_;\n  }\n\n  Object.defineProperty(IndexMap, \"Default\", {\n    /**\r\n     * The default IndexMap for nodes without a priority\r\n     * @type {!IndexMap}\r\n     * @const\r\n     */\n    get: function get() {\n      util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\n      _defaultIndexMap = _defaultIndexMap || new IndexMap({\n        '.priority': fallbackObject\n      }, {\n        '.priority': PRIORITY_INDEX\n      });\n      return _defaultIndexMap;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   *\r\n   * @param {!string} indexKey\r\n   * @return {?SortedMap.<NamedNode, Node>}\r\n   */\n\n  IndexMap.prototype.get = function (indexKey) {\n    var sortedMap = util.safeGet(this.indexes_, indexKey);\n    if (!sortedMap) throw new Error('No index defined for ' + indexKey);\n\n    if (sortedMap === fallbackObject) {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    } else {\n      return sortedMap;\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {boolean}\r\n   */\n\n\n  IndexMap.prototype.hasIndex = function (indexDefinition) {\n    return util.contains(this.indexSet_, indexDefinition.toString());\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @param {!SortedMap.<string, !Node>} existingChildren\r\n   * @return {!IndexMap}\r\n   */\n\n\n  IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\n    util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\n    var childList = [];\n    var sawIndexedValue = false;\n    var iter = existingChildren.getIterator(NamedNode.Wrap);\n    var next = iter.getNext();\n\n    while (next) {\n      sawIndexedValue = sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n\n    var newIndex;\n\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n\n    var indexName = indexDefinition.toString();\n    var newIndexSet = util.clone(this.indexSet_);\n    newIndexSet[indexName] = indexDefinition;\n    var newIndexes = util.clone(this.indexes_);\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  };\n  /**\r\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n   * @param {!NamedNode} namedNode\r\n   * @param {!SortedMap.<string, !Node>} existingChildren\r\n   * @return {!IndexMap}\r\n   */\n\n\n  IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\n    var _this = this;\n\n    var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\n      var index = util.safeGet(_this.indexSet_, indexName);\n      util.assert(index, 'Missing index implementation for ' + indexName);\n\n      if (indexedChildren === fallbackObject) {\n        // Check to see if we need to index everything\n        if (index.isDefinedOn(namedNode.node)) {\n          // We need to build this index\n          var childList = [];\n          var iter = existingChildren.getIterator(NamedNode.Wrap);\n          var next = iter.getNext();\n\n          while (next) {\n            if (next.name != namedNode.name) {\n              childList.push(next);\n            }\n\n            next = iter.getNext();\n          }\n\n          childList.push(namedNode);\n          return buildChildSet(childList, index.getCompare());\n        } else {\n          // No change, this remains a fallback\n          return fallbackObject;\n        }\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n        var newChildren = indexedChildren;\n\n        if (existingSnap) {\n          newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        }\n\n        return newChildren.insert(namedNode, namedNode.node);\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n  /**\r\n   * Create a new IndexMap instance with the given value removed\r\n   * @param {!NamedNode} namedNode\r\n   * @param {!SortedMap.<string, !Node>} existingChildren\r\n   * @return {!IndexMap}\r\n   */\n\n\n  IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\n    var newIndexes = util.map(this.indexes_, function (indexedChildren) {\n      if (indexedChildren === fallbackObject) {\n        // This is the fallback. Just return it, nothing to do in this case\n        return indexedChildren;\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n\n        if (existingSnap) {\n          return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        } else {\n          // No record of this child\n          return indexedChildren;\n        }\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n\n  return IndexMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction NAME_ONLY_COMPARATOR(left, right) {\n  return nameCompare(left.name, right.name);\n}\n\nfunction NAME_COMPARATOR(left, right) {\n  return nameCompare(left, right);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\n\nvar EMPTY_NODE;\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\n\nvar ChildrenNode =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!SortedMap.<string, !Node>} children_ List of children\r\n   * of this node..\r\n   * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n   * @param {!IndexMap} indexMap_\r\n   */\n  function ChildrenNode(children_, priorityNode_, indexMap_) {\n    this.children_ = children_;\n    this.priorityNode_ = priorityNode_;\n    this.indexMap_ = indexMap_;\n    this.lazyHash_ = null;\n    /**\r\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n     * class instead of an empty ChildrenNode.\r\n     */\n\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\n    }\n  }\n\n  Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\n    get: function get() {\n      return EMPTY_NODE || (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  ChildrenNode.prototype.isLeafNode = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPriority = function () {\n    return this.priorityNode_ || EMPTY_NODE;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      var child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getChild = function (path) {\n    var front = path.getFront();\n    if (front === null) return this;\n    return this.getImmediateChild(front).getChild(path.popFront());\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hasChild = function (childName) {\n    return this.children_.get(childName) !== null;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    util.assert(newChildNode, 'We should always be passing snapshot nodes');\n\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      var namedNode = new NamedNode(childName, newChildNode);\n      var newChildren = void 0,\n          newIndexMap = void 0,\n          newPriority = void 0;\n\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateChild = function (path, newChildNode) {\n    var front = path.getFront();\n\n    if (front === null) {\n      return newChildNode;\n    } else {\n      util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n      var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.isEmpty = function () {\n    return this.children_.isEmpty();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.numChildren = function () {\n    return this.children_.count();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.val = function (exportFormat) {\n    if (this.isEmpty()) return null;\n    var obj = {};\n    var numKeys = 0,\n        maxKey = 0,\n        allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      obj[key] = childNode.val(exportFormat);\n      numKeys++;\n\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      var array = [];\n\n      for (var key in obj) {\n        array[key] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n\n      return obj;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash_1 = '';\n      if (!this.getPriority().isEmpty()) toHash_1 += 'priority:' + priorityHashText(this.getPriority().val()) + ':';\n      this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        var childHash = childNode.hash();\n        if (childHash !== '') toHash_1 += ':' + key + ':' + childHash;\n      });\n      this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\n    }\n\n    return this.lazyHash_;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {?string}\r\n   */\n\n\n  ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {?NamedNode}\r\n   */\n\n\n  ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\n    var minKey = this.getFirstChildName(indexDefinition);\n\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Given an index, return the key name of the largest value we have, according to that index\r\n   * @param {!Index} indexDefinition\r\n   * @return {?string}\r\n   */\n\n\n  ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {?NamedNode}\r\n   */\n\n\n  ChildrenNode.prototype.getLastChild = function (indexDefinition) {\n    var maxKey = this.getLastChildName(indexDefinition);\n\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.forEachChild = function (index, action) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      return idx.inorderTraversal(function (wrappedNode) {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getIterator = function (indexDefinition) {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  };\n  /**\r\n   *\r\n   * @param {!NamedNode} startPost\r\n   * @param {!Index} indexDefinition\r\n   * @return {!SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getIteratorFrom(startPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {!SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\n    return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\n  };\n  /**\r\n   * @param {!NamedNode} endPost\r\n   * @param {!Index} indexDefinition\r\n   * @return {!SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.compareTo = function (other) {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE$2) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.withIndex = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX || this.indexMap_.hasIndex(indexDefinition)) {\n      return this;\n    } else {\n      var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.isIndexed = function (index) {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      var otherChildrenNode = other;\n\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (this.children_.count() === otherChildrenNode.children_.count()) {\n        var thisIter = this.getIterator(PRIORITY_INDEX);\n        var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        var thisCurrent = thisIter.getNext();\n        var otherCurrent = otherIter.getNext();\n\n        while (thisCurrent && otherCurrent) {\n          if (thisCurrent.name !== otherCurrent.name || !thisCurrent.node.equals(otherCurrent.node)) {\n            return false;\n          }\n\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  };\n  /**\r\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n   * instead.\r\n   *\r\n   * @private\r\n   * @param {!Index} indexDefinition\r\n   * @return {?SortedMap.<NamedNode, Node>}\r\n   */\n\n\n  ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  };\n  /**\r\n   * @private\r\n   * @type {RegExp}\r\n   */\n\n\n  ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n  return ChildrenNode;\n}();\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\n\n\nvar MaxNode =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MaxNode, _super);\n\n  function MaxNode() {\n    return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\n  }\n\n  MaxNode.prototype.compareTo = function (other) {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n\n  MaxNode.prototype.equals = function (other) {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  };\n\n  MaxNode.prototype.getPriority = function () {\n    return this;\n  };\n\n  MaxNode.prototype.getImmediateChild = function (childName) {\n    return ChildrenNode.EMPTY_NODE;\n  };\n\n  MaxNode.prototype.isEmpty = function () {\n    return false;\n  };\n\n  return MaxNode;\n}(ChildrenNode);\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\n\n\nvar MAX_NODE$2 = new MaxNode();\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE$2)\n  }\n});\n/**\r\n * Reference Extensions\r\n */\n\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE$2);\nsetMaxNode$1(MAX_NODE$2);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar USE_HINZE = true;\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\n\nfunction nodeFromJSON$1(json, priority) {\n  if (priority === void 0) {\n    priority = null;\n  }\n\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  util.assert(priority === null || typeof priority === 'string' || typeof priority === 'number' || typeof priority === 'object' && '.sv' in priority, 'Invalid priority type found: ' + typeof priority);\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  } // Valid leaf nodes include non-objects or server-value wrapper objects\n\n\n  if (typeof json !== 'object' || '.sv' in json) {\n    var jsonLeaf = json;\n    return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    var children_1 = [];\n    var childrenHavePriority_1 = false;\n    var hinzeJsonObj_1 = json;\n    util.forEach(hinzeJsonObj_1, function (key, child) {\n      if (typeof key !== 'string' || key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        var childNode = nodeFromJSON$1(hinzeJsonObj_1[key]);\n\n        if (!childNode.isEmpty()) {\n          childrenHavePriority_1 = childrenHavePriority_1 || !childNode.getPriority().isEmpty();\n          children_1.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children_1.length == 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) {\n      return namedNode.name;\n    }, NAME_COMPARATOR);\n\n    if (childrenHavePriority_1) {\n      var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({\n        '.priority': sortedChildSet\n      }, {\n        '.priority': PRIORITY_INDEX\n      }));\n    } else {\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\n    }\n  } else {\n    var node_1 = ChildrenNode.EMPTY_NODE;\n    var jsonObj_1 = json;\n    util.forEach(jsonObj_1, function (key, childData) {\n      if (util.contains(jsonObj_1, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          var childNode = nodeFromJSON$1(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) node_1 = node_1.updateImmediateChild(key, childNode);\n        }\n      }\n    });\n    return node_1.updatePriority(nodeFromJSON$1(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON$1);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\n\nvar ValueIndex =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ValueIndex, _super);\n\n  function ValueIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.compare = function (a, b) {\n    var indexCmp = a.node.compareTo(b.node);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.isDefinedOn = function (node) {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.equals(newNode);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.minPost = function () {\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.maxPost = function () {\n    return NamedNode.MAX;\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {string} name\r\n   * @return {!NamedNode}\r\n   */\n\n\n  ValueIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    return new NamedNode(name, valueNode);\n  };\n  /**\r\n   * @return {!string} String representation for inclusion in a query spec\r\n   */\n\n\n  ValueIndex.prototype.toString = function () {\n    return '.value';\n  };\n\n  return ValueIndex;\n}(Index);\n\nvar VALUE_INDEX = new ValueIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\n\nvar PathIndex =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(PathIndex, _super);\n\n  function PathIndex(indexPath_) {\n    var _this = _super.call(this) || this;\n\n    _this.indexPath_ = indexPath_;\n    util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\n    return _this;\n  }\n  /**\r\n   * @param {!Node} snap\r\n   * @return {!Node}\r\n   * @protected\r\n   */\n\n\n  PathIndex.prototype.extractChild = function (snap) {\n    return snap.getChild(this.indexPath_);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.isDefinedOn = function (node) {\n    return !node.getChild(this.indexPath_).isEmpty();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.compare = function (a, b) {\n    var aChild = this.extractChild(a.node);\n    var bChild = this.extractChild(b.node);\n    var indexCmp = aChild.compareTo(bChild);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\n    return new NamedNode(name, node);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.maxPost = function () {\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\n    return new NamedNode(MAX_NAME, node);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.toString = function () {\n    return this.indexPath_.slice().join('/');\n  };\n\n  return PathIndex;\n}(Index);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\n\n\nvar DataSnapshot =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Node} node_ A SnapshotNode to wrap.\r\n   * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n   * @param {!Index} index_ The iteration order for this snapshot\r\n   */\n  function DataSnapshot(node_, ref_, index_) {\n    this.node_ = node_;\n    this.ref_ = ref_;\n    this.index_ = index_;\n  }\n  /**\r\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n   * empty.\r\n   *\r\n   * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.val = function () {\n    util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n    return this.node_.val();\n  };\n  /**\r\n   * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n   * the entire node contents.\r\n   * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.exportVal = function () {\n    util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n    return this.node_.val(true);\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  DataSnapshot.prototype.toJSON = function () {\n    // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n    util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n    return this.exportVal();\n  };\n  /**\r\n   * Returns whether the snapshot contains a non-null value.\r\n   *\r\n   * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n   */\n\n\n  DataSnapshot.prototype.exists = function () {\n    util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n    return !this.node_.isEmpty();\n  };\n  /**\r\n   * Returns a DataSnapshot of the specified child node's contents.\r\n   *\r\n   * @param {!string} childPathString Path to a child.\r\n   * @return {!DataSnapshot} DataSnapshot for child node.\r\n   */\n\n\n  DataSnapshot.prototype.child = function (childPathString) {\n    util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length); // Ensure the childPath is a string (can be a number)\n\n    childPathString = String(childPathString);\n    validatePathString('DataSnapshot.child', 1, childPathString, false);\n    var childPath = new Path(childPathString);\n    var childRef = this.ref_.child(childPath);\n    return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\n  };\n  /**\r\n   * Returns whether the snapshot contains a child at the specified path.\r\n   *\r\n   * @param {!string} childPathString Path to a child.\r\n   * @return {boolean} Whether the child exists.\r\n   */\n\n\n  DataSnapshot.prototype.hasChild = function (childPathString) {\n    util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n    validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\n    var childPath = new Path(childPathString);\n    return !this.node_.getChild(childPath).isEmpty();\n  };\n  /**\r\n   * Returns the priority of the object, or null if no priority was set.\r\n   *\r\n   * @return {string|number|null} The priority.\r\n   */\n\n\n  DataSnapshot.prototype.getPriority = function () {\n    util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length); // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n\n    return this.node_.getPriority().val();\n  };\n  /**\r\n   * Iterates through child nodes and calls the specified action for each one.\r\n   *\r\n   * @param {function(!DataSnapshot)} action Callback function to be called\r\n   * for each child.\r\n   * @return {boolean} True if forEach was canceled by action returning true for\r\n   * one of the child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.forEach = function (action) {\n    var _this = this;\n\n    util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n    util.validateCallback('DataSnapshot.forEach', 1, action, false);\n    if (this.node_.isLeafNode()) return false;\n    var childrenNode = this.node_; // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n\n    return !!childrenNode.forEachChild(this.index_, function (key, node) {\n      return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\n    });\n  };\n  /**\r\n   * Returns whether this DataSnapshot has children.\r\n   * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.hasChildren = function () {\n    util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n    if (this.node_.isLeafNode()) return false;else return !this.node_.isEmpty();\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"key\", {\n    get: function get() {\n      return this.ref_.getKey();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns the number of children for this DataSnapshot.\r\n   * @return {number} The number of children that this DataSnapshot contains.\r\n   */\n\n  DataSnapshot.prototype.numChildren = function () {\n    util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n    return this.node_.numChildren();\n  };\n  /**\r\n   * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n   */\n\n\n  DataSnapshot.prototype.getRef = function () {\n    util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n    return this.ref_;\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n    get: function get() {\n      return this.getRef();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return DataSnapshot;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\n\n\nvar DataEvent =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n   * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n   * @param {!DataSnapshot} snapshot The data backing the event\r\n   * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n   */\n  function DataEvent(eventType, eventRegistration, snapshot, prevName) {\n    this.eventType = eventType;\n    this.eventRegistration = eventRegistration;\n    this.snapshot = snapshot;\n    this.prevName = prevName;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getPath = function () {\n    var ref = this.snapshot.getRef();\n\n    if (this.eventType === 'value') {\n      return ref.path;\n    } else {\n      return ref.getParent().path;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getEventType = function () {\n    return this.eventType;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.toString = function () {\n    return this.getPath().toString() + ':' + this.eventType + ':' + util.stringify(this.snapshot.exportVal());\n  };\n\n  return DataEvent;\n}();\n\nvar CancelEvent =\n/** @class */\nfunction () {\n  /**\r\n   * @param {EventRegistration} eventRegistration\r\n   * @param {Error} error\r\n   * @param {!Path} path\r\n   */\n  function CancelEvent(eventRegistration, error, path) {\n    this.eventRegistration = eventRegistration;\n    this.error = error;\n    this.path = path;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getPath = function () {\n    return this.path;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getEventType = function () {\n    return 'cancel';\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.toString = function () {\n    return this.path.toString() + ':cancel';\n  };\n\n  return CancelEvent;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents registration for 'value' events.\r\n */\n\n\nvar ValueEventRegistration =\n/** @class */\nfunction () {\n  /**\r\n   * @param {?function(!DataSnapshot)} callback_\r\n   * @param {?function(Error)} cancelCallback_\r\n   * @param {?Object} context_\r\n   */\n  function ValueEventRegistration(callback_, cancelCallback_, context_) {\n    this.callback_ = callback_;\n    this.cancelCallback_ = cancelCallback_;\n    this.context_ = context_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.respondsTo = function (eventType) {\n    return eventType === 'value';\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.createEvent = function (change, query) {\n    var index = query.getQueryParams().getIndex();\n    return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.getEventRunner = function (eventData) {\n    var ctx = this.context_;\n\n    if (eventData.getEventType() === 'cancel') {\n      util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n      var cancelCB_1 = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB_1.call(ctx, eventData.error);\n      };\n    } else {\n      var cb_1 = this.callback_;\n      return function () {\n        cb_1.call(ctx, eventData.snapshot);\n      };\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.matches = function (other) {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callback_ || !this.callback_) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callback_ === this.callback_ && other.context_ === this.context_;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callback_ !== null;\n  };\n\n  return ValueEventRegistration;\n}();\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\n\n\nvar ChildEventRegistration =\n/** @class */\nfunction () {\n  /**\r\n   * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n   * @param {?function(Error)} cancelCallback_\r\n   * @param {Object=} context_\r\n   */\n  function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\n    this.callbacks_ = callbacks_;\n    this.cancelCallback_ = cancelCallback_;\n    this.context_ = context_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.respondsTo = function (eventType) {\n    var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck = eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return util.contains(this.callbacks_, eventToCheck);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.createEvent = function (change, query) {\n    util.assert(change.childName != null, 'Child events should have a childName.');\n    var ref = query.getRef().child(\n    /** @type {!string} */\n    change.childName);\n    var index = query.getQueryParams().getIndex();\n    return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.getEventRunner = function (eventData) {\n    var ctx = this.context_;\n\n    if (eventData.getEventType() === 'cancel') {\n      util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n      var cancelCB_2 = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB_2.call(ctx, eventData.error);\n      };\n    } else {\n      var cb_2 = this.callbacks_[eventData.eventType];\n      return function () {\n        cb_2.call(ctx, eventData.snapshot, eventData.prevName);\n      };\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.matches = function (other) {\n    if (other instanceof ChildEventRegistration) {\n      if (!this.callbacks_ || !other.callbacks_) {\n        return true;\n      } else if (this.context_ === other.context_) {\n        var otherCount = util.getCount(other.callbacks_);\n        var thisCount = util.getCount(this.callbacks_);\n\n        if (otherCount === thisCount) {\n          // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n          //  If event types don't match, not a match\n          // If count is not 1, exact match across all\n          if (otherCount === 1) {\n            var otherKey\n            /** @type {!string} */\n            = util.getAnyKey(other.callbacks_);\n            var thisKey\n            /** @type {!string} */\n            = util.getAnyKey(this.callbacks_);\n            return thisKey === otherKey && (!other.callbacks_[otherKey] || !this.callbacks_[thisKey] || other.callbacks_[otherKey] === this.callbacks_[thisKey]);\n          } else {\n            // Exact match on each key.\n            return util.every(this.callbacks_, function (eventType, cb) {\n              return other.callbacks_[eventType] === cb;\n            });\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callbacks_ !== null;\n  };\n\n  return ChildEventRegistration;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __referenceConstructor;\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\n\n\nvar Query =\n/** @class */\nfunction () {\n  function Query(repo, path, queryParams_, orderByCalled_) {\n    this.repo = repo;\n    this.path = path;\n    this.queryParams_ = queryParams_;\n    this.orderByCalled_ = orderByCalled_;\n  }\n\n  Object.defineProperty(Query, \"__referenceConstructor\", {\n    get: function get() {\n      util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\n      return __referenceConstructor;\n    },\n    set: function set(val) {\n      __referenceConstructor = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Validates start/end values for queries.\r\n   * @param {!QueryParams} params\r\n   * @private\r\n   */\n\n  Query.validateQueryEndpoints_ = function (params) {\n    var startNode = null;\n    var endNode = null;\n\n    if (params.hasStart()) {\n      startNode = params.getIndexStartValue();\n    }\n\n    if (params.hasEnd()) {\n      endNode = params.getIndexEndValue();\n    }\n\n    if (params.getIndex() === KEY_INDEX) {\n      var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' + 'startAt(), endAt(), or equalTo().';\n      var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' + 'or equalTo() must be a string.';\n\n      if (params.hasStart()) {\n        var startName = params.getIndexStartName();\n\n        if (startName != MIN_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof startNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n\n      if (params.hasEnd()) {\n        var endName = params.getIndexEndName();\n\n        if (endName != MAX_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof endNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n    } else if (params.getIndex() === PRIORITY_INDEX) {\n      if (startNode != null && !isValidPriority(startNode) || endNode != null && !isValidPriority(endNode)) {\n        throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' + 'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\n      }\n    } else {\n      util.assert(params.getIndex() instanceof PathIndex || params.getIndex() === VALUE_INDEX, 'unknown index type.');\n\n      if (startNode != null && typeof startNode === 'object' || endNode != null && typeof endNode === 'object') {\n        throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' + 'an object.');\n      }\n    }\n  };\n  /**\r\n   * Validates that limit* has been called with the correct combination of parameters\r\n   * @param {!QueryParams} params\r\n   * @private\r\n   */\n\n\n  Query.validateLimit_ = function (params) {\n    if (params.hasStart() && params.hasEnd() && params.hasLimit() && !params.hasAnchoredLimit()) {\n      throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\n    }\n  };\n  /**\r\n   * Validates that no other order by call has been made\r\n   * @param {!string} fnName\r\n   * @private\r\n   */\n\n\n  Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\n    if (this.orderByCalled_ === true) {\n      throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n    }\n  };\n  /**\r\n   * @return {!QueryParams}\r\n   */\n\n\n  Query.prototype.getQueryParams = function () {\n    return this.queryParams_;\n  };\n  /**\r\n   * @return {!Reference}\r\n   */\n\n\n  Query.prototype.getRef = function () {\n    util.validateArgCount('Query.ref', 0, 0, arguments.length); // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\n    // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\n    // method gets called.\n\n    return new Query.__referenceConstructor(this.repo, this.path);\n  };\n  /**\r\n   * @param {!string} eventType\r\n   * @param {!function(DataSnapshot, string=)} callback\r\n   * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n   * @param {Object=} context\r\n   * @return {!function(DataSnapshot, string=)}\r\n   */\n\n\n  Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\n    util.validateArgCount('Query.on', 2, 4, arguments.length);\n    validateEventType('Query.on', 1, eventType, false);\n    util.validateCallback('Query.on', 2, callback, false);\n    var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\n\n    if (eventType === 'value') {\n      this.onValueEvent(callback, ret.cancel, ret.context);\n    } else {\n      var callbacks = {};\n      callbacks[eventType] = callback;\n      this.onChildEvent(callbacks, ret.cancel, ret.context);\n    }\n\n    return callback;\n  };\n  /**\r\n   * @param {!function(!DataSnapshot)} callback\r\n   * @param {?function(Error)} cancelCallback\r\n   * @param {?Object} context\r\n   * @protected\r\n   */\n\n\n  Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\n    var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\n    this.repo.addEventCallbackForQuery(this, container);\n  };\n  /**\r\n   * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n   * @param {?function(Error)} cancelCallback\r\n   * @param {?Object} context\r\n   * @protected\r\n   */\n\n\n  Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\n    var container = new ChildEventRegistration(callbacks, cancelCallback, context);\n    this.repo.addEventCallbackForQuery(this, container);\n  };\n  /**\r\n   * @param {string=} eventType\r\n   * @param {(function(!DataSnapshot, ?string=))=} callback\r\n   * @param {Object=} context\r\n   */\n\n\n  Query.prototype.off = function (eventType, callback, context) {\n    util.validateArgCount('Query.off', 0, 3, arguments.length);\n    validateEventType('Query.off', 1, eventType, true);\n    util.validateCallback('Query.off', 2, callback, true);\n    util.validateContextObject('Query.off', 3, context, true);\n    var container = null;\n    var callbacks = null;\n\n    if (eventType === 'value') {\n      var valueCallback = callback || null;\n      container = new ValueEventRegistration(valueCallback, null, context || null);\n    } else if (eventType) {\n      if (callback) {\n        callbacks = {};\n        callbacks[eventType] = callback;\n      }\n\n      container = new ChildEventRegistration(callbacks, null, context || null);\n    }\n\n    this.repo.removeEventCallbackForQuery(this, container);\n  };\n  /**\r\n   * Attaches a listener, waits for the first event, and then removes the listener\r\n   * @param {!string} eventType\r\n   * @param {!function(!DataSnapshot, string=)} userCallback\r\n   * @param cancelOrContext\r\n   * @param context\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {\n    var _this = this;\n\n    util.validateArgCount('Query.once', 1, 4, arguments.length);\n    validateEventType('Query.once', 1, eventType, false);\n    util.validateCallback('Query.once', 2, userCallback, true);\n    var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context); // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\n    // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\n    // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\n    // against the Promise specification.\n\n    var firstCall = true;\n    var deferred = new util.Deferred(); // A dummy error handler in case a user wasn't expecting promises\n\n    deferred.promise[\"catch\"](function () {});\n\n    var onceCallback = function onceCallback(snapshot) {\n      // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\n      // triggers multiple events (e.g. child_added or child_changed).\n      if (firstCall) {\n        firstCall = false;\n\n        _this.off(eventType, onceCallback);\n\n        if (userCallback) {\n          userCallback.bind(ret.context)(snapshot);\n        }\n\n        deferred.resolve(snapshot);\n      }\n    };\n\n    this.on(eventType, onceCallback,\n    /*cancel=*/\n    function (err) {\n      _this.off(eventType, onceCallback);\n\n      if (ret.cancel) ret.cancel.bind(ret.context)(err);\n      deferred.reject(err);\n    });\n    return deferred.promise;\n  };\n  /**\r\n   * Set a limit and anchor it to the start of the window.\r\n   * @param {!number} limit\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.limitToFirst = function (limit) {\n    util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n      throw new Error('Query.limitToFirst: First argument must be a positive integer.');\n    }\n\n    if (this.queryParams_.hasLimit()) {\n      throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n    }\n\n    return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\n  };\n  /**\r\n   * Set a limit and anchor it to the end of the window.\r\n   * @param {!number} limit\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.limitToLast = function (limit) {\n    util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n      throw new Error('Query.limitToLast: First argument must be a positive integer.');\n    }\n\n    if (this.queryParams_.hasLimit()) {\n      throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n    }\n\n    return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\n  };\n  /**\r\n   * Given a child path, return a new query ordered by the specified grandchild path.\r\n   * @param {!string} path\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByChild = function (path) {\n    util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n\n    if (path === '$key') {\n      throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\n    } else if (path === '$priority') {\n      throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\n    } else if (path === '$value') {\n      throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\n    }\n\n    validatePathString('Query.orderByChild', 1, path, false);\n    this.validateNoPreviousOrderByCall_('Query.orderByChild');\n    var parsedPath = new Path(path);\n\n    if (parsedPath.isEmpty()) {\n      throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\n    }\n\n    var index = new PathIndex(parsedPath);\n    var newParams = this.queryParams_.orderBy(index);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the KeyIndex\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByKey = function () {\n    util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByKey');\n    var newParams = this.queryParams_.orderBy(KEY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the PriorityIndex\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByPriority = function () {\n    util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByPriority');\n    var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the ValueIndex\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByValue = function () {\n    util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByValue');\n    var newParams = this.queryParams_.orderBy(VALUE_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * @param {number|string|boolean|null} value\r\n   * @param {?string=} name\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.startAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    util.validateArgCount('Query.startAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\n    validateKey('Query.startAt', 2, name, true);\n    var newParams = this.queryParams_.startAt(value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' + 'or equalTo).');\n    } // Calling with no params tells us to start at the beginning.\n\n\n    if (value === undefined) {\n      value = null;\n      name = null;\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n  /**\r\n   * @param {number|string|boolean|null} value\r\n   * @param {?string=} name\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.endAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    util.validateArgCount('Query.endAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\n    validateKey('Query.endAt', 2, name, true);\n    var newParams = this.queryParams_.endAt(value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' + 'equalTo).');\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n  /**\r\n   * Load the selection of children with exactly the specified value, and, optionally,\r\n   * the specified name.\r\n   * @param {number|string|boolean|null} value\r\n   * @param {string=} name\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.equalTo = function (value, name) {\n    util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\n    validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\n    validateKey('Query.equalTo', 2, name, true);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' + 'equalTo).');\n    }\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' + 'equalTo).');\n    }\n\n    return this.startAt(value, name).endAt(value, name);\n  };\n  /**\r\n   * @return {!string} URL for this location.\r\n   */\n\n\n  Query.prototype.toString = function () {\n    util.validateArgCount('Query.toString', 0, 0, arguments.length);\n    return this.repo.toString() + this.path.toUrlEncodedString();\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users.\n\n\n  Query.prototype.toJSON = function () {\n    // An optional spacer argument is unnecessary for a string.\n    util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\n    return this.toString();\n  };\n  /**\r\n   * An object representation of the query parameters used by this Query.\r\n   * @return {!Object}\r\n   */\n\n\n  Query.prototype.queryObject = function () {\n    return this.queryParams_.getQueryObject();\n  };\n  /**\r\n   * @return {!string}\r\n   */\n\n\n  Query.prototype.queryIdentifier = function () {\n    var obj = this.queryObject();\n    var id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  };\n  /**\r\n   * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n   * @param {Query} other\r\n   * @return {boolean}\r\n   */\n\n\n  Query.prototype.isEqual = function (other) {\n    util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\n\n    if (!(other instanceof Query)) {\n      var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n      throw new Error(error);\n    }\n\n    var sameRepo = this.repo === other.repo;\n    var samePath = this.path.equals(other.path);\n    var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\n    return sameRepo && samePath && sameQueryIdentifier;\n  };\n  /**\r\n   * Helper used by .on and .once to extract the context and or cancel arguments.\r\n   * @param {!string} fnName The function name (on or once)\r\n   * @param {(function(Error)|Object)=} cancelOrContext\r\n   * @param {Object=} context\r\n   * @return {{cancel: ?function(Error), context: ?Object}}\r\n   * @private\r\n   */\n\n\n  Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\n    var ret = {\n      cancel: null,\n      context: null\n    };\n\n    if (cancelOrContext && context) {\n      ret.cancel = cancelOrContext;\n      util.validateCallback(fnName, 3, ret.cancel, true);\n      ret.context = context;\n      util.validateContextObject(fnName, 4, ret.context, true);\n    } else if (cancelOrContext) {\n      // we have either a cancel callback or a context.\n      if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n        // it's a context!\n        ret.context = cancelOrContext;\n      } else if (typeof cancelOrContext === 'function') {\n        ret.cancel = cancelOrContext;\n      } else {\n        throw new Error(util.errorPrefix(fnName, 3, true) + ' must either be a cancel callback or a context object.');\n      }\n    }\n\n    return ret;\n  };\n\n  Object.defineProperty(Query.prototype, \"ref\", {\n    get: function get() {\n      return this.getRef();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Query;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Implements a set with a count of elements.\r\n *\r\n * @template K, V\r\n */\n\n\nvar CountedSet =\n/** @class */\nfunction () {\n  function CountedSet() {\n    this.set = {};\n  }\n  /**\r\n   * @param {!K} item\r\n   * @param {V} val\r\n   */\n\n\n  CountedSet.prototype.add = function (item, val) {\n    this.set[item] = val !== null ? val : true;\n  };\n  /**\r\n   * @param {!K} key\r\n   * @return {boolean}\r\n   */\n\n\n  CountedSet.prototype.contains = function (key) {\n    return util.contains(this.set, key);\n  };\n  /**\r\n   * @param {!K} item\r\n   * @return {V}\r\n   */\n\n\n  CountedSet.prototype.get = function (item) {\n    return this.contains(item) ? this.set[item] : undefined;\n  };\n  /**\r\n   * @param {!K} item\r\n   */\n\n\n  CountedSet.prototype.remove = function (item) {\n    delete this.set[item];\n  };\n  /**\r\n   * Deletes everything in the set\r\n   */\n\n\n  CountedSet.prototype.clear = function () {\n    this.set = {};\n  };\n  /**\r\n   * True if there's nothing in the set\r\n   * @return {boolean}\r\n   */\n\n\n  CountedSet.prototype.isEmpty = function () {\n    return util.isEmpty(this.set);\n  };\n  /**\r\n   * @return {number} The number of items in the set\r\n   */\n\n\n  CountedSet.prototype.count = function () {\n    return util.getCount(this.set);\n  };\n  /**\r\n   * Run a function on each k,v pair in the set\r\n   * @param {function(K, V)} fn\r\n   */\n\n\n  CountedSet.prototype.each = function (fn) {\n    util.forEach(this.set, function (k, v) {\n      return fn(k, v);\n    });\n  };\n  /**\r\n   * Mostly for debugging\r\n   * @return {Array.<K>} The keys present in this CountedSet\r\n   */\n\n\n  CountedSet.prototype.keys = function () {\n    var keys = [];\n    util.forEach(this.set, function (k) {\n      keys.push(k);\n    });\n    return keys;\n  };\n\n  return CountedSet;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n *\r\n * @constructor\r\n */\n\n\nvar SparseSnapshotTree =\n/** @class */\nfunction () {\n  function SparseSnapshotTree() {\n    /**\r\n     * @private\r\n     * @type {Node}\r\n     */\n    this.value_ = null;\n    /**\r\n     * @private\r\n     * @type {CountedSet}\r\n     */\n\n    this.children_ = null;\n  }\n  /**\r\n   * Gets the node stored at the given path if one exists.\r\n   *\r\n   * @param {!Path} path Path to look up snapshot for.\r\n   * @return {?Node} The retrieved node, or null.\r\n   */\n\n\n  SparseSnapshotTree.prototype.find = function (path) {\n    if (this.value_ != null) {\n      return this.value_.getChild(path);\n    } else if (!path.isEmpty() && this.children_ != null) {\n      var childKey = path.getFront();\n      path = path.popFront();\n\n      if (this.children_.contains(childKey)) {\n        var childTree = this.children_.get(childKey);\n        return childTree.find(path);\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Stores the given node at the specified path. If there is already a node\r\n   * at a shallower path, it merges the new data into that snapshot node.\r\n   *\r\n   * @param {!Path} path Path to look up snapshot for.\r\n   * @param {!Node} data The new data, or null.\r\n   */\n\n\n  SparseSnapshotTree.prototype.remember = function (path, data) {\n    if (path.isEmpty()) {\n      this.value_ = data;\n      this.children_ = null;\n    } else if (this.value_ !== null) {\n      this.value_ = this.value_.updateChild(path, data);\n    } else {\n      if (this.children_ == null) {\n        this.children_ = new CountedSet();\n      }\n\n      var childKey = path.getFront();\n\n      if (!this.children_.contains(childKey)) {\n        this.children_.add(childKey, new SparseSnapshotTree());\n      }\n\n      var child = this.children_.get(childKey);\n      path = path.popFront();\n      child.remember(path, data);\n    }\n  };\n  /**\r\n   * Purge the data at path from the cache.\r\n   *\r\n   * @param {!Path} path Path to look up snapshot for.\r\n   * @return {boolean} True if this node should now be removed.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forget = function (path) {\n    if (path.isEmpty()) {\n      this.value_ = null;\n      this.children_ = null;\n      return true;\n    } else {\n      if (this.value_ !== null) {\n        if (this.value_.isLeafNode()) {\n          // We're trying to forget a node that doesn't exist\n          return false;\n        } else {\n          var value = this.value_;\n          this.value_ = null;\n          var self_1 = this;\n          value.forEachChild(PRIORITY_INDEX, function (key, tree) {\n            self_1.remember(new Path(key), tree);\n          });\n          return this.forget(path);\n        }\n      } else if (this.children_ !== null) {\n        var childKey = path.getFront();\n        path = path.popFront();\n\n        if (this.children_.contains(childKey)) {\n          var safeToRemove = this.children_.get(childKey).forget(path);\n\n          if (safeToRemove) {\n            this.children_.remove(childKey);\n          }\n        }\n\n        if (this.children_.isEmpty()) {\n          this.children_ = null;\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        return true;\n      }\n    }\n  };\n  /**\r\n   * Recursively iterates through all of the stored tree and calls the\r\n   * callback on each one.\r\n   *\r\n   * @param {!Path} prefixPath Path to look up node for.\r\n   * @param {!Function} func The function to invoke for each tree.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\n    if (this.value_ !== null) {\n      func(prefixPath, this.value_);\n    } else {\n      this.forEachChild(function (key, tree) {\n        var path = new Path(prefixPath.toString() + '/' + key);\n        tree.forEachTree(path, func);\n      });\n    }\n  };\n  /**\r\n   * Iterates through each immediate child and triggers the callback.\r\n   *\r\n   * @param {!Function} func The function to invoke for each child.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forEachChild = function (func) {\n    if (this.children_ !== null) {\n      this.children_.each(function (key, tree) {\n        func(key, tree);\n      });\n    }\n  };\n\n  return SparseSnapshotTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\n\n\nvar generateWithValues = function generateWithValues(values) {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\n\n\nvar resolveDeferredValue = function resolveDeferredValue(value, serverValues) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  } else {\n    util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\n    return serverValues[value['.sv']];\n  }\n};\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!SparseSnapshotTree} tree\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\n\n\nvar resolveDeferredValueTree = function resolveDeferredValueTree(tree, serverValues) {\n  var resolvedTree = new SparseSnapshotTree();\n  tree.forEachTree(new Path(''), function (path, node) {\n    resolvedTree.remember(path, resolveDeferredValueSnapshot(node, serverValues));\n  });\n  return resolvedTree;\n};\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\n\n\nvar resolveDeferredValueSnapshot = function resolveDeferredValueSnapshot(node, serverValues) {\n  var rawPri = node.getPriority().val();\n  var priority = resolveDeferredValue(rawPri, serverValues);\n  var newNode;\n\n  if (node.isLeafNode()) {\n    var leafNode = node;\n    var value = resolveDeferredValue(leafNode.getValue(), serverValues);\n\n    if (value !== leafNode.getValue() || priority !== leafNode.getPriority().val()) {\n      return new LeafNode(value, nodeFromJSON$1(priority));\n    } else {\n      return node;\n    }\n  } else {\n    var childrenNode = node;\n    newNode = childrenNode;\n\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n\n    childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n      var newChildNode = resolveDeferredValueSnapshot(childNode, serverValues);\n\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n};\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @enum\r\n */\n\n\nvar OperationType;\n\n(function (OperationType) {\n  OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\n  OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\n  OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\n  OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\n})(OperationType || (OperationType = {}));\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\n\n\nvar OperationSource =\n/** @class */\nfunction () {\n  function OperationSource(fromUser, fromServer, queryId, tagged) {\n    this.fromUser = fromUser;\n    this.fromServer = fromServer;\n    this.queryId = queryId;\n    this.tagged = tagged;\n    util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\n  }\n  /**\r\n   * @const\r\n   * @type {!OperationSource}\r\n   */\n\n\n  OperationSource.User = new OperationSource(\n  /*fromUser=*/\n  true, false, null,\n  /*tagged=*/\n  false);\n  /**\r\n   * @const\r\n   * @type {!OperationSource}\r\n   */\n\n  OperationSource.Server = new OperationSource(false,\n  /*fromServer=*/\n  true, null,\n  /*tagged=*/\n  false);\n  /**\r\n   * @param {string} queryId\r\n   * @return {!OperationSource}\r\n   */\n\n  OperationSource.forServerTaggedQuery = function (queryId) {\n    return new OperationSource(false,\n    /*fromServer=*/\n    true, queryId,\n    /*tagged=*/\n    true);\n  };\n\n  return OperationSource;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar AckUserWrite =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n   * @param {!boolean} revert\r\n   */\n  function AckUserWrite(\n  /**@inheritDoc */\n  path,\n  /**@inheritDoc */\n  affectedTree,\n  /**@inheritDoc */\n  revert) {\n    this.path = path;\n    this.affectedTree = affectedTree;\n    this.revert = revert;\n    /** @inheritDoc */\n\n    this.type = OperationType.ACK_USER_WRITE;\n    /** @inheritDoc */\n\n    this.source = OperationSource.User;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  AckUserWrite.prototype.operationForChild = function (childName) {\n    if (!this.path.isEmpty()) {\n      util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\n      return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\n    } else if (this.affectedTree.value != null) {\n      util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.'); // All child locations are affected as well; just return same operation.\n\n      return this;\n    } else {\n      var childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(Path.Empty, childTree, this.revert);\n    }\n  };\n\n  return AckUserWrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar emptyChildrenSingleton;\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\n\nvar EmptyChildren = function EmptyChildren() {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap(stringCompare);\n  }\n\n  return emptyChildrenSingleton;\n};\n/**\r\n * A tree with immutable elements.\r\n */\n\n\nvar ImmutableTree =\n/** @class */\nfunction () {\n  /**\r\n   * @template T\r\n   * @param {?T} value\r\n   * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n   */\n  function ImmutableTree(value, children) {\n    if (children === void 0) {\n      children = EmptyChildren();\n    }\n\n    this.value = value;\n    this.children = children;\n  }\n  /**\r\n   * @template T\r\n   * @param {!Object.<string, !T>} obj\r\n   * @return {!ImmutableTree.<!T>}\r\n   */\n\n\n  ImmutableTree.fromObject = function (obj) {\n    var tree = ImmutableTree.Empty;\n    util.forEach(obj, function (childPath, childSnap) {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  };\n  /**\r\n   * True if the value is empty and there are no children\r\n   * @return {boolean}\r\n   */\n\n\n  ImmutableTree.prototype.isEmpty = function () {\n    return this.value === null && this.children.isEmpty();\n  };\n  /**\r\n   * Given a path and predicate, return the first node and the path to that node\r\n   * where the predicate returns true.\r\n   *\r\n   * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n   * on the way back out, it may be better to pass down a pathSoFar obj.\r\n   *\r\n   * @param {!Path} relativePath The remainder of the path\r\n   * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n   *   node\r\n   * @return {?{path:!Path, value:!T}}\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\n    if (this.value != null && predicate(this.value)) {\n      return {\n        path: Path.Empty,\n        value: this.value\n      };\n    } else {\n      if (relativePath.isEmpty()) {\n        return null;\n      } else {\n        var front = relativePath.getFront();\n        var child = this.children.get(front);\n\n        if (child !== null) {\n          var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\n\n          if (childExistingPathAndValue != null) {\n            var fullPath = new Path(front).child(childExistingPathAndValue.path);\n            return {\n              path: fullPath,\n              value: childExistingPathAndValue.value\n            };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  /**\r\n   * Find, if it exists, the shortest subpath of the given path that points a defined\r\n   * value in the tree\r\n   * @param {!Path} relativePath\r\n   * @return {?{path: !Path, value: !T}}\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\n    return this.findRootMostMatchingPathAndValue(relativePath, function () {\n      return true;\n    });\n  };\n  /**\r\n   * @param {!Path} relativePath\r\n   * @return {!ImmutableTree.<T>} The subtree at the given path\r\n   */\n\n\n  ImmutableTree.prototype.subtree = function (relativePath) {\n    if (relativePath.isEmpty()) {\n      return this;\n    } else {\n      var front = relativePath.getFront();\n      var childTree = this.children.get(front);\n\n      if (childTree !== null) {\n        return childTree.subtree(relativePath.popFront());\n      } else {\n        return ImmutableTree.Empty;\n      }\n    }\n  };\n  /**\r\n   * Sets a value at the specified path.\r\n   *\r\n   * @param {!Path} relativePath Path to set value at.\r\n   * @param {?T} toSet Value to set.\r\n   * @return {!ImmutableTree.<T>} Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.set = function (relativePath, toSet) {\n    if (relativePath.isEmpty()) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front) || ImmutableTree.Empty;\n      var newChild = child.set(relativePath.popFront(), toSet);\n      var newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Removes the value at the specified path.\r\n   *\r\n   * @param {!Path} relativePath Path to value to remove.\r\n   * @return {!ImmutableTree.<T>} Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.remove = function (relativePath) {\n    if (relativePath.isEmpty()) {\n      if (this.children.isEmpty()) {\n        return ImmutableTree.Empty;\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front);\n\n      if (child) {\n        var newChild = child.remove(relativePath.popFront());\n        var newChildren = void 0;\n\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n\n        if (this.value === null && newChildren.isEmpty()) {\n          return ImmutableTree.Empty;\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  };\n  /**\r\n   * Gets a value from the tree.\r\n   *\r\n   * @param {!Path} relativePath Path to get value for.\r\n   * @return {?T} Value at path, or null.\r\n   */\n\n\n  ImmutableTree.prototype.get = function (relativePath) {\n    if (relativePath.isEmpty()) {\n      return this.value;\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front);\n\n      if (child) {\n        return child.get(relativePath.popFront());\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Replace the subtree at the specified path with the given new tree.\r\n   *\r\n   * @param {!Path} relativePath Path to replace subtree for.\r\n   * @param {!ImmutableTree} newTree New tree.\r\n   * @return {!ImmutableTree} Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.setTree = function (relativePath, newTree) {\n    if (relativePath.isEmpty()) {\n      return newTree;\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front) || ImmutableTree.Empty;\n      var newChild = child.setTree(relativePath.popFront(), newTree);\n      var newChildren = void 0;\n\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Performs a depth first fold on this tree. Transforms a tree into a single\r\n   * value, given a function that operates on the path to a node, an optional\r\n   * current value, and a map of child names to folded subtrees\r\n   * @template V\r\n   * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n   * @return {V}\r\n   */\n\n\n  ImmutableTree.prototype.fold = function (fn) {\n    return this.fold_(Path.Empty, fn);\n  };\n  /**\r\n   * Recursive helper for public-facing fold() method\r\n   * @template V\r\n   * @param {!Path} pathSoFar\r\n   * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n   * @return {V}\r\n   * @private\r\n   */\n\n\n  ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\n    var accum = {};\n    this.children.inorderTraversal(function (childKey, childTree) {\n      accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\n    });\n    return fn(pathSoFar, this.value, accum);\n  };\n  /**\r\n   * Find the first matching value on the given path. Return the result of applying f to it.\r\n   * @template V\r\n   * @param {!Path} path\r\n   * @param {!function(!Path, !T):?V} f\r\n   * @return {?V}\r\n   */\n\n\n  ImmutableTree.prototype.findOnPath = function (path, f) {\n    return this.findOnPath_(path, Path.Empty, f);\n  };\n\n  ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\n    var result = this.value ? f(pathSoFar, this.value) : false;\n\n    if (result) {\n      return result;\n    } else {\n      if (pathToFollow.isEmpty()) {\n        return null;\n      } else {\n        var front = pathToFollow.getFront();\n        var nextChild = this.children.get(front);\n\n        if (nextChild) {\n          return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  /**\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!function(!Path, !T)} f\r\n   * @returns {!ImmutableTree.<T>}\r\n   */\n\n\n  ImmutableTree.prototype.foreachOnPath = function (path, f) {\n    return this.foreachOnPath_(path, Path.Empty, f);\n  };\n\n  ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\n    if (pathToFollow.isEmpty()) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n\n      var front = pathToFollow.getFront();\n      var nextChild = this.children.get(front);\n\n      if (nextChild) {\n        return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\n      } else {\n        return ImmutableTree.Empty;\n      }\n    }\n  };\n  /**\r\n   * Calls the given function for each node in the tree that has a value.\r\n   *\r\n   * @param {function(!Path, !T)} f A function to be called with\r\n   *   the path from the root of the tree to a node, and the value at that node.\r\n   *   Called in depth-first order.\r\n   */\n\n\n  ImmutableTree.prototype.foreach = function (f) {\n    this.foreach_(Path.Empty, f);\n  };\n\n  ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      childTree.foreach_(currentRelativePath.child(childName), f);\n    });\n\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  };\n  /**\r\n   *\r\n   * @param {function(string, !T)} f\r\n   */\n\n\n  ImmutableTree.prototype.foreachChild = function (f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value) {\n        f(childName, childTree.value);\n      }\n    });\n  };\n\n  ImmutableTree.Empty = new ImmutableTree(null);\n  return ImmutableTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\n\n\nvar ListenComplete =\n/** @class */\nfunction () {\n  function ListenComplete(source, path) {\n    this.source = source;\n    this.path = path;\n    /** @inheritDoc */\n\n    this.type = OperationType.LISTEN_COMPLETE;\n  }\n\n  ListenComplete.prototype.operationForChild = function (childName) {\n    if (this.path.isEmpty()) {\n      return new ListenComplete(this.source, Path.Empty);\n    } else {\n      return new ListenComplete(this.source, this.path.popFront());\n    }\n  };\n\n  return ListenComplete;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\n\n\nvar Overwrite =\n/** @class */\nfunction () {\n  function Overwrite(source, path, snap) {\n    this.source = source;\n    this.path = path;\n    this.snap = snap;\n    /** @inheritDoc */\n\n    this.type = OperationType.OVERWRITE;\n  }\n\n  Overwrite.prototype.operationForChild = function (childName) {\n    if (this.path.isEmpty()) {\n      return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\n    } else {\n      return new Overwrite(this.source, this.path.popFront(), this.snap);\n    }\n  };\n\n  return Overwrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\n\n\nvar Merge =\n/** @class */\nfunction () {\n  function Merge(\n  /**@inheritDoc */\n  source,\n  /**@inheritDoc */\n  path,\n  /**@inheritDoc */\n  children) {\n    this.source = source;\n    this.path = path;\n    this.children = children;\n    /** @inheritDoc */\n\n    this.type = OperationType.MERGE;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  Merge.prototype.operationForChild = function (childName) {\n    if (this.path.isEmpty()) {\n      var childTree = this.children.subtree(new Path(childName));\n\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, Path.Empty, childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, Path.Empty, childTree);\n      }\n    } else {\n      util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\n      return new Merge(this.source, this.path.popFront(), this.children);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  Merge.prototype.toString = function () {\n    return 'Operation(' + this.path + ': ' + this.source.toString() + ' merge: ' + this.children.toString() + ')';\n  };\n\n  return Merge;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\n\n\nvar CacheNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Node} node_\r\n   * @param {boolean} fullyInitialized_\r\n   * @param {boolean} filtered_\r\n   */\n  function CacheNode(node_, fullyInitialized_, filtered_) {\n    this.node_ = node_;\n    this.fullyInitialized_ = fullyInitialized_;\n    this.filtered_ = filtered_;\n  }\n  /**\r\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isFullyInitialized = function () {\n    return this.fullyInitialized_;\n  };\n  /**\r\n   * Returns whether this node is potentially missing children due to a filter applied to the node\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isFiltered = function () {\n    return this.filtered_;\n  };\n  /**\r\n   * @param {!Path} path\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isCompleteForPath = function (path) {\n    if (path.isEmpty()) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    var childKey = path.getFront();\n    return this.isCompleteForChild(childKey);\n  };\n  /**\r\n   * @param {!string} key\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isCompleteForChild = function (key) {\n    return this.isFullyInitialized() && !this.filtered_ || this.node_.hasChild(key);\n  };\n  /**\r\n   * @return {!Node}\r\n   */\n\n\n  CacheNode.prototype.getNode = function () {\n    return this.node_;\n  };\n\n  return CacheNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\n\n\nvar ViewCache =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!CacheNode} eventCache_\r\n   * @param {!CacheNode} serverCache_\r\n   */\n  function ViewCache(eventCache_, serverCache_) {\n    this.eventCache_ = eventCache_;\n    this.serverCache_ = serverCache_;\n  }\n  /**\r\n   * @param {!Node} eventSnap\r\n   * @param {boolean} complete\r\n   * @param {boolean} filtered\r\n   * @return {!ViewCache}\r\n   */\n\n\n  ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\n    return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\n  };\n  /**\r\n   * @param {!Node} serverSnap\r\n   * @param {boolean} complete\r\n   * @param {boolean} filtered\r\n   * @return {!ViewCache}\r\n   */\n\n\n  ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\n    return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\n  };\n  /**\r\n   * @return {!CacheNode}\r\n   */\n\n\n  ViewCache.prototype.getEventCache = function () {\n    return this.eventCache_;\n  };\n  /**\r\n   * @return {?Node}\r\n   */\n\n\n  ViewCache.prototype.getCompleteEventSnap = function () {\n    return this.eventCache_.isFullyInitialized() ? this.eventCache_.getNode() : null;\n  };\n  /**\r\n   * @return {!CacheNode}\r\n   */\n\n\n  ViewCache.prototype.getServerCache = function () {\n    return this.serverCache_;\n  };\n  /**\r\n   * @return {?Node}\r\n   */\n\n\n  ViewCache.prototype.getCompleteServerSnap = function () {\n    return this.serverCache_.isFullyInitialized() ? this.serverCache_.getNode() : null;\n  };\n  /**\r\n   * @const\r\n   * @type {ViewCache}\r\n   */\n\n\n  ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE,\n  /*fullyInitialized=*/\n  false,\n  /*filtered=*/\n  false), new CacheNode(ChildrenNode.EMPTY_NODE,\n  /*fullyInitialized=*/\n  false,\n  /*filtered=*/\n  false));\n  return ViewCache;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\n\n\nvar Change =\n/** @class */\nfunction () {\n  function Change(type, snapshotNode, childName, oldSnap, prevName) {\n    this.type = type;\n    this.snapshotNode = snapshotNode;\n    this.childName = childName;\n    this.oldSnap = oldSnap;\n    this.prevName = prevName;\n  }\n  /**\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.valueChange = function (snapshot) {\n    return new Change(Change.VALUE, snapshot);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childAddedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_ADDED, snapshot, childKey);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childRemovedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_REMOVED, snapshot, childKey);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} newSnapshot\r\n   * @param {!Node} oldSnapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\n    return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childMovedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_MOVED, snapshot, childKey);\n  }; //event types\n\n  /** Event type for a child added */\n\n\n  Change.CHILD_ADDED = 'child_added';\n  /** Event type for a child removed */\n\n  Change.CHILD_REMOVED = 'child_removed';\n  /** Event type for a child changed */\n\n  Change.CHILD_CHANGED = 'child_changed';\n  /** Event type for a child moved */\n\n  Change.CHILD_MOVED = 'child_moved';\n  /** Event type for a value change */\n\n  Change.VALUE = 'value';\n  return Change;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\n\n\nvar IndexedFilter =\n/** @class */\nfunction () {\n  function IndexedFilter(index_) {\n    this.index_ = index_;\n  }\n\n  IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\n    var oldChild = snap.getImmediateChild(key); // Check if anything actually changed.\n\n    if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() == newChild.isEmpty()) {\n        // Nothing changed.\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\n        } else {\n          util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\n      }\n    }\n\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\n          }\n        });\n      }\n\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (oldSnap.hasChild(key)) {\n            var oldChild = oldSnap.getImmediateChild(key);\n\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\n          }\n        });\n      }\n    }\n\n    return newSnap.withIndex(this.index_);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.filtersNodes = function () {\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.getIndexedFilter = function () {\n    return this;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  return IndexedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n */\n\n\nvar ChildChangeAccumulator =\n/** @class */\nfunction () {\n  function ChildChangeAccumulator() {\n    this.changeMap_ = {};\n  }\n  /**\r\n   * @param {!Change} change\r\n   */\n\n\n  ChildChangeAccumulator.prototype.trackChildChange = function (change) {\n    var type = change.type;\n    var childKey\n    /** @type {!string} */\n    = change.childName;\n    util.assert(type == Change.CHILD_ADDED || type == Change.CHILD_CHANGED || type == Change.CHILD_REMOVED, 'Only child changes supported for tracking');\n    util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\n    var oldChange = util.safeGet(this.changeMap_, childKey);\n\n    if (oldChange) {\n      var oldType = oldChange.type;\n\n      if (type == Change.CHILD_ADDED && oldType == Change.CHILD_REMOVED) {\n        this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);\n      } else if (type == Change.CHILD_REMOVED && oldType == Change.CHILD_ADDED) {\n        delete this.changeMap_[childKey];\n      } else if (type == Change.CHILD_REMOVED && oldType == Change.CHILD_CHANGED) {\n        this.changeMap_[childKey] = Change.childRemovedChange(childKey, oldChange.oldSnap);\n      } else if (type == Change.CHILD_CHANGED && oldType == Change.CHILD_ADDED) {\n        this.changeMap_[childKey] = Change.childAddedChange(childKey, change.snapshotNode);\n      } else if (type == Change.CHILD_CHANGED && oldType == Change.CHILD_CHANGED) {\n        this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);\n      } else {\n        throw util.assertionError('Illegal combination of changes: ' + change + ' occurred after ' + oldChange);\n      }\n    } else {\n      this.changeMap_[childKey] = change;\n    }\n  };\n  /**\r\n   * @return {!Array.<!Change>}\r\n   */\n\n\n  ChildChangeAccumulator.prototype.getChanges = function () {\n    return util.getValues(this.changeMap_);\n  };\n\n  return ChildChangeAccumulator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\n\n\nvar NoCompleteChildSource_ =\n/** @class */\nfunction () {\n  function NoCompleteChildSource_() {}\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\n    return null;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\n    return null;\n  };\n\n  return NoCompleteChildSource_;\n}();\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\n\n\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\n\nvar WriteTreeCompleteChildSource =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!WriteTreeRef} writes_\r\n   * @param {!ViewCache} viewCache_\r\n   * @param {?Node} optCompleteServerCache_\r\n   */\n  function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\n    if (optCompleteServerCache_ === void 0) {\n      optCompleteServerCache_ = null;\n    }\n\n    this.writes_ = writes_;\n    this.viewCache_ = viewCache_;\n    this.optCompleteServerCache_ = optCompleteServerCache_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\n    var node = this.viewCache_.getEventCache();\n\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      var serverNode = this.optCompleteServerCache_ != null ? new CacheNode(this.optCompleteServerCache_, true, false) : this.viewCache_.getServerCache();\n      return this.writes_.calcCompleteChild(childKey, serverNode);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\n    var completeServerData = this.optCompleteServerCache_ != null ? this.optCompleteServerCache_ : this.viewCache_.getCompleteServerSnap();\n    var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\n\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  };\n\n  return WriteTreeCompleteChildSource;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n * @struct\r\n */\n\n\nvar ProcessorResult =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Array.<!Change>} changes\r\n   */\n  function ProcessorResult(viewCache, changes) {\n    this.viewCache = viewCache;\n    this.changes = changes;\n  }\n\n  return ProcessorResult;\n}();\n/**\r\n * @constructor\r\n */\n\n\nvar ViewProcessor =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!NodeFilter} filter_\r\n   */\n  function ViewProcessor(filter_) {\n    this.filter_ = filter_;\n  }\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   */\n\n\n  ViewProcessor.prototype.assertIndexed = function (viewCache) {\n    util.assert(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\n    util.assert(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!Operation} operation\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @return {!ProcessorResult}\r\n   */\n\n\n  ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\n    var accumulator = new ChildChangeAccumulator();\n    var newViewCache, filterServerNode;\n\n    if (operation.type === OperationType.OVERWRITE) {\n      var overwrite = operation;\n\n      if (overwrite.source.fromUser) {\n        newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\n      } else {\n        util.assert(overwrite.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered  and the\n        // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n        // again\n\n        filterServerNode = overwrite.source.tagged || oldViewCache.getServerCache().isFiltered() && !overwrite.path.isEmpty();\n        newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\n      }\n    } else if (operation.type === OperationType.MERGE) {\n      var merge = operation;\n\n      if (merge.source.fromUser) {\n        newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\n      } else {\n        util.assert(merge.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered\n\n        filterServerNode = merge.source.tagged || oldViewCache.getServerCache().isFiltered();\n        newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\n      }\n    } else if (operation.type === OperationType.ACK_USER_WRITE) {\n      var ackUserWrite = operation;\n\n      if (!ackUserWrite.revert) {\n        newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\n      } else {\n        newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\n      }\n    } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n      newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\n    } else {\n      throw util.assertionError('Unknown operation type: ' + operation.type);\n    }\n\n    var changes = accumulator.getChanges();\n    ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\n    return new ProcessorResult(newViewCache, changes);\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!ViewCache} newViewCache\r\n   * @param {!Array.<!Change>} accumulator\r\n   * @private\r\n   */\n\n\n  ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\n    var eventSnap = newViewCache.getEventCache();\n\n    if (eventSnap.isFullyInitialized()) {\n      var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n      var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\n\n      if (accumulator.length > 0 || !oldViewCache.getEventCache().isFullyInitialized() || isLeafOrEmpty && !eventSnap.getNode().equals(\n      /** @type {!Node} */\n      oldCompleteSnap) || !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\n        accumulator.push(Change.valueChange(\n        /** @type {!Node} */\n        newViewCache.getCompleteEventSnap()));\n      }\n    }\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} changePath\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {!CompleteChildSource} source\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\n    var oldEventSnap = viewCache.getEventCache();\n\n    if (writesCache.shadowingWrite(changePath) != null) {\n      // we have a shadowing write, ignore changes\n      return viewCache;\n    } else {\n      var newEventCache = void 0,\n          serverNode = void 0;\n\n      if (changePath.isEmpty()) {\n        // TODO: figure out how this plays with \"sliding ack windows\"\n        util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\n\n        if (viewCache.getServerCache().isFiltered()) {\n          // We need to special case this, because we need to only apply writes to complete children, or\n          // we might end up raising events for incomplete children. If the server data is filtered deep\n          // writes cannot be guaranteed to be complete\n          var serverCache = viewCache.getCompleteServerSnap();\n          var completeChildren = serverCache instanceof ChildrenNode ? serverCache : ChildrenNode.EMPTY_NODE;\n          var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\n          newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\n        } else {\n          var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n          newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\n        }\n      } else {\n        var childKey = changePath.getFront();\n\n        if (childKey == '.priority') {\n          util.assert(changePath.getLength() == 1, \"Can't have a priority with additional path components\");\n          var oldEventNode = oldEventSnap.getNode();\n          serverNode = viewCache.getServerCache().getNode(); // we might have overwrites for this priority\n\n          var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\n\n          if (updatedPriority != null) {\n            newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\n          } else {\n            // priority didn't change, keep old node\n            newEventCache = oldEventSnap.getNode();\n          }\n        } else {\n          var childChangePath = changePath.popFront(); // update child\n\n          var newEventChild = void 0;\n\n          if (oldEventSnap.isCompleteForChild(childKey)) {\n            serverNode = viewCache.getServerCache().getNode();\n            var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\n\n            if (eventChildUpdate != null) {\n              newEventChild = oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath, eventChildUpdate);\n            } else {\n              // Nothing changed, just keep the old child\n              newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n            }\n          } else {\n            newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n          }\n\n          if (newEventChild != null) {\n            newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\n          } else {\n            // no complete child available or no change\n            newEventCache = oldEventSnap.getNode();\n          }\n        }\n      }\n\n      return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\n    }\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!Path} changePath\r\n   * @param {!Node} changedSnap\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @param {boolean} filterServerNode\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\n    var oldServerSnap = oldViewCache.getServerCache();\n    var newServerCache;\n    var serverFilter = filterServerNode ? this.filter_ : this.filter_.getIndexedFilter();\n\n    if (changePath.isEmpty()) {\n      newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\n    } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n      // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n      var newServerNode = oldServerSnap.getNode().updateChild(changePath, changedSnap);\n      newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\n    } else {\n      var childKey = changePath.getFront();\n\n      if (!oldServerSnap.isCompleteForPath(changePath) && changePath.getLength() > 1) {\n        // We don't update incomplete nodes with updates intended for other listeners\n        return oldViewCache;\n      }\n\n      var childChangePath = changePath.popFront();\n      var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n      var newChildNode = childNode.updateChild(childChangePath, changedSnap);\n\n      if (childKey == '.priority') {\n        newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\n      } else {\n        newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\n      }\n    }\n\n    var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\n    var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\n    return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!Path} changePath\r\n   * @param {!Node} changedSnap\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\n    var oldEventSnap = oldViewCache.getEventCache();\n    var newViewCache, newEventCache;\n    var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\n\n    if (changePath.isEmpty()) {\n      newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\n      newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\n    } else {\n      var childKey = changePath.getFront();\n\n      if (childKey === '.priority') {\n        newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\n        newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\n      } else {\n        var childChangePath = changePath.popFront();\n        var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n        var newChild = void 0;\n\n        if (childChangePath.isEmpty()) {\n          // Child overwrite, we can replace the child\n          newChild = changedSnap;\n        } else {\n          var childNode = source.getCompleteChild(childKey);\n\n          if (childNode != null) {\n            if (childChangePath.getBack() === '.priority' && childNode.getChild(childChangePath.parent()).isEmpty()) {\n              // This is a priority update on an empty node. If this node exists on the server, the\n              // server will send down the priority in the update, so ignore for now\n              newChild = childNode;\n            } else {\n              newChild = childNode.updateChild(childChangePath, changedSnap);\n            }\n          } else {\n            // There is no complete child node available\n            newChild = ChildrenNode.EMPTY_NODE;\n          }\n        }\n\n        if (!oldChild.equals(newChild)) {\n          var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\n          newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\n        } else {\n          newViewCache = oldViewCache;\n        }\n      }\n    }\n\n    return newViewCache;\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {string} childKey\r\n   * @return {boolean}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\n    return viewCache.getEventCache().isCompleteForChild(childKey);\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {ImmutableTree.<!Node>} changedChildren\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} serverCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\n    var _this = this; // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n\n\n    var curViewCache = viewCache;\n    changedChildren.foreach(function (relativePath, childNode) {\n      var writePath = path.child(relativePath);\n\n      if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n        curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n      }\n    });\n    changedChildren.foreach(function (relativePath, childNode) {\n      var writePath = path.child(relativePath);\n\n      if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n        curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n      }\n    });\n    return curViewCache;\n  };\n  /**\r\n   * @param {!Node} node\r\n   * @param {ImmutableTree.<!Node>} merge\r\n   * @return {!Node}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyMerge_ = function (node, merge) {\n    merge.foreach(function (relativePath, childNode) {\n      node = node.updateChild(relativePath, childNode);\n    });\n    return node;\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {!ImmutableTree.<!Node>} changedChildren\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} serverCache\r\n   * @param {boolean} filterServerNode\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\n    var _this = this; // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n    // wait for the complete data update coming soon.\n\n\n    if (viewCache.getServerCache().getNode().isEmpty() && !viewCache.getServerCache().isFullyInitialized()) {\n      return viewCache;\n    } // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n\n\n    var curViewCache = viewCache;\n    var viewMergeTree;\n\n    if (path.isEmpty()) {\n      viewMergeTree = changedChildren;\n    } else {\n      viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\n    }\n\n    var serverNode = viewCache.getServerCache().getNode();\n    viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (serverNode.hasChild(childKey)) {\n        var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);\n\n        var newChild = _this.applyMerge_(serverChild, childTree);\n\n        curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n      }\n    });\n    viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\n      var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) && childMergeTree.value == null;\n\n      if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n        var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);\n\n        var newChild = _this.applyMerge_(serverChild, childMergeTree);\n\n        curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n      }\n    });\n    return curViewCache;\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} ackPath\r\n   * @param {!ImmutableTree<!boolean>} affectedTree\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\n    if (writesCache.shadowingWrite(ackPath) != null) {\n      return viewCache;\n    } // Only filter server node if it is currently filtered\n\n\n    var filterServerNode = viewCache.getServerCache().isFiltered(); // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n    // now that it won't be shadowed.\n\n    var serverCache = viewCache.getServerCache();\n\n    if (affectedTree.value != null) {\n      // This is an overwrite.\n      if (ackPath.isEmpty() && serverCache.isFullyInitialized() || serverCache.isCompleteForPath(ackPath)) {\n        return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\n      } else if (ackPath.isEmpty()) {\n        // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n        // should just re-apply whatever we have in our cache as a merge.\n        var changedChildren_1 = ImmutableTree.Empty;\n        serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\n          changedChildren_1 = changedChildren_1.set(new Path(name), node);\n        });\n        return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\n      } else {\n        return viewCache;\n      }\n    } else {\n      // This is a merge.\n      var changedChildren_2 = ImmutableTree.Empty;\n      affectedTree.foreach(function (mergePath, value) {\n        var serverCachePath = ackPath.child(mergePath);\n\n        if (serverCache.isCompleteForPath(serverCachePath)) {\n          changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\n        }\n      });\n      return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\n    }\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\n    var oldServerNode = viewCache.getServerCache();\n    var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\n    return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeServerCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\n    var complete;\n\n    if (writesCache.shadowingWrite(path) != null) {\n      return viewCache;\n    } else {\n      var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\n      var oldEventCache = viewCache.getEventCache().getNode();\n      var newEventCache = void 0;\n\n      if (path.isEmpty() || path.getFront() === '.priority') {\n        var newNode = void 0;\n\n        if (viewCache.getServerCache().isFullyInitialized()) {\n          newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n        } else {\n          var serverChildren = viewCache.getServerCache().getNode();\n          util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\n          newNode = writesCache.calcCompleteEventChildren(serverChildren);\n        }\n\n        newNode = newNode;\n        newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\n      } else {\n        var childKey = path.getFront();\n        var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n\n        if (newChild == null && viewCache.getServerCache().isCompleteForChild(childKey)) {\n          newChild = oldEventCache.getImmediateChild(childKey);\n        }\n\n        if (newChild != null) {\n          newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\n        } else if (viewCache.getEventCache().getNode().hasChild(childKey)) {\n          // No complete child available, delete the existing one, if any\n          newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\n        } else {\n          newEventCache = oldEventCache;\n        }\n\n        if (newEventCache.isEmpty() && viewCache.getServerCache().isFullyInitialized()) {\n          // We might have reverted all child writes. Maybe the old event was a leaf node\n          complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n\n          if (complete.isLeafNode()) {\n            newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\n          }\n        }\n      }\n\n      complete = viewCache.getServerCache().isFullyInitialized() || writesCache.shadowingWrite(Path.Empty) != null;\n      return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\n    }\n  };\n\n  return ViewProcessor;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\n\n\nvar EventGenerator =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!Query} query_\r\n   */\n  function EventGenerator(query_) {\n    this.query_ = query_;\n    /**\r\n     * @private\r\n     * @type {!Index}\r\n     */\n\n    this.index_ = this.query_.getQueryParams().getIndex();\n  }\n  /**\r\n   * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n   * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n   *\r\n   * Notes:\r\n   *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n   *    our index.\r\n   *  - prevName will be calculated based on the index ordering.\r\n   *\r\n   * @param {!Array.<!Change>} changes\r\n   * @param {!Node} eventCache\r\n   * @param {!Array.<!EventRegistration>} eventRegistrations\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\n    var _this = this;\n\n    var events = [];\n    var moves = [];\n    changes.forEach(function (change) {\n      if (change.type === Change.CHILD_CHANGED && _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\n        moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\n      }\n    });\n    this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\n    return events;\n  };\n  /**\r\n   * Given changes of a single change type, generate the corresponding events.\r\n   *\r\n   * @param {!Array.<!Event>} events\r\n   * @param {!string} eventType\r\n   * @param {!Array.<!Change>} changes\r\n   * @param {!Array.<!EventRegistration>} registrations\r\n   * @param {!Node} eventCache\r\n   * @private\r\n   */\n\n\n  EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\n    var _this = this;\n\n    var filteredChanges = changes.filter(function (change) {\n      return change.type === eventType;\n    });\n    filteredChanges.sort(this.compareChanges_.bind(this));\n    filteredChanges.forEach(function (change) {\n      var materializedChange = _this.materializeSingleChange_(change, eventCache);\n\n      registrations.forEach(function (registration) {\n        if (registration.respondsTo(change.type)) {\n          events.push(registration.createEvent(materializedChange, _this.query_));\n        }\n      });\n    });\n  };\n  /**\r\n   * @param {!Change} change\r\n   * @param {!Node} eventCache\r\n   * @return {!Change}\r\n   * @private\r\n   */\n\n\n  EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\n    if (change.type === 'value' || change.type === 'child_removed') {\n      return change;\n    } else {\n      change.prevName = eventCache.getPredecessorChildName(\n      /** @type {!string} */\n      change.childName, change.snapshotNode, this.index_);\n      return change;\n    }\n  };\n  /**\r\n   * @param {!Change} a\r\n   * @param {!Change} b\r\n   * @return {number}\r\n   * @private\r\n   */\n\n\n  EventGenerator.prototype.compareChanges_ = function (a, b) {\n    if (a.childName == null || b.childName == null) {\n      throw util.assertionError('Should only compare child_ events.');\n    }\n\n    var aWrapped = new NamedNode(a.childName, a.snapshotNode);\n    var bWrapped = new NamedNode(b.childName, b.snapshotNode);\n    return this.index_.compare(aWrapped, bWrapped);\n  };\n\n  return EventGenerator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\n\n\nvar View =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!Query} query_\r\n   * @param {!ViewCache} initialViewCache\r\n   */\n  function View(query_, initialViewCache) {\n    this.query_ = query_;\n    this.eventRegistrations_ = [];\n    var params = this.query_.getQueryParams();\n    var indexFilter = new IndexedFilter(params.getIndex());\n    var filter = params.getNodeFilter();\n    /**\r\n     * @type {ViewProcessor}\r\n     * @private\r\n     */\n\n    this.processor_ = new ViewProcessor(filter);\n    var initialServerCache = initialViewCache.getServerCache();\n    var initialEventCache = initialViewCache.getEventCache(); // Don't filter server node with other filter than index, wait for tagged listen\n\n    var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\n    var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\n    var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\n    var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\n    /**\r\n     * @type {!ViewCache}\r\n     * @private\r\n     */\n\n    this.viewCache_ = new ViewCache(newEventCache, newServerCache);\n    /**\r\n     * @type {!EventGenerator}\r\n     * @private\r\n     */\n\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n  /**\r\n   * @return {!Query}\r\n   */\n\n\n  View.prototype.getQuery = function () {\n    return this.query_;\n  };\n  /**\r\n   * @return {?Node}\r\n   */\n\n\n  View.prototype.getServerCache = function () {\n    return this.viewCache_.getServerCache().getNode();\n  };\n  /**\r\n   * @param {!Path} path\r\n   * @return {?Node}\r\n   */\n\n\n  View.prototype.getCompleteServerCache = function (path) {\n    var cache = this.viewCache_.getCompleteServerSnap();\n\n    if (cache) {\n      // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n      // we need to see if it contains the child we're interested in.\n      if (this.query_.getQueryParams().loadsAllData() || !path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty()) {\n        return cache.getChild(path);\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  View.prototype.isEmpty = function () {\n    return this.eventRegistrations_.length === 0;\n  };\n  /**\r\n   * @param {!EventRegistration} eventRegistration\r\n   */\n\n\n  View.prototype.addEventRegistration = function (eventRegistration) {\n    this.eventRegistrations_.push(eventRegistration);\n  };\n  /**\r\n   * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n   * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n   */\n\n\n  View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\n    var cancelEvents = [];\n\n    if (cancelError) {\n      util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\n      var path_1 = this.query_.path;\n      this.eventRegistrations_.forEach(function (registration) {\n        cancelError\n        /** @type {!Error} */\n        = cancelError;\n        var maybeEvent = registration.createCancelEvent(cancelError, path_1);\n\n        if (maybeEvent) {\n          cancelEvents.push(maybeEvent);\n        }\n      });\n    }\n\n    if (eventRegistration) {\n      var remaining = [];\n\n      for (var i = 0; i < this.eventRegistrations_.length; ++i) {\n        var existing = this.eventRegistrations_[i];\n\n        if (!existing.matches(eventRegistration)) {\n          remaining.push(existing);\n        } else if (eventRegistration.hasAnyCallback()) {\n          // We're removing just this one\n          remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\n          break;\n        }\n      }\n\n      this.eventRegistrations_ = remaining;\n    } else {\n      this.eventRegistrations_ = [];\n    }\n\n    return cancelEvents;\n  };\n  /**\r\n   * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n   *\r\n   * @param {!Operation} operation\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeServerCache\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\n    if (operation.type === OperationType.MERGE && operation.source.queryId !== null) {\n      util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\n      util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\n    }\n\n    var oldViewCache = this.viewCache_;\n    var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\n    this.processor_.assertIndexed(result.viewCache);\n    util.assert(result.viewCache.getServerCache().isFullyInitialized() || !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\n    this.viewCache_ = result.viewCache;\n    return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\n  };\n  /**\r\n   * @param {!EventRegistration} registration\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  View.prototype.getInitialEvents = function (registration) {\n    var eventSnap = this.viewCache_.getEventCache();\n    var initialChanges = [];\n\n    if (!eventSnap.getNode().isLeafNode()) {\n      var eventNode = eventSnap.getNode();\n      eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        initialChanges.push(Change.childAddedChange(key, childNode));\n      });\n    }\n\n    if (eventSnap.isFullyInitialized()) {\n      initialChanges.push(Change.valueChange(eventSnap.getNode()));\n    }\n\n    return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\n  };\n  /**\r\n   * @private\r\n   * @param {!Array.<!Change>} changes\r\n   * @param {!Node} eventCache\r\n   * @param {EventRegistration=} eventRegistration\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\n    var registrations = eventRegistration ? [eventRegistration] : this.eventRegistrations_;\n    return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\n  };\n\n  return View;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __referenceConstructor$1;\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\n\n\nvar SyncPoint =\n/** @class */\nfunction () {\n  function SyncPoint() {\n    /**\r\n     * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n     * queryId and the value is the View for that query.\r\n     *\r\n     * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n     *\r\n     * @type {!Object.<!string, !View>}\r\n     * @private\r\n     */\n    this.views_ = {};\n  }\n\n  Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\n    get: function get() {\n      util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\n      return __referenceConstructor$1;\n    },\n    set: function set(val) {\n      util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\n      __referenceConstructor$1 = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * @return {boolean}\r\n   */\n\n  SyncPoint.prototype.isEmpty = function () {\n    return util.isEmpty(this.views_);\n  };\n  /**\r\n   *\r\n   * @param {!Operation} operation\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} optCompleteServerCache\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\n    var queryId = operation.source.queryId;\n\n    if (queryId !== null) {\n      var view = util.safeGet(this.views_, queryId);\n      util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\n      return view.applyOperation(operation, writesCache, optCompleteServerCache);\n    } else {\n      var events_1 = [];\n      util.forEach(this.views_, function (key, view) {\n        events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\n      });\n      return events_1;\n    }\n  };\n  /**\r\n   * Add an event callback for the specified query.\r\n   *\r\n   * @param {!Query} query\r\n   * @param {!EventRegistration} eventRegistration\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} serverCache Complete server cache, if we have it.\r\n   * @param {boolean} serverCacheComplete\r\n   * @return {!Array.<!Event>} Events to raise.\r\n   */\n\n\n  SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\n    var queryId = query.queryIdentifier();\n    var view = util.safeGet(this.views_, queryId);\n\n    if (!view) {\n      // TODO: make writesCache take flag for complete server node\n      var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\n      var eventCacheComplete = false;\n\n      if (eventCache) {\n        eventCacheComplete = true;\n      } else if (serverCache instanceof ChildrenNode) {\n        eventCache = writesCache.calcCompleteEventChildren(serverCache);\n        eventCacheComplete = false;\n      } else {\n        eventCache = ChildrenNode.EMPTY_NODE;\n        eventCacheComplete = false;\n      }\n\n      var viewCache = new ViewCache(new CacheNode(\n      /** @type {!Node} */\n      eventCache, eventCacheComplete, false), new CacheNode(\n      /** @type {!Node} */\n      serverCache, serverCacheComplete, false));\n      view = new View(query, viewCache);\n      this.views_[queryId] = view;\n    } // This is guaranteed to exist now, we just created anything that was missing\n\n\n    view.addEventRegistration(eventRegistration);\n    return view.getInitialEvents(eventRegistration);\n  };\n  /**\r\n   * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n   *\r\n   * If query is the default query, we'll check all views for the specified eventRegistration.\r\n   * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n   *\r\n   * @param {!Query} query\r\n   * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n   * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n   */\n\n\n  SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n    var queryId = query.queryIdentifier();\n    var removed = [];\n    var cancelEvents = [];\n    var hadCompleteView = this.hasCompleteView();\n\n    if (queryId === 'default') {\n      // When you do ref.off(...), we search all views for the registration to remove.\n      var self_1 = this;\n      util.forEach(this.views_, function (viewQueryId, view) {\n        cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n\n        if (view.isEmpty()) {\n          delete self_1.views_[viewQueryId]; // We'll deal with complete views later.\n\n          if (!view.getQuery().getQueryParams().loadsAllData()) {\n            removed.push(view.getQuery());\n          }\n        }\n      });\n    } else {\n      // remove the callback from the specific view.\n      var view = util.safeGet(this.views_, queryId);\n\n      if (view) {\n        cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n\n        if (view.isEmpty()) {\n          delete this.views_[queryId]; // We'll deal with complete views later.\n\n          if (!view.getQuery().getQueryParams().loadsAllData()) {\n            removed.push(view.getQuery());\n          }\n        }\n      }\n    }\n\n    if (hadCompleteView && !this.hasCompleteView()) {\n      // We removed our last complete view.\n      removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\n    }\n\n    return {\n      removed: removed,\n      events: cancelEvents\n    };\n  };\n  /**\r\n   * @return {!Array.<!View>}\r\n   */\n\n\n  SyncPoint.prototype.getQueryViews = function () {\n    var _this = this;\n\n    var values = Object.keys(this.views_).map(function (key) {\n      return _this.views_[key];\n    });\n    return values.filter(function (view) {\n      return !view.getQuery().getQueryParams().loadsAllData();\n    });\n  };\n  /**\r\n   *\r\n   * @param {!Path} path The path to the desired complete snapshot\r\n   * @return {?Node} A complete cache, if it exists\r\n   */\n\n\n  SyncPoint.prototype.getCompleteServerCache = function (path) {\n    var serverCache = null;\n    util.forEach(this.views_, function (key, view) {\n      serverCache = serverCache || view.getCompleteServerCache(path);\n    });\n    return serverCache;\n  };\n  /**\r\n   * @param {!Query} query\r\n   * @return {?View}\r\n   */\n\n\n  SyncPoint.prototype.viewForQuery = function (query) {\n    var params = query.getQueryParams();\n\n    if (params.loadsAllData()) {\n      return this.getCompleteView();\n    } else {\n      var queryId = query.queryIdentifier();\n      return util.safeGet(this.views_, queryId);\n    }\n  };\n  /**\r\n   * @param {!Query} query\r\n   * @return {boolean}\r\n   */\n\n\n  SyncPoint.prototype.viewExistsForQuery = function (query) {\n    return this.viewForQuery(query) != null;\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  SyncPoint.prototype.hasCompleteView = function () {\n    return this.getCompleteView() != null;\n  };\n  /**\r\n   * @return {?View}\r\n   */\n\n\n  SyncPoint.prototype.getCompleteView = function () {\n    var completeView = util.findValue(this.views_, function (view) {\n      return view.getQuery().getQueryParams().loadsAllData();\n    });\n    return completeView || null;\n  };\n\n  return SyncPoint;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n *\r\n * @constructor\r\n * @param {!ImmutableTree.<!Node>} writeTree\r\n */\n\n\nvar CompoundWrite =\n/** @class */\nfunction () {\n  function CompoundWrite(writeTree_) {\n    this.writeTree_ = writeTree_;\n  }\n  /**\r\n   * @param {!Path} path\r\n   * @param {!Node} node\r\n   * @return {!CompoundWrite}\r\n   */\n\n\n  CompoundWrite.prototype.addWrite = function (path, node) {\n    if (path.isEmpty()) {\n      return new CompoundWrite(new ImmutableTree(node));\n    } else {\n      var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n\n      if (rootmost != null) {\n        var rootMostPath = rootmost.path;\n        var value = rootmost.value;\n        var relativePath = Path.relativePath(rootMostPath, path);\n        value = value.updateChild(relativePath, node);\n        return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\n      } else {\n        var subtree = new ImmutableTree(node);\n        var newWriteTree = this.writeTree_.setTree(path, subtree);\n        return new CompoundWrite(newWriteTree);\n      }\n    }\n  };\n  /**\r\n   * @param {!Path} path\r\n   * @param {!Object.<string, !Node>} updates\r\n   * @return {!CompoundWrite}\r\n   */\n\n\n  CompoundWrite.prototype.addWrites = function (path, updates) {\n    var newWrite = this;\n    util.forEach(updates, function (childKey, node) {\n      newWrite = newWrite.addWrite(path.child(childKey), node);\n    });\n    return newWrite;\n  };\n  /**\r\n   * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n   * location, which must be removed by calling this method with that path.\r\n   *\r\n   * @param {!Path} path The path at which a write and all deeper writes should be removed\r\n   * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n   */\n\n\n  CompoundWrite.prototype.removeWrite = function (path) {\n    if (path.isEmpty()) {\n      return CompoundWrite.Empty;\n    } else {\n      var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\n      return new CompoundWrite(newWriteTree);\n    }\n  };\n  /**\r\n   * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n   * considered \"complete\".\r\n   *\r\n   * @param {!Path} path The path to check for\r\n   * @return {boolean} Whether there is a complete write at that path\r\n   */\n\n\n  CompoundWrite.prototype.hasCompleteWrite = function (path) {\n    return this.getCompleteNode(path) != null;\n  };\n  /**\r\n   * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n   * writes from deeper paths, but will return child nodes from a more shallow path.\r\n   *\r\n   * @param {!Path} path The path to get a complete write\r\n   * @return {?Node} The node if complete at that path, or null otherwise.\r\n   */\n\n\n  CompoundWrite.prototype.getCompleteNode = function (path) {\n    var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n\n    if (rootmost != null) {\n      return this.writeTree_.get(rootmost.path).getChild(Path.relativePath(rootmost.path, path));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Returns all children that are guaranteed to be a complete overwrite.\r\n   *\r\n   * @return {!Array.<NamedNode>} A list of all complete children.\r\n   */\n\n\n  CompoundWrite.prototype.getCompleteChildren = function () {\n    var children = [];\n    var node = this.writeTree_.value;\n\n    if (node != null) {\n      // If it's a leaf node, it has no children; so nothing to do.\n      if (!node.isLeafNode()) {\n        node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n          children.push(new NamedNode(childName, childNode));\n        });\n      }\n    } else {\n      this.writeTree_.children.inorderTraversal(function (childName, childTree) {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      });\n    }\n\n    return children;\n  };\n  /**\r\n   * @param {!Path} path\r\n   * @return {!CompoundWrite}\r\n   */\n\n\n  CompoundWrite.prototype.childCompoundWrite = function (path) {\n    if (path.isEmpty()) {\n      return this;\n    } else {\n      var shadowingNode = this.getCompleteNode(path);\n\n      if (shadowingNode != null) {\n        return new CompoundWrite(new ImmutableTree(shadowingNode));\n      } else {\n        return new CompoundWrite(this.writeTree_.subtree(path));\n      }\n    }\n  };\n  /**\r\n   * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n   * @return {boolean} Whether this CompoundWrite is empty\r\n   */\n\n\n  CompoundWrite.prototype.isEmpty = function () {\n    return this.writeTree_.isEmpty();\n  };\n  /**\r\n   * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n   * node\r\n   * @param {!Node} node The node to apply this CompoundWrite to\r\n   * @return {!Node} The node with all writes applied\r\n   */\n\n\n  CompoundWrite.prototype.apply = function (node) {\n    return CompoundWrite.applySubtreeWrite_(Path.Empty, this.writeTree_, node);\n  };\n  /**\r\n   * @type {!CompoundWrite}\r\n   */\n\n\n  CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\n  /**\r\n   * @param {!Path} relativePath\r\n   * @param {!ImmutableTree.<!Node>} writeTree\r\n   * @param {!Node} node\r\n   * @return {!Node}\r\n   * @private\r\n   */\n\n  CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {\n    if (writeTree.value != null) {\n      // Since there a write is always a leaf, we're done here\n      return node.updateChild(relativePath, writeTree.value);\n    } else {\n      var priorityWrite_1 = null;\n      writeTree.children.inorderTraversal(function (childKey, childTree) {\n        if (childKey === '.priority') {\n          // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n          // to apply priorities to empty nodes that are later filled\n          util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\n          priorityWrite_1 = childTree.value;\n        } else {\n          node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);\n        }\n      }); // If there was a priority write, we only apply it if the node is not empty\n\n      if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\n        node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\n      }\n\n      return node;\n    }\n  };\n\n  return CompoundWrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\n\n\nvar WriteTree =\n/** @class */\nfunction () {\n  function WriteTree() {\n    /**\r\n     * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n     * applyLocally=false or writes that are completely shadowed by other writes.\r\n     *\r\n     * @type {!CompoundWrite}\r\n     * @private\r\n     */\n    this.visibleWrites_ = CompoundWrite.Empty;\n    /**\r\n     * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n     * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n     * used by transactions).\r\n     *\r\n     * @type {!Array.<!WriteRecord>}\r\n     * @private\r\n     */\n\n    this.allWrites_ = [];\n    this.lastWriteId_ = -1;\n  }\n  /**\r\n   * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n   *\r\n   * @param {!Path} path\r\n   * @return {!WriteTreeRef}\r\n   */\n\n\n  WriteTree.prototype.childWrites = function (path) {\n    return new WriteTreeRef(path, this);\n  };\n  /**\r\n   * Record a new overwrite from user code.\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!Node} snap\r\n   * @param {!number} writeId\r\n   * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n   */\n\n\n  WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\n    util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\n\n    if (visible === undefined) {\n      visible = true;\n    }\n\n    this.allWrites_.push({\n      path: path,\n      snap: snap,\n      writeId: writeId,\n      visible: visible\n    });\n\n    if (visible) {\n      this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\n    }\n\n    this.lastWriteId_ = writeId;\n  };\n  /**\r\n   * Record a new merge from user code.\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!Object.<string, !Node>} changedChildren\r\n   * @param {!number} writeId\r\n   */\n\n\n  WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\n    util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\n    this.allWrites_.push({\n      path: path,\n      children: changedChildren,\n      writeId: writeId,\n      visible: true\n    });\n    this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\n    this.lastWriteId_ = writeId;\n  };\n  /**\r\n   * @param {!number} writeId\r\n   * @return {?WriteRecord}\r\n   */\n\n\n  WriteTree.prototype.getWrite = function (writeId) {\n    for (var i = 0; i < this.allWrites_.length; i++) {\n      var record = this.allWrites_[i];\n\n      if (record.writeId === writeId) {\n        return record;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n   * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n   *\r\n   * @param {!number} writeId\r\n   * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n   * events as a result).\r\n   */\n\n\n  WriteTree.prototype.removeWrite = function (writeId) {\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n    // out of order.\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n    var _this = this;\n\n    var idx = this.allWrites_.findIndex(function (s) {\n      return s.writeId === writeId;\n    });\n    util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n    var writeToRemove = this.allWrites_[idx];\n    this.allWrites_.splice(idx, 1);\n    var removedWriteWasVisible = writeToRemove.visible;\n    var removedWriteOverlapsWithOtherWrites = false;\n    var i = this.allWrites_.length - 1;\n\n    while (removedWriteWasVisible && i >= 0) {\n      var currentWrite = this.allWrites_[i];\n\n      if (currentWrite.visible) {\n        if (i >= idx && this.recordContainsPath_(currentWrite, writeToRemove.path)) {\n          // The removed write was completely shadowed by a subsequent write.\n          removedWriteWasVisible = false;\n        } else if (writeToRemove.path.contains(currentWrite.path)) {\n          // Either we're covering some writes or they're covering part of us (depending on which came first).\n          removedWriteOverlapsWithOtherWrites = true;\n        }\n      }\n\n      i--;\n    }\n\n    if (!removedWriteWasVisible) {\n      return false;\n    } else if (removedWriteOverlapsWithOtherWrites) {\n      // There's some shadowing going on. Just rebuild the visible writes from scratch.\n      this.resetTree_();\n      return true;\n    } else {\n      // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n      if (writeToRemove.snap) {\n        this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\n      } else {\n        var children = writeToRemove.children;\n        util.forEach(children, function (childName) {\n          _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\n        });\n      }\n\n      return true;\n    }\n  };\n  /**\r\n   * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n   * No server data is considered.\r\n   *\r\n   * @param {!Path} path\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.getCompleteWriteData = function (path) {\n    return this.visibleWrites_.getCompleteNode(path);\n  };\n  /**\r\n   * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n   * writes), attempt to calculate a complete snapshot for the given path\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {?Node} completeServerCache\r\n   * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n   * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n    if (!writeIdsToExclude && !includeHiddenWrites) {\n      var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\n\n      if (shadowingNode != null) {\n        return shadowingNode;\n      } else {\n        var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\n\n        if (subMerge.isEmpty()) {\n          return completeServerCache;\n        } else if (completeServerCache == null && !subMerge.hasCompleteWrite(Path.Empty)) {\n          // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n          return null;\n        } else {\n          var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return subMerge.apply(layeredCache);\n        }\n      }\n    } else {\n      var merge = this.visibleWrites_.childCompoundWrite(treePath);\n\n      if (!includeHiddenWrites && merge.isEmpty()) {\n        return completeServerCache;\n      } else {\n        // If the server cache is null, and we don't have a complete cache, we need to return null\n        if (!includeHiddenWrites && completeServerCache == null && !merge.hasCompleteWrite(Path.Empty)) {\n          return null;\n        } else {\n          var filter = function filter(write) {\n            return (write.visible || includeHiddenWrites) && (!writeIdsToExclude || !~writeIdsToExclude.indexOf(write.writeId)) && (write.path.contains(treePath) || treePath.contains(write.path));\n          };\n\n          var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\n          var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return mergeAtPath.apply(layeredCache);\n        }\n      }\n    }\n  };\n  /**\r\n   * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n   * Used when creating new views, to pre-fill their complete event children snapshot.\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {?ChildrenNode} completeServerChildren\r\n   * @return {!ChildrenNode}\r\n   */\n\n\n  WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\n    var completeChildren = ChildrenNode.EMPTY_NODE;\n    var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\n\n    if (topLevelSet) {\n      if (!topLevelSet.isLeafNode()) {\n        // we're shadowing everything. Return the children.\n        topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\n          completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\n        });\n      }\n\n      return completeChildren;\n    } else if (completeServerChildren) {\n      // Layer any children we have on top of this\n      // We know we don't have a top-level set, so just enumerate existing children\n      var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\n      completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n        var node = merge_1.childCompoundWrite(new Path(childName)).apply(childNode);\n        completeChildren = completeChildren.updateImmediateChild(childName, node);\n      }); // Add any complete children we have from the set\n\n      merge_1.getCompleteChildren().forEach(function (namedNode) {\n        completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n      });\n      return completeChildren;\n    } else {\n      // We don't have anything to layer on top of. Layer on any children we have\n      // Note that we can return an empty snap if we have a defined delete\n      var merge = this.visibleWrites_.childCompoundWrite(treePath);\n      merge.getCompleteChildren().forEach(function (namedNode) {\n        completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n      });\n      return completeChildren;\n    }\n  };\n  /**\r\n   * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n   * applied to the event cache.\r\n   *\r\n   * Possibilities:\r\n   *\r\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n   *\r\n   * 2. Some write is completely shadowing. No events to be raised\r\n   *\r\n   * 3. Is partially shadowed. Events\r\n   *\r\n   * Either existingEventSnap or existingServerSnap must exist\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {!Path} childPath\r\n   * @param {?Node} existingEventSnap\r\n   * @param {?Node} existingServerSnap\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\n    util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\n    var path = treePath.child(childPath);\n\n    if (this.visibleWrites_.hasCompleteWrite(path)) {\n      // At this point we can probably guarantee that we're in case 2, meaning no events\n      // May need to check visibility while doing the findRootMostValueAndPath call\n      return null;\n    } else {\n      // No complete shadowing. We're either partially shadowing or not shadowing at all.\n      var childMerge = this.visibleWrites_.childCompoundWrite(path);\n\n      if (childMerge.isEmpty()) {\n        // We're not shadowing at all. Case 1\n        return existingServerSnap.getChild(childPath);\n      } else {\n        // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n        // However this is tricky to find out, since user updates don't necessary change the server\n        // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n        // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n        // only check if the updates change the serverNode.\n        // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n        return childMerge.apply(existingServerSnap.getChild(childPath));\n      }\n    }\n  };\n  /**\r\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n   * complete child for this ChildKey.\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {!string} childKey\r\n   * @param {!CacheNode} existingServerSnap\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\n    var path = treePath.child(childKey);\n    var shadowingNode = this.visibleWrites_.getCompleteNode(path);\n\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      if (existingServerSnap.isCompleteForChild(childKey)) {\n        var childMerge = this.visibleWrites_.childCompoundWrite(path);\n        return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n   * a higher path, this will return the child of that write relative to the write and this path.\r\n   * Returns null if there is no write at this path.\r\n   *\r\n   * @param {!Path} path\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.shadowingWrite = function (path) {\n    return this.visibleWrites_.getCompleteNode(path);\n  };\n  /**\r\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n   * the window, but may now be in the window.\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {?Node} completeServerData\r\n   * @param {!NamedNode} startPost\r\n   * @param {!number} count\r\n   * @param {boolean} reverse\r\n   * @param {!Index} index\r\n   * @return {!Array.<!NamedNode>}\r\n   */\n\n\n  WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\n    var toIterate;\n    var merge = this.visibleWrites_.childCompoundWrite(treePath);\n    var shadowingNode = merge.getCompleteNode(Path.Empty);\n\n    if (shadowingNode != null) {\n      toIterate = shadowingNode;\n    } else if (completeServerData != null) {\n      toIterate = merge.apply(completeServerData);\n    } else {\n      // no children to iterate on\n      return [];\n    }\n\n    toIterate = toIterate.withIndex(index);\n\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n      var nodes = [];\n      var cmp = index.getCompare();\n      var iter = reverse ? toIterate.getReverseIteratorFrom(startPost, index) : toIterate.getIteratorFrom(startPost, index);\n      var next = iter.getNext();\n\n      while (next && nodes.length < count) {\n        if (cmp(next, startPost) !== 0) {\n          nodes.push(next);\n        }\n\n        next = iter.getNext();\n      }\n\n      return nodes;\n    } else {\n      return [];\n    }\n  };\n  /**\r\n   * @param {!WriteRecord} writeRecord\r\n   * @param {!Path} path\r\n   * @return {boolean}\r\n   * @private\r\n   */\n\n\n  WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\n    if (writeRecord.snap) {\n      return writeRecord.path.contains(path);\n    } else {\n      // findKey can return undefined, so use !! to coerce to boolean\n      return !!util.findKey(writeRecord.children, function (childSnap, childName) {\n        return writeRecord.path.child(childName).contains(path);\n      });\n    }\n  };\n  /**\r\n   * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n   * @private\r\n   */\n\n\n  WriteTree.prototype.resetTree_ = function () {\n    this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\n\n    if (this.allWrites_.length > 0) {\n      this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\n    } else {\n      this.lastWriteId_ = -1;\n    }\n  };\n  /**\r\n   * The default filter used when constructing the tree. Keep everything that's visible.\r\n   *\r\n   * @param {!WriteRecord} write\r\n   * @return {boolean}\r\n   * @private\r\n   */\n\n\n  WriteTree.DefaultFilter_ = function (write) {\n    return write.visible;\n  };\n  /**\r\n   * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n   * event data at that path.\r\n   *\r\n   * @param {!Array.<!WriteRecord>} writes\r\n   * @param {!function(!WriteRecord):boolean} filter\r\n   * @param {!Path} treeRoot\r\n   * @return {!CompoundWrite}\r\n   * @private\r\n   */\n\n\n  WriteTree.layerTree_ = function (writes, filter, treeRoot) {\n    var compoundWrite = CompoundWrite.Empty;\n\n    for (var i = 0; i < writes.length; ++i) {\n      var write = writes[i]; // Theory, a later set will either:\n      // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n      // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n\n      if (filter(write)) {\n        var writePath = write.path;\n        var relativePath = void 0;\n\n        if (write.snap) {\n          if (treeRoot.contains(writePath)) {\n            relativePath = Path.relativePath(treeRoot, writePath);\n            compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\n          } else if (writePath.contains(treeRoot)) {\n            relativePath = Path.relativePath(writePath, treeRoot);\n            compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\n          }\n        } else if (write.children) {\n          if (treeRoot.contains(writePath)) {\n            relativePath = Path.relativePath(treeRoot, writePath);\n            compoundWrite = compoundWrite.addWrites(relativePath, write.children);\n          } else if (writePath.contains(treeRoot)) {\n            relativePath = Path.relativePath(writePath, treeRoot);\n\n            if (relativePath.isEmpty()) {\n              compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\n            } else {\n              var child = util.safeGet(write.children, relativePath.getFront());\n\n              if (child) {\n                // There exists a child in this node that matches the root path\n                var deepNode = child.getChild(relativePath.popFront());\n                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\n              }\n            }\n          }\n        } else {\n          throw util.assertionError('WriteRecord should have .snap or .children');\n        }\n      }\n    }\n\n    return compoundWrite;\n  };\n\n  return WriteTree;\n}();\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\n\n\nvar WriteTreeRef =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Path} path\r\n   * @param {!WriteTree} writeTree\r\n   */\n  function WriteTreeRef(path, writeTree) {\n    this.treePath_ = path;\n    this.writeTree_ = writeTree;\n  }\n  /**\r\n   * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n   * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n   * can lead to a more expensive calculation.\r\n   *\r\n   * @param {?Node} completeServerCache\r\n   * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n   * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n    return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\n  };\n  /**\r\n   * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n   * mix of the given server data and write data.\r\n   *\r\n   * @param {?ChildrenNode} completeServerChildren\r\n   * @return {!ChildrenNode}\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\n    return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\n  };\n  /**\r\n   * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n   * if anything, needs to be applied to the event cache.\r\n   *\r\n   * Possibilities:\r\n   *\r\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n   *\r\n   * 2. Some write is completely shadowing. No events to be raised\r\n   *\r\n   * 3. Is partially shadowed. Events should be raised\r\n   *\r\n   * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n   *\r\n   * @param {!Path} path\r\n   * @param {?Node} existingEventSnap\r\n   * @param {?Node} existingServerSnap\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\n    return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\n  };\n  /**\r\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n   * a higher path, this will return the child of that write relative to the write and this path.\r\n   * Returns null if there is no write at this path.\r\n   *\r\n   * @param {!Path} path\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.shadowingWrite = function (path) {\n    return this.writeTree_.shadowingWrite(this.treePath_.child(path));\n  };\n  /**\r\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n   * the window, but may now be in the window\r\n   *\r\n   * @param {?Node} completeServerData\r\n   * @param {!NamedNode} startPost\r\n   * @param {!number} count\r\n   * @param {boolean} reverse\r\n   * @param {!Index} index\r\n   * @return {!Array.<!NamedNode>}\r\n   */\n\n\n  WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\n    return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\n  };\n  /**\r\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n   * complete child for this ChildKey.\r\n   *\r\n   * @param {!string} childKey\r\n   * @param {!CacheNode} existingServerCache\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\n    return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\n  };\n  /**\r\n   * Return a WriteTreeRef for a child.\r\n   *\r\n   * @param {string} childName\r\n   * @return {!WriteTreeRef}\r\n   */\n\n\n  WriteTreeRef.prototype.child = function (childName) {\n    return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\n  };\n\n  return WriteTreeRef;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\n\n\nvar SyncTree =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n   *   to server data.\r\n   */\n  function SyncTree(listenProvider_) {\n    this.listenProvider_ = listenProvider_;\n    /**\r\n     * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n     * @type {!ImmutableTree.<!SyncPoint>}\r\n     * @private\r\n     */\n\n    this.syncPointTree_ = ImmutableTree.Empty;\n    /**\r\n     * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n     * @type {!WriteTree}\r\n     * @private\r\n     */\n\n    this.pendingWriteTree_ = new WriteTree();\n    this.tagToQueryMap_ = {};\n    this.queryToTagMap_ = {};\n  }\n  /**\r\n   * Apply the data changes for a user-generated set() or transaction() call.\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!Node} newData\r\n   * @param {number} writeId\r\n   * @param {boolean=} visible\r\n   * @return {!Array.<!Event>} Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\n    // Record pending write.\n    this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\n\n    if (!visible) {\n      return [];\n    } else {\n      return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\n    }\n  };\n  /**\r\n   * Apply the data from a user-generated update() call\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!Object.<string, !Node>} changedChildren\r\n   * @param {!number} writeId\r\n   * @return {!Array.<!Event>} Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\n    // Record pending merge.\n    this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\n  };\n  /**\r\n   * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n   *\r\n   * @param {!number} writeId\r\n   * @param {boolean=} revert True if the given write failed and needs to be reverted\r\n   * @return {!Array.<!Event>} Events to raise.\r\n   */\n\n\n  SyncTree.prototype.ackUserWrite = function (writeId, revert) {\n    if (revert === void 0) {\n      revert = false;\n    }\n\n    var write = this.pendingWriteTree_.getWrite(writeId);\n    var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\n\n    if (!needToReevaluate) {\n      return [];\n    } else {\n      var affectedTree_1 = ImmutableTree.Empty;\n\n      if (write.snap != null) {\n        // overwrite\n        affectedTree_1 = affectedTree_1.set(Path.Empty, true);\n      } else {\n        util.forEach(write.children, function (pathString, node) {\n          affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\n        });\n      }\n\n      return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\n    }\n  };\n  /**\r\n   * Apply new server data for the specified path..\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!Node} newData\r\n   * @return {!Array.<!Event>} Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyServerOverwrite = function (path, newData) {\n    return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\n  };\n  /**\r\n   * Apply new server data to be merged in at the specified path.\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!Object.<string, !Node>} changedChildren\r\n   * @return {!Array.<!Event>} Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\n  };\n  /**\r\n   * Apply a listen complete for a query\r\n   *\r\n   * @param {!Path} path\r\n   * @return {!Array.<!Event>} Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyListenComplete = function (path) {\n    return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\n  };\n  /**\r\n   * Apply new server data for the specified tagged query.\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!Node} snap\r\n   * @param {!number} tag\r\n   * @return {!Array.<!Event>} Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey != null) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = Path.relativePath(queryPath, path);\n      var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // Query must have been removed already\n      return [];\n    }\n  };\n  /**\r\n   * Apply server data to be merged in for the specified tagged query.\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!Object.<string, !Node>} changedChildren\r\n   * @param {!number} tag\r\n   * @return {!Array.<!Event>} Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = Path.relativePath(queryPath, path);\n      var changeTree = ImmutableTree.fromObject(changedChildren);\n      var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  };\n  /**\r\n   * Apply a listen complete for a tagged query\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!number} tag\r\n   * @return {!Array.<!Event>} Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = Path.relativePath(queryPath, path);\n      var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  };\n  /**\r\n   * Add an event callback for the specified query.\r\n   *\r\n   * @param {!Query} query\r\n   * @param {!EventRegistration} eventRegistration\r\n   * @return {!Array.<!Event>} Events to raise.\r\n   */\n\n\n  SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\n    var path = query.path;\n    var serverCache = null;\n    var foundAncestorDefaultView = false; // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\n\n    this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n      var relativePath = Path.relativePath(pathToSyncPoint, path);\n      serverCache = serverCache || sp.getCompleteServerCache(relativePath);\n      foundAncestorDefaultView = foundAncestorDefaultView || sp.hasCompleteView();\n    });\n    var syncPoint = this.syncPointTree_.get(path);\n\n    if (!syncPoint) {\n      syncPoint = new SyncPoint();\n      this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\n    } else {\n      foundAncestorDefaultView = foundAncestorDefaultView || syncPoint.hasCompleteView();\n      serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\n    }\n\n    var serverCacheComplete;\n\n    if (serverCache != null) {\n      serverCacheComplete = true;\n    } else {\n      serverCacheComplete = false;\n      serverCache = ChildrenNode.EMPTY_NODE;\n      var subtree = this.syncPointTree_.subtree(path);\n      subtree.foreachChild(function (childName, childSyncPoint) {\n        var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\n\n        if (completeCache) {\n          serverCache = serverCache.updateImmediateChild(childName, completeCache);\n        }\n      });\n    }\n\n    var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\n\n    if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\n      // We need to track a tag for this query\n      var queryKey = SyncTree.makeQueryKey_(query);\n      util.assert(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');\n      var tag = SyncTree.getNextQueryTag_();\n      this.queryToTagMap_[queryKey] = tag; // Coerce to string to avoid sparse arrays.\n\n      this.tagToQueryMap_['_' + tag] = queryKey;\n    }\n\n    var writesCache = this.pendingWriteTree_.childWrites(path);\n    var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\n\n    if (!viewAlreadyExists && !foundAncestorDefaultView) {\n      var view\n      /** @type !View */\n      = syncPoint.viewForQuery(query);\n      events = events.concat(this.setupListener_(query, view));\n    }\n\n    return events;\n  };\n  /**\r\n   * Remove event callback(s).\r\n   *\r\n   * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n   * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n   *\r\n   * @param {!Query} query\r\n   * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\r\n   * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n   */\n\n\n  SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n    var _this = this; // Find the syncPoint first. Then deal with whether or not it has matching listeners\n\n\n    var path = query.path;\n    var maybeSyncPoint = this.syncPointTree_.get(path);\n    var cancelEvents = []; // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n    // not loadsAllData().\n\n    if (maybeSyncPoint && (query.queryIdentifier() === 'default' || maybeSyncPoint.viewExistsForQuery(query))) {\n      /**\r\n       * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n       */\n      var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\n\n      if (maybeSyncPoint.isEmpty()) {\n        this.syncPointTree_ = this.syncPointTree_.remove(path);\n      }\n\n      var removed = removedAndEvents.removed;\n      cancelEvents = removedAndEvents.events; // We may have just removed one of many listeners and can short-circuit this whole process\n      // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n      // properly set up.\n      //\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n\n      var removingDefault = -1 !== removed.findIndex(function (query) {\n        return query.getQueryParams().loadsAllData();\n      });\n      var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\n        return parentSyncPoint.hasCompleteView();\n      });\n\n      if (removingDefault && !covered) {\n        var subtree = this.syncPointTree_.subtree(path); // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          var newViews = this.collectDistinctViewsForSubTree_(subtree); // Ok, we've collected all the listens we need. Set them up.\n\n          for (var i = 0; i < newViews.length; ++i) {\n            var view = newViews[i],\n                newQuery = view.getQuery();\n            var listener = this.createListenerForView_(view);\n            this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\n          }\n        }\n      } // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n\n\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          var defaultTag = null;\n          this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\n        } else {\n          removed.forEach(function (queryToRemove) {\n            var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];\n\n            _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\n          });\n        }\n      } // Now, clear all of the tags we're tracking for the removed listens\n\n\n      this.removeTags_(removed);\n    }\n\n    return cancelEvents;\n  };\n  /**\r\n   * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\r\n   * it, but as this is only used by transaction code, that should always be the case anyways.\r\n   *\r\n   * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n   * @param {!Path} path The path to the data we want\r\n   * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\r\n   * @return {?Node}\r\n   */\n\n\n  SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\n    var includeHiddenSets = true;\n    var writeTree = this.pendingWriteTree_;\n    var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\n      var relativePath = Path.relativePath(pathSoFar, path);\n      var serverCache = syncPoint.getCompleteServerCache(relativePath);\n\n      if (serverCache) {\n        return serverCache;\n      }\n    });\n    return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\n  };\n  /**\r\n   * This collapses multiple unfiltered views into a single view, since we only need a single\r\n   * listener for them.\r\n   *\r\n   * @param {!ImmutableTree.<!SyncPoint>} subtree\r\n   * @return {!Array.<!View>}\r\n   * @private\r\n   */\n\n\n  SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\n    return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n      if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n        var completeView = maybeChildSyncPoint.getCompleteView();\n        return [completeView];\n      } else {\n        // No complete view here, flatten any deeper listens into an array\n        var views_1 = [];\n\n        if (maybeChildSyncPoint) {\n          views_1 = maybeChildSyncPoint.getQueryViews();\n        }\n\n        util.forEach(childMap, function (key, childViews) {\n          views_1 = views_1.concat(childViews);\n        });\n        return views_1;\n      }\n    });\n  };\n  /**\r\n   * @param {!Array.<!Query>} queries\r\n   * @private\r\n   */\n\n\n  SyncTree.prototype.removeTags_ = function (queries) {\n    for (var j = 0; j < queries.length; ++j) {\n      var removedQuery = queries[j];\n\n      if (!removedQuery.getQueryParams().loadsAllData()) {\n        // We should have a tag for this\n        var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\n        var removedQueryTag = this.queryToTagMap_[removedQueryKey];\n        delete this.queryToTagMap_[removedQueryKey];\n        delete this.tagToQueryMap_['_' + removedQueryTag];\n      }\n    }\n  };\n  /**\r\n   * Normalizes a query to a query we send the server for listening\r\n   * @param {!Query} query\r\n   * @return {!Query} The normalized query\r\n   * @private\r\n   */\n\n\n  SyncTree.queryForListening_ = function (query) {\n    if (query.getQueryParams().loadsAllData() && !query.getQueryParams().isDefault()) {\n      // We treat queries that load all data as default queries\n      // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n      // from Query\n      return (\n        /** @type {!Query} */\n        query.getRef()\n      );\n    } else {\n      return query;\n    }\n  };\n  /**\r\n   * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n   *\r\n   * @param {!Query} query\r\n   * @param {!View} view\r\n   * @return {!Array.<!Event>} This method can return events to support synchronous data sources\r\n   * @private\r\n   */\n\n\n  SyncTree.prototype.setupListener_ = function (query, view) {\n    var path = query.path;\n    var tag = this.tagForQuery_(query);\n    var listener = this.createListenerForView_(view);\n    var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\n    var subtree = this.syncPointTree_.subtree(path); // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n    // may need to shadow other listens as well.\n\n    if (tag) {\n      util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\n    } else {\n      // Shadow everything at or below this location, this is a default listener.\n      var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n        if (!relativePath.isEmpty() && maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n          return [maybeChildSyncPoint.getCompleteView().getQuery()];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          var queries_1 = [];\n\n          if (maybeChildSyncPoint) {\n            queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) {\n              return view.getQuery();\n            }));\n          }\n\n          util.forEach(childMap, function (key, childQueries) {\n            queries_1 = queries_1.concat(childQueries);\n          });\n          return queries_1;\n        }\n      });\n\n      for (var i = 0; i < queriesToStop.length; ++i) {\n        var queryToStop = queriesToStop[i];\n        this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\n      }\n    }\n\n    return events;\n  };\n  /**\r\n   *\r\n   * @param {!View} view\r\n   * @return {{hashFn: function(), onComplete: function(!string, *)}}\r\n   * @private\r\n   */\n\n\n  SyncTree.prototype.createListenerForView_ = function (view) {\n    var _this = this;\n\n    var query = view.getQuery();\n    var tag = this.tagForQuery_(query);\n    return {\n      hashFn: function hashFn() {\n        var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\n        return cache.hash();\n      },\n      onComplete: function onComplete(status) {\n        if (status === 'ok') {\n          if (tag) {\n            return _this.applyTaggedListenComplete(query.path, tag);\n          } else {\n            return _this.applyListenComplete(query.path);\n          }\n        } else {\n          // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n          // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n          var error = errorForServerCode(status, query);\n          return _this.removeEventRegistration(query,\n          /*eventRegistration*/\n          null, error);\n        }\n      }\n    };\n  };\n  /**\r\n   * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n   * @private\r\n   * @param {!Query} query\r\n   * @return {string}\r\n   */\n\n\n  SyncTree.makeQueryKey_ = function (query) {\n    return query.path.toString() + '$' + query.queryIdentifier();\n  };\n  /**\r\n   * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n   * @private\r\n   * @param {!string} queryKey\r\n   * @return {{queryId: !string, path: !Path}}\r\n   */\n\n\n  SyncTree.parseQueryKey_ = function (queryKey) {\n    var splitIndex = queryKey.indexOf('$');\n    util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\n    return {\n      queryId: queryKey.substr(splitIndex + 1),\n      path: new Path(queryKey.substr(0, splitIndex))\n    };\n  };\n  /**\r\n   * Return the query associated with the given tag, if we have one\r\n   * @param {!number} tag\r\n   * @return {?string}\r\n   * @private\r\n   */\n\n\n  SyncTree.prototype.queryKeyForTag_ = function (tag) {\n    return this.tagToQueryMap_['_' + tag];\n  };\n  /**\r\n   * Return the tag associated with the given query.\r\n   * @param {!Query} query\r\n   * @return {?number}\r\n   * @private\r\n   */\n\n\n  SyncTree.prototype.tagForQuery_ = function (query) {\n    var queryKey = SyncTree.makeQueryKey_(query);\n    return util.safeGet(this.queryToTagMap_, queryKey);\n  };\n  /**\r\n   * Static accessor for query tags.\r\n   * @return {number}\r\n   * @private\r\n   */\n\n\n  SyncTree.getNextQueryTag_ = function () {\n    return SyncTree.nextQueryTag_++;\n  };\n  /**\r\n   * A helper method to apply tagged operations\r\n   *\r\n   * @param {!Path} queryPath\r\n   * @param {!Operation} operation\r\n   * @return {!Array.<!Event>}\r\n   * @private\r\n   */\n\n\n  SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\n    var syncPoint = this.syncPointTree_.get(queryPath);\n    util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n    var writesCache = this.pendingWriteTree_.childWrites(queryPath);\n    return syncPoint.applyOperation(operation, writesCache,\n    /*serverCache=*/\n    null);\n  };\n  /**\r\n   * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n   *\r\n   * NOTES:\r\n   * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n      * - We call applyOperation() on each SyncPoint passing three things:\r\n   *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n   *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n   *   3. A snapshot Node with cached server data, if we have it.\r\n      * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n   *\r\n   * @param {!Operation} operation\r\n   * @return {!Array.<!Event>}\r\n   * @private\r\n   */\n\n\n  SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\n    return this.applyOperationHelper_(operation, this.syncPointTree_,\n    /*serverCache=*/\n    null, this.pendingWriteTree_.childWrites(Path.Empty));\n  };\n  /**\r\n   * Recursive helper for applyOperationToSyncPoints_\r\n   *\r\n   * @private\r\n   * @param {!Operation} operation\r\n   * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n   * @param {?Node} serverCache\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n    if (operation.path.isEmpty()) {\n      return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\n    } else {\n      var syncPoint = syncPointTree.get(Path.Empty); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n      if (serverCache == null && syncPoint != null) {\n        serverCache = syncPoint.getCompleteServerCache(Path.Empty);\n      }\n\n      var events = [];\n      var childName = operation.path.getFront();\n      var childOperation = operation.operationForChild(childName);\n      var childTree = syncPointTree.children.get(childName);\n\n      if (childTree && childOperation) {\n        var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n        var childWritesCache = writesCache.child(childName);\n        events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\n      }\n\n      if (syncPoint) {\n        events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n      }\n\n      return events;\n    }\n  };\n  /**\r\n   * Recursive helper for applyOperationToSyncPoints_\r\n   *\r\n   * @private\r\n   * @param {!Operation} operation\r\n   * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n   * @param {?Node} serverCache\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n    var _this = this;\n\n    var syncPoint = syncPointTree.get(Path.Empty); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPoint.getCompleteServerCache(Path.Empty);\n    }\n\n    var events = [];\n    syncPointTree.children.inorderTraversal(function (childName, childTree) {\n      var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n      var childWritesCache = writesCache.child(childName);\n      var childOperation = operation.operationForChild(childName);\n\n      if (childOperation) {\n        events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\n      }\n    });\n\n    if (syncPoint) {\n      events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n    }\n\n    return events;\n  };\n  /**\r\n   * Static tracker for next query tag.\r\n   * @type {number}\r\n   * @private\r\n   */\n\n\n  SyncTree.nextQueryTag_ = 1;\n  return SyncTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\n\n\nvar SnapshotHolder =\n/** @class */\nfunction () {\n  function SnapshotHolder() {\n    this.rootNode_ = ChildrenNode.EMPTY_NODE;\n  }\n\n  SnapshotHolder.prototype.getNode = function (path) {\n    return this.rootNode_.getChild(path);\n  };\n\n  SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  };\n\n  return SnapshotHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\n\n\nvar AuthTokenProvider =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!FirebaseApp} app_\r\n   */\n  function AuthTokenProvider(app_) {\n    this.app_ = app_;\n  }\n  /**\r\n   * @param {boolean} forceRefresh\r\n   * @return {!Promise<FirebaseAuthTokenData>}\r\n   */\n\n\n  AuthTokenProvider.prototype.getToken = function (forceRefresh) {\n    return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, // .catch\n    function (error) {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  };\n\n  AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    this.app_['INTERNAL']['addAuthTokenListener'](listener);\n  };\n\n  AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\n    this.app_['INTERNAL']['removeAuthTokenListener'](listener);\n  };\n\n  AuthTokenProvider.prototype.notifyForInvalidToken = function () {\n    var errorMessage = 'Provided authentication credentials for the app named \"' + this.app_.name + '\" are invalid. This usually indicates your app was not ' + 'initialized correctly. ';\n\n    if ('credential' in this.app_.options) {\n      errorMessage += 'Make sure the \"credential\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else if ('serviceAccount' in this.app_.options) {\n      errorMessage += 'Make sure the \"serviceAccount\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else {\n      errorMessage += 'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' + 'initializeApp() match the values provided for your app at ' + 'https://console.firebase.google.com/.';\n    }\n\n    warn(errorMessage);\n  };\n\n  return AuthTokenProvider;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\n\n\nvar StatsCollection =\n/** @class */\nfunction () {\n  function StatsCollection() {\n    this.counters_ = {};\n  }\n\n  StatsCollection.prototype.incrementCounter = function (name, amount) {\n    if (amount === void 0) {\n      amount = 1;\n    }\n\n    if (!util.contains(this.counters_, name)) this.counters_[name] = 0;\n    this.counters_[name] += amount;\n  };\n\n  StatsCollection.prototype.get = function () {\n    return util.deepCopy(this.counters_);\n  };\n\n  return StatsCollection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar StatsManager =\n/** @class */\nfunction () {\n  function StatsManager() {}\n\n  StatsManager.getCollection = function (repoInfo) {\n    var hashString = repoInfo.toString();\n\n    if (!this.collections_[hashString]) {\n      this.collections_[hashString] = new StatsCollection();\n    }\n\n    return this.collections_[hashString];\n  };\n\n  StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\n    var hashString = repoInfo.toString();\n\n    if (!this.reporters_[hashString]) {\n      this.reporters_[hashString] = creatorFunction();\n    }\n\n    return this.reporters_[hashString];\n  };\n\n  StatsManager.collections_ = {};\n  StatsManager.reporters_ = {};\n  return StatsManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\n\n\nvar StatsListener =\n/** @class */\nfunction () {\n  function StatsListener(collection_) {\n    this.collection_ = collection_;\n    this.last_ = null;\n  }\n\n  StatsListener.prototype.get = function () {\n    var newStats = this.collection_.get();\n    var delta = util.clone(newStats);\n\n    if (this.last_) {\n      util.forEach(this.last_, function (stat, value) {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n\n    this.last_ = newStats;\n    return delta;\n  };\n\n  return StatsListener;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\n\n\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\nvar FIRST_STATS_MAX_TIME = 30 * 1000; // We'll continue to report stats on average every 5 minutes.\n\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n/**\r\n * @constructor\r\n */\n\nvar StatsReporter =\n/** @class */\nfunction () {\n  /**\r\n   * @param collection\r\n   * @param server_\r\n   */\n  function StatsReporter(collection, server_) {\n    this.server_ = server_;\n    this.statsToReport_ = {};\n    this.statsListener_ = new StatsListener(collection);\n    var timeout = FIRST_STATS_MIN_TIME + (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  StatsReporter.prototype.includeStat = function (stat) {\n    this.statsToReport_[stat] = true;\n  };\n\n  StatsReporter.prototype.reportStats_ = function () {\n    var _this = this;\n\n    var stats = this.statsListener_.get();\n    var reportedStats = {};\n    var haveStatsToReport = false;\n    util.forEach(stats, function (stat, value) {\n      if (value > 0 && util.contains(_this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    } // queue our next run.\n\n\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\n  };\n\n  return StatsReporter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\n\n\nvar EventQueue =\n/** @class */\nfunction () {\n  function EventQueue() {\n    /**\r\n     * @private\r\n     * @type {!Array.<EventList>}\r\n     */\n    this.eventLists_ = [];\n    /**\r\n     * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n     * @private\r\n     * @type {!number}\r\n     */\n\n    this.recursionDepth_ = 0;\n  }\n  /**\r\n   * @param {!Array.<Event>} eventDataList The new events to queue.\r\n   */\n\n\n  EventQueue.prototype.queueEvents = function (eventDataList) {\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n    var currList = null;\n\n    for (var i = 0; i < eventDataList.length; i++) {\n      var eventData = eventDataList[i];\n      var eventPath = eventData.getPath();\n\n      if (currList !== null && !eventPath.equals(currList.getPath())) {\n        this.eventLists_.push(currList);\n        currList = null;\n      }\n\n      if (currList === null) {\n        currList = new EventList(eventPath);\n      }\n\n      currList.add(eventData);\n    }\n\n    if (currList) {\n      this.eventLists_.push(currList);\n    }\n  };\n  /**\r\n   * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n   * for the specified path.\r\n   *\r\n   * It is assumed that the new events are all for the specified path.\r\n   *\r\n   * @param {!Path} path The path to raise events for.\r\n   * @param {!Array.<Event>} eventDataList The new events to raise.\r\n   */\n\n\n  EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\n    this.queueEvents(eventDataList);\n    this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n      return eventPath.equals(path);\n    });\n  };\n  /**\r\n   * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n   * locations related to the specified change path (i.e. all ancestors and descendants).\r\n   *\r\n   * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n   *\r\n   * @param {!Path} changedPath The path to raise events for.\r\n   * @param {!Array.<!Event>} eventDataList The events to raise\r\n   */\n\n\n  EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\n    this.queueEvents(eventDataList);\n    this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n      return eventPath.contains(changedPath) || changedPath.contains(eventPath);\n    });\n  };\n  /**\r\n   * @param {!function(!Path):boolean} predicate\r\n   * @private\r\n   */\n\n\n  EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\n    this.recursionDepth_++;\n    var sentAll = true;\n\n    for (var i = 0; i < this.eventLists_.length; i++) {\n      var eventList = this.eventLists_[i];\n\n      if (eventList) {\n        var eventPath = eventList.getPath();\n\n        if (predicate(eventPath)) {\n          this.eventLists_[i].raise();\n          this.eventLists_[i] = null;\n        } else {\n          sentAll = false;\n        }\n      }\n    }\n\n    if (sentAll) {\n      this.eventLists_ = [];\n    }\n\n    this.recursionDepth_--;\n  };\n\n  return EventQueue;\n}();\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\n\n\nvar EventList =\n/** @class */\nfunction () {\n  function EventList(path_) {\n    this.path_ = path_;\n    /**\r\n     * @type {!Array.<Event>}\r\n     * @private\r\n     */\n\n    this.events_ = [];\n  }\n  /**\r\n   * @param {!Event} eventData\r\n   */\n\n\n  EventList.prototype.add = function (eventData) {\n    this.events_.push(eventData);\n  };\n  /**\r\n   * Iterates through the list and raises each event\r\n   */\n\n\n  EventList.prototype.raise = function () {\n    for (var i = 0; i < this.events_.length; i++) {\n      var eventData = this.events_[i];\n\n      if (eventData !== null) {\n        this.events_[i] = null;\n        var eventFn = eventData.getEventRunner();\n\n        if (logger) {\n          log('event: ' + eventData.toString());\n        }\n\n        exceptionGuard(eventFn);\n      }\n    }\n  };\n  /**\r\n   * @return {!Path}\r\n   */\n\n\n  EventList.prototype.getPath = function () {\n    return this.path_;\n  };\n\n  return EventList;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\n\n\nvar EventEmitter =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Array.<string>} allowedEvents_\r\n   */\n  function EventEmitter(allowedEvents_) {\n    this.allowedEvents_ = allowedEvents_;\n    this.listeners_ = {};\n    util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\n  }\n  /**\r\n   * To be called by derived classes to trigger events.\r\n   * @param {!string} eventType\r\n   * @param {...*} var_args\r\n   */\n\n\n  EventEmitter.prototype.trigger = function (eventType) {\n    var var_args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      var_args[_i - 1] = arguments[_i];\n    }\n\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      var listeners = this.listeners_[eventType].slice();\n\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, var_args);\n      }\n    }\n  };\n\n  EventEmitter.prototype.on = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({\n      callback: callback,\n      context: context\n    });\n    var eventData = this.getInitialEvent(eventType);\n\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  };\n\n  EventEmitter.prototype.off = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    var listeners = this.listeners_[eventType] || [];\n\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i].callback === callback && (!context || context === listeners[i].context)) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  };\n\n  EventEmitter.prototype.validateEventType_ = function (eventType) {\n    util.assert(this.allowedEvents_.find(function (et) {\n      return et === eventType;\n    }), 'Unknown event: ' + eventType);\n  };\n\n  return EventEmitter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @extends {EventEmitter}\r\n */\n\n\nvar VisibilityMonitor =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(VisibilityMonitor, _super);\n\n  function VisibilityMonitor() {\n    var _this = _super.call(this, ['visible']) || this;\n\n    var hidden;\n    var visibilityChange;\n\n    if (typeof document !== 'undefined' && typeof document.addEventListener !== 'undefined') {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    } // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n\n\n    _this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(visibilityChange, function () {\n        var visible = !document[hidden];\n\n        if (visible !== _this.visible_) {\n          _this.visible_ = visible;\n\n          _this.trigger('visible', visible);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  VisibilityMonitor.getInstance = function () {\n    return new VisibilityMonitor();\n  };\n  /**\r\n   * @param {!string} eventType\r\n   * @return {Array.<boolean>}\r\n   */\n\n\n  VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\n    util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  };\n\n  return VisibilityMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\n\n\nvar OnlineMonitor =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(OnlineMonitor, _super);\n\n  function OnlineMonitor() {\n    var _this = _super.call(this, ['online']) || this;\n\n    _this.online_ = true; // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n\n    if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined' && !util.isMobileCordova()) {\n      window.addEventListener('online', function () {\n        if (!_this.online_) {\n          _this.online_ = true;\n\n          _this.trigger('online', true);\n        }\n      }, false);\n      window.addEventListener('offline', function () {\n        if (_this.online_) {\n          _this.online_ = false;\n\n          _this.trigger('online', false);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  OnlineMonitor.getInstance = function () {\n    return new OnlineMonitor();\n  };\n  /**\r\n   * @param {!string} eventType\r\n   * @return {Array.<boolean>}\r\n   */\n\n\n  OnlineMonitor.prototype.getInitialEvent = function (eventType) {\n    util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  OnlineMonitor.prototype.currentlyOnline = function () {\n    return this.online_;\n  };\n\n  return OnlineMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\n\n\nvar PacketReceiver =\n/** @class */\nfunction () {\n  /**\r\n   * @param onMessage_\r\n   */\n  function PacketReceiver(onMessage_) {\n    this.onMessage_ = onMessage_;\n    this.pendingResponses = [];\n    this.currentResponseNum = 0;\n    this.closeAfterResponse = -1;\n    this.onClose = null;\n  }\n\n  PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  };\n  /**\r\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n   * browsers will respond in the same order as the requests we sent\r\n   * @param {number} requestNum\r\n   * @param {Array} data\r\n   */\n\n\n  PacketReceiver.prototype.handleResponse = function (requestNum, data) {\n    var _this = this;\n\n    this.pendingResponses[requestNum] = data;\n\n    var _loop_1 = function _loop_1() {\n      var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\n      delete this_1.pendingResponses[this_1.currentResponseNum];\n\n      var _loop_2 = function _loop_2(i) {\n        if (toProcess[i]) {\n          exceptionGuard(function () {\n            _this.onMessage_(toProcess[i]);\n          });\n        }\n      };\n\n      for (var i = 0; i < toProcess.length; ++i) {\n        _loop_2(i);\n      }\n\n      if (this_1.currentResponseNum === this_1.closeAfterResponse) {\n        if (this_1.onClose) {\n          this_1.onClose();\n          this_1.onClose = null;\n        }\n\n        return \"break\";\n      }\n\n      this_1.currentResponseNum++;\n    };\n\n    var this_1 = this;\n\n    while (this.pendingResponses[this.currentResponseNum]) {\n      var state_1 = _loop_1();\n\n      if (state_1 === \"break\") break;\n    }\n  };\n\n  return PacketReceiver;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// URL query parameters associated with longpolling\n\n\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe'; //Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\n\nvar MAX_URL_DATA_SIZE = 1870;\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\n\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\n\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\n\nvar LP_CONNECT_TIMEOUT = 30000;\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\n\nvar BrowserPollConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param {string} connId An identifier for this connection, used for logging\r\n   * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\r\n   * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n   *                                         transport session\r\n   * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n   *                                     connection previously\r\n   */\n  function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.repoInfo = repoInfo;\n    this.transportSessionId = transportSessionId;\n    this.lastSessionId = lastSessionId;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.everConnected_ = false;\n    this.log_ = logWrapper(connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n\n    this.urlFn = function (params) {\n      return repoInfo.connectionURL(LONG_POLLING, params);\n    };\n  }\n  /**\r\n   *\r\n   * @param {function(Object)} onMessage Callback when messages arrive\r\n   * @param {function()} onDisconnect Callback with connection lost.\r\n   */\n\n\n  BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n    this.connectTimeoutTimer_ = setTimeout(function () {\n      _this.log_('Timed out trying to connect.'); // Make sure we clear the host cache\n\n\n      _this.onClosed_();\n\n      _this.connectTimeoutTimer_ = null;\n    }, Math.floor(LP_CONNECT_TIMEOUT)); // Ensure we delay the creation of the iframe until the DOM is loaded.\n\n    executeWhenDOMReady(function () {\n      if (_this.isClosed_) return; //Set up a callback that gets triggered once a connection is set up.\n\n      _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var command = args[0],\n            arg1 = args[1],\n            arg2 = args[2];\n\n        _this.incrementIncomingBytes_(args);\n\n        if (!_this.scriptTagHolder) return; // we closed the connection.\n\n        if (_this.connectTimeoutTimer_) {\n          clearTimeout(_this.connectTimeoutTimer_);\n          _this.connectTimeoutTimer_ = null;\n        }\n\n        _this.everConnected_ = true;\n\n        if (command == FIREBASE_LONGPOLL_START_PARAM) {\n          _this.id = arg1;\n          _this.password = arg2;\n        } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n          // Don't clear the host cache. We got a response from the server, so we know it's reachable\n          if (arg1) {\n            // We aren't expecting any more data (other than what the server's already in the process of sending us\n            // through our already open polls), so don't send any more.\n            _this.scriptTagHolder.sendNewPolls = false; // arg1 in this case is the last response number sent by the server. We should try to receive\n            // all of the responses up to this one before closing\n\n            _this.myPacketOrderer.closeAfter(arg1, function () {\n              _this.onClosed_();\n            });\n          } else {\n            _this.onClosed_();\n          }\n        } else {\n          throw new Error('Unrecognized command received: ' + command);\n        }\n      }, function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var pN = args[0],\n            data = args[1];\n\n        _this.incrementIncomingBytes_(args);\n\n        _this.myPacketOrderer.handleResponse(pN, data);\n      }, function () {\n        _this.onClosed_();\n      }, _this.urlFn); //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\n      if (_this.scriptTagHolder.uniqueCallbackIdentifier) urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n      if (_this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\n      }\n\n      if (_this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\n      }\n\n      if (!util.isNodeSdk() && typeof location !== 'undefined' && location.href && location.href.indexOf(FORGE_DOMAIN) !== -1) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n\n      var connectURL = _this.urlFn(urlParams);\n\n      _this.log_('Connecting via long-poll to ' + connectURL);\n\n      _this.scriptTagHolder.addTag(connectURL, function () {\n        /* do nothing */\n      });\n    });\n  };\n  /**\r\n   * Call this when a handshake has completed successfully and we want to consider the connection established\r\n   */\n\n\n  BrowserPollConnection.prototype.start = function () {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  };\n  /**\r\n   * Forces long polling to be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceAllow = function () {\n    BrowserPollConnection.forceAllow_ = true;\n  };\n  /**\r\n   * Forces longpolling to not be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceDisallow = function () {\n    BrowserPollConnection.forceDisallow_ = true;\n  }; // Static method, use string literal so it can be accessed in a generic way\n\n\n  BrowserPollConnection.isAvailable = function () {\n    // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n    // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n    return BrowserPollConnection.forceAllow_ || !BrowserPollConnection.forceDisallow_ && typeof document !== 'undefined' && document.createElement != null && !isChromeExtensionContentScript() && !isWindowsStoreApp() && !util.isNodeSdk();\n  };\n  /**\r\n   * No-op for polling\r\n   */\n\n\n  BrowserPollConnection.prototype.markConnectionHealthy = function () {};\n  /**\r\n   * Stops polling and cleans up the iframe\r\n   * @private\r\n   */\n\n\n  BrowserPollConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    } //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n\n\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  };\n  /**\r\n   * Triggered when this transport is closed\r\n   * @private\r\n   */\n\n\n  BrowserPollConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n   * that we've left.\r\n   */\n\n\n  BrowserPollConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n   * broken into chunks (since URLs have a small maximum length).\r\n   * @param {!Object} data The JSON data to transmit.\r\n   */\n\n\n  BrowserPollConnection.prototype.send = function (data) {\n    var dataStr = util.stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //first, lets get the base64-encoded data\n\n    var base64data = util.base64Encode(dataStr); //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE); //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\n      this.curSegmentNum++;\n    }\n  };\n  /**\r\n   * This is how we notify the server that we're leaving.\r\n   * We aren't able to send requests with DHTML on a window close event, but we can\r\n   * trigger XHR requests in some browsers (everything but Opera basically).\r\n   * @param {!string} id\r\n   * @param {!string} pw\r\n   */\n\n\n  BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\n    if (util.isNodeSdk()) return;\n    this.myDisconnFrame = document.createElement('iframe');\n    var urlParams = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n    document.body.appendChild(this.myDisconnFrame);\n  };\n  /**\r\n   * Used to track the bytes received by this client\r\n   * @param {*} args\r\n   * @private\r\n   */\n\n\n  BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    var bytesReceived = util.stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  };\n\n  return BrowserPollConnection;\n}();\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\n\n\nvar FirebaseIFrameScriptHolder =\n/** @class */\nfunction () {\n  /**\r\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n   */\n  function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\n    this.onDisconnect = onDisconnect;\n    this.urlFn = urlFn; //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n    //problems in some browsers.\n\n    /**\r\n     * @type {CountedSet.<number, number>}\r\n     */\n\n    this.outstandingRequests = new CountedSet(); //A queue of the pending segments waiting for transmission to the server.\n\n    this.pendingSegs = []; //A serial number. We use this for two things:\n    // 1) A way to ensure the browser doesn't cache responses to polls\n    // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n    //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n    //    JSONP code in the order it was added to the iframe.\n\n    this.currentSerial = Math.floor(Math.random() * 100000000); // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n    // incoming data from the server that we're waiting for).\n\n    this.sendNewPolls = true;\n\n    if (!util.isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB; //Create an iframe for us to add script tags to.\n\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_(); // Set the iframe's contents.\n\n      var script = ''; // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n\n      if (this.myIFrame.src && this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\n        var currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n\n      var iframeContents = '<html><body>' + script + '</body></html>';\n\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n\n        if (e.stack) {\n          log(e.stack);\n        }\n\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n  /**\r\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n   * actually use.\r\n   * @private\r\n   * @return {Element}\r\n   */\n\n\n  FirebaseIFrameScriptHolder.createIFrame_ = function () {\n    var iframe = document.createElement('iframe');\n    iframe.style.display = 'none'; // This is necessary in order to initialize the document inside the iframe\n\n    if (document.body) {\n      document.body.appendChild(iframe);\n\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        var a = iframe.contentWindow.document;\n\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        var domain = document.domain;\n        iframe.src = \"javascript:void((function(){document.open();document.domain='\" + domain + \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    } // Get the document of the iframe in a browser-specific way.\n\n\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n    } else if (iframe.document) {\n      iframe.doc = iframe.document; //others?\n    }\n\n    return iframe;\n  };\n  /**\r\n   * Cancel all outstanding queries and remove the frame.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.close = function () {\n    var _this = this; //Mark this iframe as dead, so no new requests are sent.\n\n\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(function () {\n        if (_this.myIFrame !== null) {\n          document.body.removeChild(_this.myIFrame);\n          _this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    if (util.isNodeSdk() && this.myID) {\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      var theURL = this.urlFn(urlParams);\n      FirebaseIFrameScriptHolder.nodeRestRequest(theURL);\n    } // Protect from being called recursively.\n\n\n    var onDisconnect = this.onDisconnect;\n\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  };\n  /**\r\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n   * @param {!string} id - The ID of this connection\r\n   * @param {!string} pw - The password for this connection\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true; //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n\n    while (this.newRequest_()) {}\n  };\n  /**\r\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n   * too many outstanding requests and we are still alive.\r\n   *\r\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n   * needed.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (this.alive && this.sendNewPolls && this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {\n      //construct our url\n      this.currentSerial++;\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      var theURL = this.urlFn(urlParams); //Now add as much data as we can.\n\n      var curDataString = '';\n      var i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        var nextSeg = this.pendingSegs[0];\n\n        if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <= MAX_URL_DATA_SIZE) {\n          //great, the segment will fit. Lets append it.\n          var theSeg = this.pendingSegs.shift();\n          curDataString = curDataString + '&' + FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM + i + '=' + theSeg.seg + '&' + FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET + i + '=' + theSeg.ts + '&' + FIREBASE_LONGPOLL_DATA_PARAM + i + '=' + theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * Queue a packet for transmission to the server.\r\n   * @param segnum - A sequential id for this packet segment used for reassembly\r\n   * @param totalsegs - The total number of segments in this packet\r\n   * @param data - The data for this segment.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({\n      seg: segnum,\n      ts: totalsegs,\n      d: data\n    }); //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n\n    if (this.alive) {\n      this.newRequest_();\n    }\n  };\n  /**\r\n   * Add a script tag for a regular long-poll request.\r\n   * @param {!string} url - The URL of the script tag.\r\n   * @param {!number} serial - The serial number of the request.\r\n   * @private\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\n    var _this = this; //remember that we sent this request.\n\n\n    this.outstandingRequests.add(serial, 1);\n\n    var doNewRequest = function doNewRequest() {\n      _this.outstandingRequests.remove(serial);\n\n      _this.newRequest_();\n    }; // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n\n\n    var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\n\n    var readyStateCB = function readyStateCB() {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout); // Trigger a new request so we can continue receiving data.\n\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  };\n  /**\r\n   * Add an arbitrary script tag to the iframe.\r\n   * @param {!string} url - The URL for the script tag source.\r\n   * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\n    var _this = this;\n\n    if (util.isNodeSdk()) {\n      this.doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(function () {\n        try {\n          // if we're already closed, don't add this poll\n          if (!_this.sendNewPolls) return;\n\n          var newScript_1 = _this.myIFrame.doc.createElement('script');\n\n          newScript_1.type = 'text/javascript';\n          newScript_1.async = true;\n          newScript_1.src = url;\n\n          newScript_1.onload = newScript_1.onreadystatechange = function () {\n            var rstate = newScript_1.readyState;\n\n            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n              newScript_1.onload = newScript_1.onreadystatechange = null;\n\n              if (newScript_1.parentNode) {\n                newScript_1.parentNode.removeChild(newScript_1);\n              }\n\n              loadCB();\n            }\n          };\n\n          newScript_1.onerror = function () {\n            log('Long-poll script failed to load: ' + url);\n            _this.sendNewPolls = false;\n\n            _this.close();\n          };\n\n          _this.myIFrame.doc.body.appendChild(newScript_1);\n        } catch (e) {// TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  };\n\n  return FirebaseIFrameScriptHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\nvar WebSocketImpl = null;\n\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\n\n\nvar WebSocketConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param {string} connId identifier for this transport\r\n   * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n   * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n   */\n  function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.keepaliveTimer = null;\n    this.frames = null;\n    this.totalFrames = 0;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\n  }\n  /**\r\n   * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n   * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n   * @return {string} connection url\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\n    var urlParams = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (!util.isNodeSdk() && typeof location !== 'undefined' && location.href && location.href.indexOf(FORGE_DOMAIN) !== -1) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n\n    return repoInfo.connectionURL(WEBSOCKET, urlParams);\n  };\n  /**\r\n   *\r\n   * @param onMessage Callback when messages arrive\r\n   * @param onDisconnect Callback with connection lost.\r\n   */\n\n\n  WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n    this.log_('Websocket connecting to ' + this.connURL);\n    this.everConnected_ = false; // Assume failure until proven otherwise.\n\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      if (util.isNodeSdk()) {\n        var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node'; // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n\n        var options = {\n          headers: {\n            'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + firebase.SDK_VERSION + \"/\" + process.platform + \"/\" + device\n          }\n        }; // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n\n        var env = process['env'];\n        var proxy = this.connURL.indexOf('wss://') == 0 ? env['HTTPS_PROXY'] || env['https_proxy'] : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = {\n            origin: proxy\n          };\n        }\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        this.mySock = new WebSocketImpl(this.connURL);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      var error = e.message || e.data;\n\n      if (error) {\n        this.log_(error);\n      }\n\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = function () {\n      _this.log_('Websocket connected.');\n\n      _this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = function () {\n      _this.log_('Websocket connection was disconnected.');\n\n      _this.mySock = null;\n\n      _this.onClosed_();\n    };\n\n    this.mySock.onmessage = function (m) {\n      _this.handleIncomingFrame(m);\n    };\n\n    this.mySock.onerror = function (e) {\n      _this.log_('WebSocket error.  Closing connection.');\n\n      var error = e.message || e.data;\n\n      if (error) {\n        _this.log_(error);\n      }\n\n      _this.onClosed_();\n    };\n  };\n  /**\r\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n   */\n\n\n  WebSocketConnection.prototype.start = function () {};\n\n  WebSocketConnection.forceDisallow = function () {\n    WebSocketConnection.forceDisallow_ = true;\n  };\n\n  WebSocketConnection.isAvailable = function () {\n    var isOldAndroid = false;\n\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return !isOldAndroid && WebSocketImpl !== null && !WebSocketConnection.forceDisallow_;\n  };\n  /**\r\n   * Returns true if we previously failed to connect with this transport.\r\n   * @return {boolean}\r\n   */\n\n\n  WebSocketConnection.previouslyFailed = function () {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return PersistentStorage.isInMemoryStorage || PersistentStorage.get('previous_websocket_failure') === true;\n  };\n\n  WebSocketConnection.prototype.markConnectionHealthy = function () {\n    PersistentStorage.remove('previous_websocket_failure');\n  };\n\n  WebSocketConnection.prototype.appendFrame_ = function (data) {\n    this.frames.push(data);\n\n    if (this.frames.length == this.totalFrames) {\n      var fullMess = this.frames.join('');\n      this.frames = null;\n      var jsonMess = util.jsonEval(fullMess); //handle the message\n\n      this.onMessage(jsonMess);\n    }\n  };\n  /**\r\n   * @param {number} frameCount The number of frames we are expecting from the server\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  };\n  /**\r\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n   * @param {!String} data\r\n   * @return {?String} Any remaining data to be process, or null if there is none\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.prototype.extractFrameCount_ = function (data) {\n    util.assert(this.frames === null, 'We already have a frame buffer'); // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n\n    if (data.length <= 6) {\n      var frameCount = Number(data);\n\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n\n    this.handleNewFrameCount_(1);\n    return data;\n  };\n  /**\r\n   * Process a websocket frame that has arrived from the server.\r\n   * @param mess The frame data\r\n   */\n\n\n  WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\n    if (this.mySock === null) return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n\n    var data = mess['data'];\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      var remainingData = this.extractFrameCount_(data);\n\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  };\n  /**\r\n   * Send a message to the server\r\n   * @param {Object} data The JSON object to transmit\r\n   */\n\n\n  WebSocketConnection.prototype.send = function (data) {\n    this.resetKeepAlive();\n    var dataStr = util.stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE); //Send the length header\n\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    } //Send the actual data in segments.\n\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  };\n\n  WebSocketConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  };\n\n  WebSocketConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_(); // since this is an internal close, trigger the close listener\n\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler.\r\n   * Close the websocket and kill the connection.\r\n   */\n\n\n  WebSocketConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n   * the last activity.\r\n   */\n\n\n  WebSocketConnection.prototype.resetKeepAlive = function () {\n    var _this = this;\n\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(function () {\n      //If there has been no websocket activity for a while, send a no-op\n      if (_this.mySock) {\n        _this.sendString_('0');\n      }\n\n      _this.resetKeepAlive();\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\n  };\n  /**\r\n   * Send a string over the websocket.\r\n   *\r\n   * @param {string} str String to send.\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.prototype.sendString_ = function (str) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  };\n  /**\r\n   * Number of response before we consider the connection \"healthy.\"\r\n   * @type {number}\r\n   */\n\n\n  WebSocketConnection.responsesRequiredToBeHealthy = 2;\n  /**\r\n   * Time to wait for the connection te become healthy before giving up.\r\n   * @type {number}\r\n   */\n\n  WebSocketConnection.healthyTimeout = 30000;\n  return WebSocketConnection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\n\n\nvar TransportManager =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n   */\n  function TransportManager(repoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\n    /**\r\n     * @const\r\n     * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n     */\n    get: function get() {\n      return [BrowserPollConnection, WebSocketConnection];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * @param {!RepoInfo} repoInfo\r\n   * @private\r\n   */\n\n  TransportManager.prototype.initTransports_ = function (repoInfo) {\n    var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\n    var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      var transports_1 = this.transports_ = [];\n      each(TransportManager.ALL_TRANSPORTS, function (i, transport) {\n        if (transport && transport['isAvailable']()) {\n          transports_1.push(transport);\n        }\n      });\n    }\n  };\n  /**\r\n   * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n   * initial transport to use\r\n   */\n\n\n  TransportManager.prototype.initialTransport = function () {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  };\n  /**\r\n   * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n   * transport, or null\r\n   */\n\n\n  TransportManager.prototype.upgradeTransport = function () {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  };\n\n  return TransportManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Abort upgrade attempt if it takes longer than 60s.\n\n\nvar UPGRADE_TIMEOUT = 60000; // For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\n\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000; // If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\n\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\nvar MESSAGE_TYPE = 't';\nvar MESSAGE_DATA = 'd';\nvar CONTROL_SHUTDOWN = 's';\nvar CONTROL_RESET = 'r';\nvar CONTROL_ERROR = 'e';\nvar CONTROL_PONG = 'o';\nvar SWITCH_ACK = 'a';\nvar END_TRANSMISSION = 'n';\nvar PING = 'p';\nvar SERVER_HELLO = 'h';\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\n\nvar Connection =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!string} id - an id for this connection\r\n   * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\r\n   * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\r\n   * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n   * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\r\n   * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n   * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n   */\n  function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\n    this.id = id;\n    this.repoInfo_ = repoInfo_;\n    this.onMessage_ = onMessage_;\n    this.onReady_ = onReady_;\n    this.onDisconnect_ = onDisconnect_;\n    this.onKill_ = onKill_;\n    this.lastSessionId = lastSessionId;\n    this.connectionCount = 0;\n    this.pendingDataMessages = [];\n    this.state_ = 0\n    /* CONNECTING */\n    ;\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n  /**\r\n   * Starts a connection attempt\r\n   * @private\r\n   */\n\n\n  Connection.prototype.start_ = function () {\n    var _this = this;\n\n    var conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessageReceived = this.connReceiver_(this.conn_);\n    var onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n    /*\r\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n     * still have the context of your originating frame.\r\n     */\n\n    setTimeout(function () {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n    var healthyTimeout_ms = conn['healthyTimeout'] || 0;\n\n    if (healthyTimeout_ms > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(function () {\n        _this.healthyTimeout_ = null;\n\n        if (!_this.isHealthy_) {\n          if (_this.conn_ && _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has received ' + _this.conn_.bytesReceived + ' bytes.  Marking connection healthy.');\n\n            _this.isHealthy_ = true;\n\n            _this.conn_.markConnectionHealthy();\n          } else if (_this.conn_ && _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has sent ' + _this.conn_.bytesSent + ' bytes.  Leaving connection alive.'); // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n\n          } else {\n            _this.log_('Closing unhealthy connection after timeout.');\n\n            _this.close();\n          }\n        }\n      }, Math.floor(healthyTimeout_ms));\n    }\n  };\n  /**\r\n   * @return {!string}\r\n   * @private\r\n   */\n\n\n  Connection.prototype.nextTransportId_ = function () {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  };\n\n  Connection.prototype.disconnReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (everConnected) {\n      if (conn === _this.conn_) {\n        _this.onConnectionLost_(everConnected);\n      } else if (conn === _this.secondaryConn_) {\n        _this.log_('Secondary connection lost.');\n\n        _this.onSecondaryConnectionLost_();\n      } else {\n        _this.log_('closing an old connection');\n      }\n    };\n  };\n\n  Connection.prototype.connReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (message) {\n      if (_this.state_ != 2\n      /* DISCONNECTED */\n      ) {\n          if (conn === _this.rx_) {\n            _this.onPrimaryMessageReceived_(message);\n          } else if (conn === _this.secondaryConn_) {\n            _this.onSecondaryMessageReceived_(message);\n          } else {\n            _this.log_('message on old connection');\n          }\n        }\n    };\n  };\n  /**\r\n   *\r\n   * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n   */\n\n\n  Connection.prototype.sendRequest = function (dataMsg) {\n    // wrap in a data message envelope and send it on\n    var msg = {\n      t: 'd',\n      d: dataMsg\n    };\n    this.sendData_(msg);\n  };\n\n  Connection.prototype.tryCleanupConnection = function () {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null; // the server will shutdown the old connection\n    }\n  };\n\n  Connection.prototype.onSecondaryControl_ = function (controlData) {\n    if (MESSAGE_TYPE in controlData) {\n      var cmd = controlData[MESSAGE_TYPE];\n\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close(); // If we were already using this connection for something, than we need to fully close\n\n        if (this.tx_ === this.secondaryConn_ || this.rx_ === this.secondaryConn_) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  };\n\n  Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer == 'c') {\n      this.onSecondaryControl_(data);\n    } else if (layer == 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  };\n\n  Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({\n        t: 'c',\n        d: {\n          t: PING,\n          d: {}\n        }\n      });\n    }\n  };\n\n  Connection.prototype.proceedWithUpgrade_ = function () {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start(); // send ack\n\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({\n      t: 'c',\n      d: {\n        t: SWITCH_ACK,\n        d: {}\n      }\n    }); // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n\n    this.log_('Ending transmission on primary');\n    this.conn_.send({\n      t: 'c',\n      d: {\n        t: END_TRANSMISSION,\n        d: {}\n      }\n    });\n    this.tx_ = this.secondaryConn_;\n    this.tryCleanupConnection();\n  };\n\n  Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer == 'c') {\n      this.onControl_(data);\n    } else if (layer == 'd') {\n      this.onDataMessage_(data);\n    }\n  };\n\n  Connection.prototype.onDataMessage_ = function (message) {\n    this.onPrimaryResponse_(); // We don't do anything with data messages, just kick them up a level\n\n    this.onMessage_(message);\n  };\n\n  Connection.prototype.onPrimaryResponse_ = function () {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  };\n\n  Connection.prototype.onControl_ = function (controlData) {\n    var cmd = requireKey(MESSAGE_TYPE, controlData);\n\n    if (MESSAGE_DATA in controlData) {\n      var payload = controlData[MESSAGE_DATA];\n\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(payload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n\n        for (var i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  };\n  /**\r\n   *\r\n   * @param {Object} handshake The handshake data returned from the server\r\n   * @private\r\n   */\n\n\n  Connection.prototype.onHandshake_ = function (handshake) {\n    var timestamp = handshake.ts;\n    var version = handshake.v;\n    var host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.updateHost(host); // if we've already closed the connection, then don't bother trying to progress further\n\n    if (this.state_ == 0\n    /* CONNECTING */\n    ) {\n        this.conn_.start();\n        this.onConnectionEstablished_(this.conn_, timestamp);\n\n        if (PROTOCOL_VERSION !== version) {\n          warn('Protocol version mismatch detected');\n        } // TODO: do we want to upgrade? when? maybe a delay?\n\n\n        this.tryStartUpgrade_();\n      }\n  };\n\n  Connection.prototype.tryStartUpgrade_ = function () {\n    var conn = this.transportManager_.upgradeTransport();\n\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  };\n\n  Connection.prototype.startUpgrade_ = function (conn) {\n    var _this = this;\n\n    this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.secondaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessage = this.connReceiver_(this.secondaryConn_);\n    var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect); // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n\n    setTimeoutNonBlocking(function () {\n      if (_this.secondaryConn_) {\n        _this.log_('Timed out trying to upgrade.');\n\n        _this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  };\n\n  Connection.prototype.onReset_ = function (host) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.updateHost(host); // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n\n    if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.close();\n      } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  };\n\n  Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\n    var _this = this;\n\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = 1\n    /* CONNECTED */\n    ;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    } // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n\n\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(function () {\n        _this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  };\n\n  Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('sending ping on primary.');\n        this.sendData_({\n          t: 'c',\n          d: {\n            t: PING,\n            d: {}\n          }\n        });\n      }\n  };\n\n  Connection.prototype.onSecondaryConnectionLost_ = function () {\n    var conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  };\n  /**\r\n   *\r\n   * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n   * we should flush the host cache\r\n   * @private\r\n   */\n\n\n  Connection.prototype.onConnectionLost_ = function (everConnected) {\n    this.conn_ = null; // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n\n    if (!everConnected && this.state_ === 0\n    /* CONNECTING */\n    ) {\n        this.log_('Realtime connection failed.'); // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n\n        if (this.repoInfo_.isCacheableHost()) {\n          PersistentStorage.remove('host:' + this.repoInfo_.host); // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n\n          this.repoInfo_.internalHost = this.repoInfo_.host;\n        }\n      } else if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('Realtime connection lost.');\n      }\n\n    this.close();\n  };\n  /**\r\n   *\r\n   * @param {string} reason\r\n   * @private\r\n   */\n\n\n  Connection.prototype.onConnectionShutdown_ = function (reason) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    } // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n\n\n    this.onDisconnect_ = null;\n    this.close();\n  };\n\n  Connection.prototype.sendData_ = function (data) {\n    if (this.state_ !== 1\n    /* CONNECTED */\n    ) {\n        throw 'Connection is not connected';\n      } else {\n      this.tx_.send(data);\n    }\n  };\n  /**\r\n   * Cleans up this connection, calling the appropriate callbacks\r\n   */\n\n\n  Connection.prototype.close = function () {\n    if (this.state_ !== 2\n    /* DISCONNECTED */\n    ) {\n        this.log_('Closing realtime connection.');\n        this.state_ = 2\n        /* DISCONNECTED */\n        ;\n        this.closeConnections_();\n\n        if (this.onDisconnect_) {\n          this.onDisconnect_();\n          this.onDisconnect_ = null;\n        }\n      }\n  };\n  /**\r\n   *\r\n   * @private\r\n   */\n\n\n  Connection.prototype.closeConnections_ = function () {\n    this.log_('Shutting down all connections');\n\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  };\n\n  return Connection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\n\n\nvar ServerActions =\n/** @class */\nfunction () {\n  function ServerActions() {}\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   * @param {string=} hash\r\n   */\n\n\n  ServerActions.prototype.put = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, ?string)} onComplete\r\n   * @param {string=} hash\r\n   */\n\n\n  ServerActions.prototype.merge = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * Refreshes the auth token for the current connection.\r\n   * @param {string} token The authentication token\r\n   */\n\n\n  ServerActions.prototype.refreshAuthToken = function (token) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   */\n\n\n  ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   */\n\n\n  ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {function(string, string)=} onComplete\r\n   */\n\n\n  ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) {};\n  /**\r\n   * @param {Object.<string, *>} stats\r\n   */\n\n\n  ServerActions.prototype.reportStats = function (stats) {};\n\n  return ServerActions;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\n\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\n\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\n\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill'; // If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\n\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\n\nvar PersistentConnection =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(PersistentConnection, _super);\n  /**\r\n   * @implements {ServerActions}\r\n   * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n   * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n   * @param onConnectStatus_\r\n   * @param onServerInfoUpdate_\r\n   * @param authTokenProvider_\r\n   * @param authOverride_\r\n   */\n\n\n  function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.onConnectStatus_ = onConnectStatus_;\n    _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    _this.authOverride_ = authOverride_; // Used for diagnostic logging.\n\n    _this.id = PersistentConnection.nextPersistentConnectionId_++;\n    _this.log_ = logWrapper('p:' + _this.id + ':');\n    /** @private {Object} */\n\n    _this.interruptReasons_ = {};\n    _this.listens_ = {};\n    _this.outstandingPuts_ = [];\n    _this.outstandingPutCount_ = 0;\n    _this.onDisconnectRequestQueue_ = [];\n    _this.connected_ = false;\n    _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n    _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n    _this.securityDebugCallback_ = null;\n    _this.lastSessionId = null;\n    /** @private {number|null} */\n\n    _this.establishConnectionTimer_ = null;\n    /** @private {boolean} */\n\n    _this.visible_ = false; // Before we get connected, we keep a queue of pending messages to send.\n\n    _this.requestCBHash_ = {};\n    _this.requestNumber_ = 0;\n    /** @private {?{\r\n     *   sendRequest(Object),\r\n     *   close()\r\n     * }} */\n\n    _this.realtime_ = null;\n    /** @private {string|null} */\n\n    _this.authToken_ = null;\n    _this.forceTokenRefresh_ = false;\n    _this.invalidAuthTokenCount_ = 0;\n    _this.firstConnection_ = true;\n    _this.lastConnectionAttemptTime_ = null;\n    _this.lastConnectionEstablishedTime_ = null;\n\n    if (authOverride_ && !util.isNodeSdk()) {\n      throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n    }\n\n    _this.scheduleConnect_(0);\n\n    VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n    }\n\n    return _this;\n  }\n  /**\r\n   * @param {!string} action\r\n   * @param {*} body\r\n   * @param {function(*)=} onResponse\r\n   * @protected\r\n   */\n\n\n  PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n    var curReqNum = ++this.requestNumber_;\n    var msg = {\n      r: curReqNum,\n      a: action,\n      b: body\n    };\n    this.log_(util.stringify(msg));\n    util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n    this.realtime_.sendRequest(msg);\n\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var queryId = query.queryIdentifier();\n    var pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    this.listens_[pathString] = this.listens_[pathString] || {};\n    util.assert(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\n    util.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\n    var listenSpec = {\n      onComplete: onComplete,\n      hashFn: currentHashFn,\n      query: query,\n      tag: tag\n    };\n    this.listens_[pathString][queryId] = listenSpec;\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  };\n  /**\r\n   * @param {!{onComplete(),\r\n   *           hashFn():!string,\r\n   *           query: !Query,\r\n   *           tag: ?number}} listenSpec\r\n   * @private\r\n   */\n\n\n  PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n    var _this = this;\n\n    var query = listenSpec.query;\n    var pathString = query.path.toString();\n    var queryId = query.queryIdentifier();\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'q'; // Only bother to send query if it's non-default.\n\n    if (listenSpec.tag) {\n      req['q'] = query.queryObject();\n      req['t'] = listenSpec.tag;\n    }\n\n    req[\n    /*hash*/\n    'h'] = listenSpec.hashFn();\n    this.sendRequest(action, req, function (message) {\n      var payload = message[\n      /*data*/\n      'd'];\n      var status = message[\n      /*status*/\n      's']; // print warnings in any case...\n\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n      var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId]; // only trigger actions if the listen hasn't been removed and readded\n\n      if (currentListenSpec === listenSpec) {\n        _this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          _this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  };\n  /**\r\n   * @param {*} payload\r\n   * @param {!Query} query\r\n   * @private\r\n   */\n\n\n  PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n    if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\n      var warnings = util.safeGet(payload, 'w');\n\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        var indexSpec = '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\n        var indexPath = query.path.toString();\n        warn(\"Using an unspecified index. Your data will be downloaded and \" + (\"filtered on the client. Consider adding \" + indexSpec + \" at \") + (indexPath + \" to your security rules for better performance.\"));\n      }\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.refreshAuthToken = function (token) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, function () {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  };\n  /**\r\n   * @param {!string} credential\r\n   * @private\r\n   */\n\n\n  PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    var isFirebaseSecret = credential && credential.length === 40;\n\n    if (isFirebaseSecret || util.isAdmin(credential)) {\n      this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  };\n  /**\r\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n   * a auth revoked (the connection is closed).\r\n   */\n\n\n  PersistentConnection.prototype.tryAuth = function () {\n    var _this = this;\n\n    if (this.connected_ && this.authToken_) {\n      var token_1 = this.authToken_;\n      var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\n      var requestData = {\n        cred: token_1\n      };\n\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n\n      this.sendRequest(authMethod, requestData, function (res) {\n        var status = res[\n        /*status*/\n        's'];\n        var data = res[\n        /*data*/\n        'd'] || 'error';\n\n        if (_this.authToken_ === token_1) {\n          if (status === 'ok') {\n            _this.invalidAuthTokenCount_ = 0;\n          } else {\n            // Triggers reconnect and force refresh for auth token\n            _this.onAuthRevoked_(status, data);\n          }\n        }\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.unlisten = function (query, tag) {\n    var pathString = query.path.toString();\n    var queryId = query.queryIdentifier();\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n    util.assert(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\n    }\n  };\n\n  PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'n'; // Only bother sending queryId if it's non-default.\n\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'o',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'om',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'oc',\n        data: null,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, function (response) {\n      if (onComplete) {\n        setTimeout(function () {\n          onComplete(response[\n          /*status*/\n          's'], response[\n          /* data */\n          'd']);\n        }, Math.floor(0));\n      }\n    });\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  };\n\n  PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n    if (hash !== undefined) request[\n    /*hash*/\n    'h'] = hash; // TODO: Only keep track of the most recent put for a given path?\n\n    this.outstandingPuts_.push({\n      action: action,\n      request: request,\n      onComplete: onComplete\n    });\n    this.outstandingPutCount_++;\n    var index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  };\n\n  PersistentConnection.prototype.sendPut_ = function (index) {\n    var _this = this;\n\n    var action = this.outstandingPuts_[index].action;\n    var request = this.outstandingPuts_[index].request;\n    var onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n    this.sendRequest(action, request, function (message) {\n      _this.log_(action + ' response', message);\n\n      delete _this.outstandingPuts_[index];\n      _this.outstandingPutCount_--; // Clean up array occasionally.\n\n      if (_this.outstandingPutCount_ === 0) {\n        _this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) onComplete(message[\n      /*status*/\n      's'], message[\n      /* data */\n      'd']);\n    });\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.reportStats = function (stats) {\n    var _this = this; // If we're not connected, we just drop the stats.\n\n\n    if (this.connected_) {\n      var request = {\n        /*counters*/\n        c: stats\n      };\n      this.log_('reportStats', request);\n      this.sendRequest(\n      /*stats*/\n      's', request, function (result) {\n        var status = result[\n        /*status*/\n        's'];\n\n        if (status !== 'ok') {\n          var errorReason = result[\n          /* data */\n          'd'];\n\n          _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  };\n  /**\r\n   * @param {*} message\r\n   * @private\r\n   */\n\n\n  PersistentConnection.prototype.onDataMessage_ = function (message) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + util.stringify(message));\n      var reqNum = message['r'];\n      var onResponse = this.requestCBHash_[reqNum];\n\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[\n        /*body*/\n        'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'], message['b']);\n    }\n  };\n\n  PersistentConnection.prototype.onDataPush_ = function (action, body) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') this.onDataUpdate_(body[\n    /*path*/\n    'p'], body[\n    /*data*/\n    'd'],\n    /*isMerge*/\n    false, body['t']);else if (action === 'm') this.onDataUpdate_(body[\n    /*path*/\n    'p'], body[\n    /*data*/\n    'd'],\n    /*isMerge=*/\n    true, body['t']);else if (action === 'c') this.onListenRevoked_(body[\n    /*path*/\n    'p'], body[\n    /*query*/\n    'q']);else if (action === 'ac') this.onAuthRevoked_(body[\n    /*status code*/\n    's'], body[\n    /* explanation */\n    'd']);else if (action === 'sd') this.onSecurityDebugPacket_(body);else error('Unrecognized action received from server: ' + util.stringify(action) + '\\nAre you using the latest client?');\n  };\n\n  PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  };\n\n  PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n    var _this = this;\n\n    util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    } // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n\n    this.establishConnectionTimer_ = setTimeout(function () {\n      _this.establishConnectionTimer_ = null;\n\n      _this.establishConnection_();\n    }, Math.floor(timeout));\n  };\n  /**\r\n   * @param {boolean} visible\r\n   * @private\r\n   */\n\n\n  PersistentConnection.prototype.onVisible_ = function (visible) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (visible && !this.visible_ && this.reconnectDelay_ === this.maxReconnectDelay_) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n\n    this.visible_ = visible;\n  };\n\n  PersistentConnection.prototype.onOnline_ = function (online) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null; // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n\n    this.cancelSentTransactions_(); // Clear out the pending requests.\n\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n      var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n      reconnectDelay = Math.random() * reconnectDelay;\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay); // Adjust reconnect delay for next time.\n\n      this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n    }\n\n    this.onConnectStatus_(false);\n  };\n\n  PersistentConnection.prototype.establishConnection_ = function () {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      var onDataMessage_1 = this.onDataMessage_.bind(this);\n      var onReady_1 = this.onReady_.bind(this);\n      var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n      var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      var self_1 = this;\n      var lastSessionId_1 = this.lastSessionId;\n      var canceled_1 = false;\n      var connection_1 = null;\n\n      var closeFn_1 = function closeFn_1() {\n        if (connection_1) {\n          connection_1.close();\n        } else {\n          canceled_1 = true;\n          onDisconnect_1();\n        }\n      };\n\n      var sendRequestFn = function sendRequestFn(msg) {\n        util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\n        connection_1.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn_1,\n        sendRequest: sendRequestFn\n      };\n      var forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false; // First fetch auth token, and establish connection after fetching the token was successful\n\n      this.authTokenProvider_.getToken(forceRefresh).then(function (result) {\n        if (!canceled_1) {\n          log('getToken() completed. Creating connection.');\n          self_1.authToken_ = result && result.accessToken;\n          connection_1 = new Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1,\n          /* onKill= */\n          function (reason) {\n            warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\n            self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\n          }, lastSessionId_1);\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      }).then(null, function (error) {\n        self_1.log_('Failed to get token: ' + error);\n\n        if (!canceled_1) {\n          if (util.CONSTANTS.NODE_ADMIN) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n\n          closeFn_1();\n        }\n      });\n    }\n  };\n  /**\r\n   * @param {string} reason\r\n   */\n\n\n  PersistentConnection.prototype.interrupt = function (reason) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  };\n  /**\r\n   * @param {string} reason\r\n   */\n\n\n  PersistentConnection.prototype.resume = function (reason) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n\n    if (util.isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  };\n\n  PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n    var delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({\n      serverTimeOffset: delta\n    });\n  };\n\n  PersistentConnection.prototype.cancelSentTransactions_ = function () {\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      var put = this.outstandingPuts_[i];\n\n      if (put &&\n      /*hash*/\n      'h' in put.request && put.queued) {\n        if (put.onComplete) put.onComplete('disconnect');\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    } // Clean up array occasionally.\n\n\n    if (this.outstandingPutCount_ === 0) this.outstandingPuts_ = [];\n  };\n  /**\r\n   * @param {!string} pathString\r\n   * @param {Array.<*>=} query\r\n   * @private\r\n   */\n\n\n  PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    var queryId;\n\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(function (q) {\n        return ObjectToUniqueKey(q);\n      }).join('$');\n    }\n\n    var listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) listen.onComplete('permission_denied');\n  };\n  /**\r\n   * @param {!string} pathString\r\n   * @param {!string} queryId\r\n   * @return {{queries:Array.<Query>, onComplete:function(string)}}\r\n   * @private\r\n   */\n\n\n  PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n    var normalizedPathString = new Path(pathString).toString(); // normalize path.\n\n    var listen;\n\n    if (this.listens_[normalizedPathString] !== undefined) {\n      listen = this.listens_[normalizedPathString][queryId];\n      delete this.listens_[normalizedPathString][queryId];\n\n      if (util.getCount(this.listens_[normalizedPathString]) === 0) {\n        delete this.listens_[normalizedPathString];\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n\n    return listen;\n  };\n\n  PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n\n      if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS; // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n      }\n    }\n  };\n\n  PersistentConnection.prototype.restoreState_ = function () {\n    var _this = this; //Re-authenticate ourselves if we have a credential stored.\n\n\n    this.tryAuth(); // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n\n    util.forEach(this.listens_, function (pathString, queries) {\n      util.forEach(queries, function (key, listenSpec) {\n        _this.sendListen_(listenSpec);\n      });\n    });\n\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) this.sendPut_(i);\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      var request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n    }\n  };\n  /**\r\n   * Sends client stats for first connection\r\n   * @private\r\n   */\n\n\n  PersistentConnection.prototype.sendConnectStats_ = function () {\n    var stats = {};\n    var clientName = 'js';\n\n    if (util.CONSTANTS.NODE_ADMIN) {\n      clientName = 'admin_node';\n    } else if (util.CONSTANTS.NODE_CLIENT) {\n      clientName = 'node';\n    }\n\n    stats['sdk.' + clientName + '.' + firebase.SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (util.isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (util.isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n\n    this.reportStats(stats);\n  };\n  /**\r\n   * @return {boolean}\r\n   * @private\r\n   */\n\n\n  PersistentConnection.prototype.shouldReconnect_ = function () {\n    var online = OnlineMonitor.getInstance().currentlyOnline();\n    return util.isEmpty(this.interruptReasons_) && online;\n  };\n  /**\r\n   * @private\r\n   */\n\n\n  PersistentConnection.nextPersistentConnectionId_ = 0;\n  /**\r\n   * Counter for number of connections created. Mainly used for tagging in the logs\r\n   * @type {number}\r\n   * @private\r\n   */\n\n  PersistentConnection.nextConnectionId_ = 0;\n  return PersistentConnection;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\n\n\nvar ReadonlyRestClient =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ReadonlyRestClient, _super);\n  /**\r\n   * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n   * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n   * @param {AuthTokenProvider} authTokenProvider_\r\n   * @implements {ServerActions}\r\n   */\n\n\n  function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    /** @private {function(...[*])} */\n\n    _this.log_ = logWrapper('p:rest:');\n    /**\r\n     * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n     * that's been removed. :-/\r\n     *\r\n     * @private {!Object.<string, !Object>}\r\n     */\n\n    _this.listens_ = {};\n    return _this;\n  }\n\n  ReadonlyRestClient.prototype.reportStats = function (stats) {\n    throw new Error('Method not implemented.');\n  };\n  /**\r\n   * @param {!Query} query\r\n   * @param {?number=} tag\r\n   * @return {string}\r\n   * @private\r\n   */\n\n\n  ReadonlyRestClient.getListenId_ = function (query, tag) {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\n      return query.path.toString();\n    }\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var _this = this;\n\n    var pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier()); // Mark this listener so we can tell if it's removed.\n\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    var thisListen = {};\n    this.listens_[listenId] = thisListen;\n    var queryStringParameters = query.getQueryParams().toRestQueryStringParameters();\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false, tag);\n      }\n\n      if (util.safeGet(_this.listens_, listenId) === thisListen) {\n        var status_1;\n\n        if (!error) {\n          status_1 = 'ok';\n        } else if (error == 401) {\n          status_1 = 'permission_denied';\n        } else {\n          status_1 = 'rest_error:' + error;\n        }\n\n        onComplete(status_1, null);\n      }\n    });\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.unlisten = function (query, tag) {\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.refreshAuthToken = function (token) {// no-op since we just always call getToken.\n  };\n  /**\r\n   * Performs a REST request to the given path, with the provided query string parameters,\r\n   * and any auth credentials we have.\r\n   *\r\n   * @param {!string} pathString\r\n   * @param {!Object.<string, *>} queryStringParameters\r\n   * @param {?function(?number, *=)} callback\r\n   * @private\r\n   */\n\n\n  ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\n    var _this = this;\n\n    if (queryStringParameters === void 0) {\n      queryStringParameters = {};\n    }\n\n    queryStringParameters['format'] = 'export';\n    this.authTokenProvider_.getToken(\n    /*forceRefresh=*/\n    false).then(function (authTokenData) {\n      var authToken = authTokenData && authTokenData.accessToken;\n\n      if (authToken) {\n        queryStringParameters['auth'] = authToken;\n      }\n\n      var url = (_this.repoInfo_.secure ? 'https://' : 'http://') + _this.repoInfo_.host + pathString + '?' + 'ns=' + _this.repoInfo_.namespace + util.querystring(queryStringParameters);\n\n      _this.log_('Sending REST request for ' + url);\n\n      var xhr = new XMLHttpRequest();\n\n      xhr.onreadystatechange = function () {\n        if (callback && xhr.readyState === 4) {\n          _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\n\n          var res = null;\n\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = util.jsonEval(xhr.responseText);\n            } catch (e) {\n              warn('Failed to parse JSON response for ' + url + ': ' + xhr.responseText);\n            }\n\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn('Got unsuccessful REST response for ' + url + ' Status: ' + xhr.status);\n            }\n\n            callback(xhr.status);\n          }\n\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url,\n      /*asynchronous=*/\n      true);\n      xhr.send();\n    });\n  };\n\n  return ReadonlyRestClient;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\r\n * A connection to a single data repository.\r\n */\n\nvar Repo =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!RepoInfo} repoInfo_\r\n   * @param {boolean} forceRestClient\r\n   * @param {!FirebaseApp} app\r\n   */\n  function Repo(repoInfo_, forceRestClient, app) {\n    var _this = this;\n\n    this.repoInfo_ = repoInfo_;\n    this.app = app;\n    this.dataUpdateCount = 0;\n    this.statsListener_ = null;\n    this.eventQueue_ = new EventQueue();\n    this.nextWriteId_ = 1;\n    this.interceptServerDataCallback_ = null; // A list of data pieces and paths to be set when this client disconnects.\n\n    this.onDisconnect_ = new SparseSnapshotTree();\n    /**\r\n     * TODO: This should be @private but it's used by test_access.js and internal.js\r\n     * @type {?PersistentConnection}\r\n     */\n\n    this.persistentConnection_ = null;\n    /** @type {!AuthTokenProvider} */\n\n    var authTokenProvider = new AuthTokenProvider(app);\n    this.stats_ = StatsManager.getCollection(repoInfo_);\n\n    if (forceRestClient || beingCrawled()) {\n      this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider); // Minor hack: Fire onConnect immediately, since there's no actual connection.\n\n      setTimeout(this.onConnectStatus_.bind(this, true), 0);\n    } else {\n      var authOverride = app.options['databaseAuthVariableOverride']; // Validate authOverride\n\n      if (typeof authOverride !== 'undefined' && authOverride !== null) {\n        if (typeof authOverride !== 'object') {\n          throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n        }\n\n        try {\n          util.stringify(authOverride);\n        } catch (e) {\n          throw new Error('Invalid authOverride provided: ' + e);\n        }\n      }\n\n      this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\n      this.server_ = this.persistentConnection_;\n    }\n\n    authTokenProvider.addTokenChangeListener(function (token) {\n      _this.server_.refreshAuthToken(token);\n    }); // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n\n    this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () {\n      return new StatsReporter(_this.stats_, _this.server_);\n    });\n    this.transactions_init_(); // Used for .info.\n\n    this.infoData_ = new SnapshotHolder();\n    this.infoSyncTree_ = new SyncTree({\n      startListening: function startListening(query, tag, currentHashFn, onComplete) {\n        var infoEvents = [];\n\n        var node = _this.infoData_.getNode(query.path); // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n        // on initial data...\n\n\n        if (!node.isEmpty()) {\n          infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\n          setTimeout(function () {\n            onComplete('ok');\n          }, 0);\n        }\n\n        return infoEvents;\n      },\n      stopListening: function stopListening() {}\n    });\n    this.updateInfo_('connected', false);\n    this.serverSyncTree_ = new SyncTree({\n      startListening: function startListening(query, tag, currentHashFn, onComplete) {\n        _this.server_.listen(query, currentHashFn, tag, function (status, data) {\n          var events = onComplete(status, data);\n\n          _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\n        }); // No synchronous events for network-backed sync trees\n\n\n        return [];\n      },\n      stopListening: function stopListening(query, tag) {\n        _this.server_.unlisten(query, tag);\n      }\n    });\n  }\n  /**\r\n   * @return {string}  The URL corresponding to the root of this Firebase.\r\n   */\n\n\n  Repo.prototype.toString = function () {\n    return (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host;\n  };\n  /**\r\n   * @return {!string} The namespace represented by the repo.\r\n   */\n\n\n  Repo.prototype.name = function () {\n    return this.repoInfo_.namespace;\n  };\n  /**\r\n   * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\r\n   */\n\n\n  Repo.prototype.serverTime = function () {\n    var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\n    var offset = offsetNode.val() || 0;\n    return new Date().getTime() + offset;\n  };\n  /**\r\n   * Generate ServerValues using some variables from the repo object.\r\n   * @return {!Object}\r\n   */\n\n\n  Repo.prototype.generateServerValues = function () {\n    return generateWithValues({\n      timestamp: this.serverTime()\n    });\n  };\n  /**\r\n   * Called by realtime when we get new messages from the server.\r\n   *\r\n   * @private\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {boolean} isMerge\r\n   * @param {?number} tag\r\n   */\n\n\n  Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\n    // For testing.\n    this.dataUpdateCount++;\n    var path = new Path(pathString);\n    data = this.interceptServerDataCallback_ ? this.interceptServerDataCallback_(pathString, data) : data;\n    var events = [];\n\n    if (tag) {\n      if (isMerge) {\n        var taggedChildren = util.map(data, function (raw) {\n          return nodeFromJSON$1(raw);\n        });\n        events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\n      } else {\n        var taggedSnap = nodeFromJSON$1(data);\n        events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\n      }\n    } else if (isMerge) {\n      var changedChildren = util.map(data, function (raw) {\n        return nodeFromJSON$1(raw);\n      });\n      events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\n    } else {\n      var snap = nodeFromJSON$1(data);\n      events = this.serverSyncTree_.applyServerOverwrite(path, snap);\n    }\n\n    var affectedPath = path;\n\n    if (events.length > 0) {\n      // Since we have a listener outstanding for each transaction, receiving any events\n      // is a proxy for some change having occurred.\n      affectedPath = this.rerunTransactions_(path);\n    }\n\n    this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\n  };\n  /**\r\n   * TODO: This should be @private but it's used by test_access.js and internal.js\r\n   * @param {?function(!string, *):*} callback\r\n   * @private\r\n   */\n\n\n  Repo.prototype.interceptServerData_ = function (callback) {\n    this.interceptServerDataCallback_ = callback;\n  };\n  /**\r\n   * @param {!boolean} connectStatus\r\n   * @private\r\n   */\n\n\n  Repo.prototype.onConnectStatus_ = function (connectStatus) {\n    this.updateInfo_('connected', connectStatus);\n\n    if (connectStatus === false) {\n      this.runOnDisconnectEvents_();\n    }\n  };\n  /**\r\n   * @param {!Object} updates\r\n   * @private\r\n   */\n\n\n  Repo.prototype.onServerInfoUpdate_ = function (updates) {\n    var _this = this;\n\n    each(updates, function (value, key) {\n      _this.updateInfo_(key, value);\n    });\n  };\n  /**\r\n   *\r\n   * @param {!string} pathString\r\n   * @param {*} value\r\n   * @private\r\n   */\n\n\n  Repo.prototype.updateInfo_ = function (pathString, value) {\n    var path = new Path('/.info/' + pathString);\n    var newNode = nodeFromJSON$1(value);\n    this.infoData_.updateSnapshot(path, newNode);\n    var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n  };\n  /**\r\n   * @return {!number}\r\n   * @private\r\n   */\n\n\n  Repo.prototype.getNextWriteId_ = function () {\n    return this.nextWriteId_++;\n  };\n  /**\r\n   * @param {!Path} path\r\n   * @param {*} newVal\r\n   * @param {number|string|null} newPriority\r\n   * @param {?function(?Error, *=)} onComplete\r\n   */\n\n\n  Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\n    var _this = this;\n\n    this.log_('set', {\n      path: path.toString(),\n      value: newVal,\n      priority: newPriority\n    }); // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n    // (b) store unresolved paths on JSON parse\n\n    var serverValues = this.generateServerValues();\n    var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\n    var writeId = this.getNextWriteId_();\n    var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\n    this.eventQueue_.queueEvents(events);\n    this.server_.put(path.toString(), newNodeUnresolved.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      var success = status === 'ok';\n\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\n\n      _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n    var affectedPath = this.abortTransactions_(path);\n    this.rerunTransactions_(affectedPath); // We queued the events above, so just flush the queue here\n\n    this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\n  };\n  /**\r\n   * @param {!Path} path\r\n   * @param {!Object} childrenToMerge\r\n   * @param {?function(?Error, *=)} onComplete\r\n   */\n\n\n  Repo.prototype.update = function (path, childrenToMerge, onComplete) {\n    var _this = this;\n\n    this.log_('update', {\n      path: path.toString(),\n      value: childrenToMerge\n    }); // Start with our existing data and merge each child into it.\n\n    var empty = true;\n    var serverValues = this.generateServerValues();\n    var changedChildren = {};\n    util.forEach(childrenToMerge, function (changedKey, changedValue) {\n      empty = false;\n      var newNodeUnresolved = nodeFromJSON$1(changedValue);\n      changedChildren[changedKey] = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\n    });\n\n    if (!empty) {\n      var writeId_1 = this.getNextWriteId_();\n      var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\n      this.eventQueue_.queueEvents(events);\n      this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n        var success = status === 'ok';\n\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\n\n        var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\n\n        _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\n\n        _this.callOnCompleteCallback(onComplete, status, errorReason);\n      });\n      util.forEach(childrenToMerge, function (changedPath) {\n        var affectedPath = _this.abortTransactions_(path.child(changedPath));\n\n        _this.rerunTransactions_(affectedPath);\n      }); // We queued the events above, so just flush the queue here\n\n      this.eventQueue_.raiseEventsForChangedPath(path, []);\n    } else {\n      log(\"update() called with empty data.  Don't do anything.\");\n      this.callOnCompleteCallback(onComplete, 'ok');\n    }\n  };\n  /**\r\n   * Applies all of the changes stored up in the onDisconnect_ tree.\r\n   * @private\r\n   */\n\n\n  Repo.prototype.runOnDisconnectEvents_ = function () {\n    var _this = this;\n\n    this.log_('onDisconnectEvents');\n    var serverValues = this.generateServerValues();\n    var resolvedOnDisconnectTree = resolveDeferredValueTree(this.onDisconnect_, serverValues);\n    var events = [];\n    resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\n      events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\n\n      var affectedPath = _this.abortTransactions_(path);\n\n      _this.rerunTransactions_(affectedPath);\n    });\n    this.onDisconnect_ = new SparseSnapshotTree();\n    this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\n  };\n  /**\r\n   * @param {!Path} path\r\n   * @param {?function(?Error, *=)} onComplete\r\n   */\n\n\n  Repo.prototype.onDisconnectCancel = function (path, onComplete) {\n    var _this = this;\n\n    this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.forget(path);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n  /**\r\n   * @param {!Path} path\r\n   * @param {*} value\r\n   * @param {?function(?Error, *=)} onComplete\r\n   */\n\n\n  Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\n    var _this = this;\n\n    var newNode = nodeFromJSON$1(value);\n    this.server_.onDisconnectPut(path.toString(), newNode.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.remember(path, newNode);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n  /**\r\n   * @param {!Path} path\r\n   * @param {*} value\r\n   * @param {*} priority\r\n   * @param {?function(?Error, *=)} onComplete\r\n   */\n\n\n  Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\n    var _this = this;\n\n    var newNode = nodeFromJSON$1(value, priority);\n    this.server_.onDisconnectPut(path.toString(), newNode.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.remember(path, newNode);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n  /**\r\n   * @param {!Path} path\r\n   * @param {*} childrenToMerge\r\n   * @param {?function(?Error, *=)} onComplete\r\n   */\n\n\n  Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\n    var _this = this;\n\n    if (util.isEmpty(childrenToMerge)) {\n      log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n      this.callOnCompleteCallback(onComplete, 'ok');\n      return;\n    }\n\n    this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n      if (status === 'ok') {\n        util.forEach(childrenToMerge, function (childName, childNode) {\n          var newChildNode = nodeFromJSON$1(childNode);\n\n          _this.onDisconnect_.remember(path.child(childName), newChildNode);\n        });\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n  /**\r\n   * @param {!Query} query\r\n   * @param {!EventRegistration} eventRegistration\r\n   */\n\n\n  Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\n    var events;\n\n    if (query.path.getFront() === '.info') {\n      events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\n    } else {\n      events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\n    }\n\n    this.eventQueue_.raiseEventsAtPath(query.path, events);\n  };\n  /**\r\n   * @param {!Query} query\r\n   * @param {?EventRegistration} eventRegistration\r\n   */\n\n\n  Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n    // a little bit by handling the return values anyways.\n    var events;\n\n    if (query.path.getFront() === '.info') {\n      events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\n    } else {\n      events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\n    }\n\n    this.eventQueue_.raiseEventsAtPath(query.path, events);\n  };\n\n  Repo.prototype.interrupt = function () {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.interrupt(INTERRUPT_REASON);\n    }\n  };\n\n  Repo.prototype.resume = function () {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.resume(INTERRUPT_REASON);\n    }\n  };\n\n  Repo.prototype.stats = function (showDelta) {\n    if (showDelta === void 0) {\n      showDelta = false;\n    }\n\n    if (typeof console === 'undefined') return;\n    var stats;\n\n    if (showDelta) {\n      if (!this.statsListener_) this.statsListener_ = new StatsListener(this.stats_);\n      stats = this.statsListener_.get();\n    } else {\n      stats = this.stats_.get();\n    }\n\n    var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n      return Math.max(currentValue.length, previousValue);\n    }, 0);\n    util.forEach(stats, function (stat, value) {\n      // pad stat names to be the same length (plus 2 extra spaces).\n      for (var i = stat.length; i < longestName + 2; i++) {\n        stat += ' ';\n      }\n\n      console.log(stat + value);\n    });\n  };\n\n  Repo.prototype.statsIncrementCounter = function (metric) {\n    this.stats_.incrementCounter(metric);\n    this.statsReporter_.includeStat(metric);\n  };\n  /**\r\n   * @param {...*} var_args\r\n   * @private\r\n   */\n\n\n  Repo.prototype.log_ = function () {\n    var var_args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      var_args[_i] = arguments[_i];\n    }\n\n    var prefix = '';\n\n    if (this.persistentConnection_) {\n      prefix = this.persistentConnection_.id + ':';\n    }\n\n    log.apply(void 0, [prefix].concat(var_args));\n  };\n  /**\r\n   * @param {?function(?Error, *=)} callback\r\n   * @param {!string} status\r\n   * @param {?string=} errorReason\r\n   */\n\n\n  Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\n    if (callback) {\n      exceptionGuard(function () {\n        if (status == 'ok') {\n          callback(null);\n        } else {\n          var code = (status || 'error').toUpperCase();\n          var message = code;\n          if (errorReason) message += ': ' + errorReason;\n          var error = new Error(message);\n          error.code = code;\n          callback(error);\n        }\n      });\n    }\n  };\n\n  Object.defineProperty(Repo.prototype, \"database\", {\n    get: function get() {\n      return this.__database || (this.__database = new Database(this));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Repo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\n\n\nvar RangedFilter =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!QueryParams} params\r\n   */\n  function RangedFilter(params) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n  /**\r\n   * @return {!NamedNode}\r\n   */\n\n\n  RangedFilter.prototype.getStartPost = function () {\n    return this.startPost_;\n  };\n  /**\r\n   * @return {!NamedNode}\r\n   */\n\n\n  RangedFilter.prototype.getEndPost = function () {\n    return this.endPost_;\n  };\n  /**\r\n   * @param {!NamedNode} node\r\n   * @return {boolean}\r\n   */\n\n\n  RangedFilter.prototype.matches = function (node) {\n    return this.index_.compare(this.getStartPost(), node) <= 0 && this.index_.compare(node, this.getEndPost()) <= 0;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n\n    var filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    var self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.getIndexedFilter = function () {\n    return this.indexedFilter_;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n  /**\r\n   * @param {!QueryParams} params\r\n   * @return {!NamedNode}\r\n   * @private\r\n   */\n\n\n  RangedFilter.getStartPost_ = function (params) {\n    if (params.hasStart()) {\n      var startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  };\n  /**\r\n   * @param {!QueryParams} params\r\n   * @return {!NamedNode}\r\n   * @private\r\n   */\n\n\n  RangedFilter.getEndPost_ = function (params) {\n    if (params.hasEnd()) {\n      var endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  };\n\n  return RangedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\n\n\nvar LimitedFilter =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!QueryParams} params\r\n   */\n  function LimitedFilter(params) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_.getIndexedFilter().updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n    } else {\n      return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    var filtered;\n\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (this.limit_ * 2 < newSnap.numChildren() && newSnap.isIndexed(this.index_)) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_); // anchor to the startPost, endPost, or last element as appropriate\n\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\n        } else {\n          iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\n        }\n\n        var count = 0;\n\n        while (iterator.hasNext() && count < this.limit_) {\n          var next = iterator.getNext();\n          var inRange = void 0;\n\n          if (this.reverse_) {\n            inRange = this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange = this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n        var startPost = void 0;\n        var endPost = void 0;\n        var cmp = void 0;\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          var indexCompare_1 = this.index_.getCompare();\n\n          cmp = function cmp(a, b) {\n            return indexCompare_1(b, a);\n          };\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        var count = 0;\n        var foundStartPost = false;\n\n        while (iterator.hasNext()) {\n          var next = iterator.getNext();\n\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n\n          var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\n          }\n        }\n      }\n    }\n\n    return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.getIndexedFilter = function () {\n    return this.rangedFilter_.getIndexedFilter();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n  /**\r\n   * @param {!Node} snap\r\n   * @param {string} childKey\r\n   * @param {!Node} childSnap\r\n   * @param {!CompleteChildSource} source\r\n   * @param {?ChildChangeAccumulator} changeAccumulator\r\n   * @return {!Node}\r\n   * @private\r\n   */\n\n\n  LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\n    // TODO: rename all cache stuff etc to general snap terminology\n    var cmp;\n\n    if (this.reverse_) {\n      var indexCmp_1 = this.index_.getCompare();\n\n      cmp = function cmp(a, b) {\n        return indexCmp_1(b, a);\n      };\n    } else {\n      cmp = this.index_.getCompare();\n    }\n\n    var oldEventCache = snap;\n    util.assert(oldEventCache.numChildren() == this.limit_, '');\n    var newChildNamedNode = new NamedNode(childKey, childSnap);\n    var windowBoundary = this.reverse_ ? oldEventCache.getFirstChild(this.index_) : oldEventCache.getLastChild(this.index_);\n    var inRange = this.rangedFilter_.matches(newChildNamedNode);\n\n    if (oldEventCache.hasChild(childKey)) {\n      var oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\n\n      while (nextChild != null && (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\n      }\n\n      var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\n\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\n        }\n\n        var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\n        var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\n\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\n          }\n\n          return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\n          changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap).updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  };\n\n  return LimitedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\n\n\nvar QueryParams =\n/** @class */\nfunction () {\n  function QueryParams() {\n    this.limitSet_ = false;\n    this.startSet_ = false;\n    this.startNameSet_ = false;\n    this.endSet_ = false;\n    this.endNameSet_ = false;\n    this.limit_ = 0;\n    this.viewFrom_ = '';\n    this.indexStartValue_ = null;\n    this.indexStartName_ = '';\n    this.indexEndValue_ = null;\n    this.indexEndName_ = '';\n    this.index_ = PRIORITY_INDEX;\n  }\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.hasStart = function () {\n    return this.startSet_;\n  };\n  /**\r\n   * @return {boolean} True if it would return from left.\r\n   */\n\n\n  QueryParams.prototype.isViewFromLeft = function () {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n    }\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true\r\n   * @return {*}\r\n   */\n\n\n  QueryParams.prototype.getIndexStartValue = function () {\n    util.assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true.\r\n   * Returns the starting key name for the range defined by these query parameters\r\n   * @return {!string}\r\n   */\n\n\n  QueryParams.prototype.getIndexStartName = function () {\n    util.assert(this.startSet_, 'Only valid if start has been set');\n\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.hasEnd = function () {\n    return this.endSet_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   * @return {*}\r\n   */\n\n\n  QueryParams.prototype.getIndexEndValue = function () {\n    util.assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   * Returns the end key name for the range defined by these query parameters\r\n   * @return {!string}\r\n   */\n\n\n  QueryParams.prototype.getIndexEndName = function () {\n    util.assert(this.endSet_, 'Only valid if end has been set');\n\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.hasLimit = function () {\n    return this.limitSet_;\n  };\n  /**\r\n   * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n   */\n\n\n  QueryParams.prototype.hasAnchoredLimit = function () {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  };\n  /**\r\n   * Only valid to call if hasLimit() returns true\r\n   * @return {!number}\r\n   */\n\n\n  QueryParams.prototype.getLimit = function () {\n    util.assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  };\n  /**\r\n   * @return {!Index}\r\n   */\n\n\n  QueryParams.prototype.getIndex = function () {\n    return this.index_;\n  };\n  /**\r\n   * @return {!QueryParams}\r\n   * @private\r\n   */\n\n\n  QueryParams.prototype.copy_ = function () {\n    var copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  };\n  /**\r\n   * @param {!number} newLimit\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.limit = function (newLimit) {\n    var newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = '';\n    return newParams;\n  };\n  /**\r\n   * @param {!number} newLimit\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.limitToFirst = function (newLimit) {\n    var newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n    return newParams;\n  };\n  /**\r\n   * @param {!number} newLimit\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.limitToLast = function (newLimit) {\n    var newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\n    return newParams;\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {?string=} key\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.startAt = function (indexValue, key) {\n    var newParams = this.copy_();\n    newParams.startSet_ = true;\n\n    if (indexValue === undefined) {\n      indexValue = null;\n    }\n\n    newParams.indexStartValue_ = indexValue;\n\n    if (key != null) {\n      newParams.startNameSet_ = true;\n      newParams.indexStartName_ = key;\n    } else {\n      newParams.startNameSet_ = false;\n      newParams.indexStartName_ = '';\n    }\n\n    return newParams;\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {?string=} key\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.endAt = function (indexValue, key) {\n    var newParams = this.copy_();\n    newParams.endSet_ = true;\n\n    if (indexValue === undefined) {\n      indexValue = null;\n    }\n\n    newParams.indexEndValue_ = indexValue;\n\n    if (key !== undefined) {\n      newParams.endNameSet_ = true;\n      newParams.indexEndName_ = key;\n    } else {\n      newParams.endNameSet_ = false;\n      newParams.indexEndName_ = '';\n    }\n\n    return newParams;\n  };\n  /**\r\n   * @param {!Index} index\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.orderBy = function (index) {\n    var newParams = this.copy_();\n    newParams.index_ = index;\n    return newParams;\n  };\n  /**\r\n   * @return {!Object}\r\n   */\n\n\n  QueryParams.prototype.getQueryObject = function () {\n    var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\n    var obj = {};\n\n    if (this.startSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\n\n      if (this.startNameSet_) {\n        obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\n      }\n    }\n\n    if (this.endSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\n\n      if (this.endNameSet_) {\n        obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\n      }\n    }\n\n    if (this.limitSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\n      var viewFrom = this.viewFrom_;\n\n      if (viewFrom === '') {\n        if (this.isViewFromLeft()) {\n          viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n        } else {\n          viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n        }\n      }\n\n      obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n    } // For now, priority index is the default, so we only specify if it's some other index\n\n\n    if (this.index_ !== PRIORITY_INDEX) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\n    }\n\n    return obj;\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.loadsAllData = function () {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.isDefault = function () {\n    return this.loadsAllData() && this.index_ == PRIORITY_INDEX;\n  };\n  /**\r\n   * @return {!NodeFilter}\r\n   */\n\n\n  QueryParams.prototype.getNodeFilter = function () {\n    if (this.loadsAllData()) {\n      return new IndexedFilter(this.getIndex());\n    } else if (this.hasLimit()) {\n      return new LimitedFilter(this);\n    } else {\n      return new RangedFilter(this);\n    }\n  };\n  /**\r\n   * Returns a set of REST query string parameters representing this query.\r\n   *\r\n   * @return {!Object.<string,*>} query string parameters\r\n   */\n\n\n  QueryParams.prototype.toRestQueryStringParameters = function () {\n    var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\n    var qs = {};\n\n    if (this.isDefault()) {\n      return qs;\n    }\n\n    var orderBy;\n\n    if (this.index_ === PRIORITY_INDEX) {\n      orderBy = REST_CONSTANTS.PRIORITY_INDEX;\n    } else if (this.index_ === VALUE_INDEX) {\n      orderBy = REST_CONSTANTS.VALUE_INDEX;\n    } else if (this.index_ === KEY_INDEX) {\n      orderBy = REST_CONSTANTS.KEY_INDEX;\n    } else {\n      util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\n      orderBy = this.index_.toString();\n    }\n\n    qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\n\n    if (this.startSet_) {\n      qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\n\n      if (this.startNameSet_) {\n        qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\n      }\n    }\n\n    if (this.endSet_) {\n      qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\n\n      if (this.endNameSet_) {\n        qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\n      }\n    }\n\n    if (this.limitSet_) {\n      if (this.isViewFromLeft()) {\n        qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\n      } else {\n        qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\n      }\n    }\n\n    return qs;\n  };\n  /**\r\n   * Wire Protocol Constants\r\n   * @const\r\n   * @enum {string}\r\n   * @private\r\n   */\n\n\n  QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\n    INDEX_START_VALUE: 'sp',\n    INDEX_START_NAME: 'sn',\n    INDEX_END_VALUE: 'ep',\n    INDEX_END_NAME: 'en',\n    LIMIT: 'l',\n    VIEW_FROM: 'vf',\n    VIEW_FROM_LEFT: 'l',\n    VIEW_FROM_RIGHT: 'r',\n    INDEX: 'i'\n  };\n  /**\r\n   * REST Query Constants\r\n   * @const\r\n   * @enum {string}\r\n   * @private\r\n   */\n\n  QueryParams.REST_QUERY_CONSTANTS_ = {\n    ORDER_BY: 'orderBy',\n    PRIORITY_INDEX: '$priority',\n    VALUE_INDEX: '$value',\n    KEY_INDEX: '$key',\n    START_AT: 'startAt',\n    END_AT: 'endAt',\n    LIMIT_TO_FIRST: 'limitToFirst',\n    LIMIT_TO_LAST: 'limitToLast'\n  };\n  /**\r\n   * Default, empty query parameters\r\n   * @type {!QueryParams}\r\n   * @const\r\n   */\n\n  QueryParams.DEFAULT = new QueryParams();\n  return QueryParams;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Reference =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Reference, _super);\n  /**\r\n   * Call options:\r\n   *   new Reference(Repo, Path) or\r\n   *   new Reference(url: string, string|RepoManager)\r\n   *\r\n   * Externally - this is the firebase.database.Reference type.\r\n   *\r\n   * @param {!Repo} repo\r\n   * @param {(!Path)} path\r\n   * @extends {Query}\r\n   */\n\n\n  function Reference(repo, path) {\n    var _this = this;\n\n    if (!(repo instanceof Repo)) {\n      throw new Error('new Reference() no longer supported - use app.database().');\n    } // call Query's constructor, passing in the repo and path.\n\n\n    _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\n    return _this;\n  }\n  /** @return {?string} */\n\n\n  Reference.prototype.getKey = function () {\n    util.validateArgCount('Reference.key', 0, 0, arguments.length);\n    if (this.path.isEmpty()) return null;else return this.path.getBack();\n  };\n  /**\r\n   * @param {!(string|Path)} pathString\r\n   * @return {!Reference}\r\n   */\n\n\n  Reference.prototype.child = function (pathString) {\n    util.validateArgCount('Reference.child', 1, 1, arguments.length);\n\n    if (typeof pathString === 'number') {\n      pathString = String(pathString);\n    } else if (!(pathString instanceof Path)) {\n      if (this.path.getFront() === null) validateRootPathString('Reference.child', 1, pathString, false);else validatePathString('Reference.child', 1, pathString, false);\n    }\n\n    return new Reference(this.repo, this.path.child(pathString));\n  };\n  /** @return {?Reference} */\n\n\n  Reference.prototype.getParent = function () {\n    util.validateArgCount('Reference.parent', 0, 0, arguments.length);\n    var parentPath = this.path.parent();\n    return parentPath === null ? null : new Reference(this.repo, parentPath);\n  };\n  /** @return {!Reference} */\n\n\n  Reference.prototype.getRoot = function () {\n    util.validateArgCount('Reference.root', 0, 0, arguments.length);\n    var ref = this;\n\n    while (ref.getParent() !== null) {\n      ref = ref.getParent();\n    }\n\n    return ref;\n  };\n  /** @return {!Database} */\n\n\n  Reference.prototype.databaseProp = function () {\n    return this.repo.database;\n  };\n  /**\r\n   * @param {*} newVal\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.set = function (newVal, onComplete) {\n    util.validateArgCount('Reference.set', 1, 2, arguments.length);\n    validateWritablePath('Reference.set', this.path);\n    validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\n    util.validateCallback('Reference.set', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo.setWithPriority(this.path, newVal,\n    /*priority=*/\n    null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {!Object} objectToMerge\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.update = function (objectToMerge, onComplete) {\n    util.validateArgCount('Reference.update', 1, 2, arguments.length);\n    validateWritablePath('Reference.update', this.path);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to Firebase.update() is deprecated. ' + 'Use set() if you want to overwrite the existing data, or ' + 'an Object with integer keys if you really do want to ' + 'only update some of the children.');\n    }\n\n    validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\n    util.validateCallback('Reference.update', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*} newVal\r\n   * @param {string|number|null} newPriority\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\n    util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('Reference.setWithPriority', this.path);\n    validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\n    validatePriority('Reference.setWithPriority', 2, newPriority, false);\n    util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\n    if (this.getKey() === '.length' || this.getKey() === '.keys') throw 'Reference.setWithPriority failed: ' + this.getKey() + ' is a read-only object.';\n    var deferred = new util.Deferred();\n    this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.remove = function (onComplete) {\n    util.validateArgCount('Reference.remove', 0, 1, arguments.length);\n    validateWritablePath('Reference.remove', this.path);\n    util.validateCallback('Reference.remove', 1, onComplete, true);\n    return this.set(null, onComplete);\n  };\n  /**\r\n   * @param {function(*):*} transactionUpdate\r\n   * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n   * @param {boolean=} applyLocally\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\n    util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\n    validateWritablePath('Reference.transaction', this.path);\n    util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\n    util.validateCallback('Reference.transaction', 2, onComplete, true); // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\n    // to expose it.\n\n    validateBoolean('Reference.transaction', 3, applyLocally, true);\n    if (this.getKey() === '.length' || this.getKey() === '.keys') throw 'Reference.transaction failed: ' + this.getKey() + ' is a read-only object.';\n    if (applyLocally === undefined) applyLocally = true;\n    var deferred = new util.Deferred();\n\n    if (typeof onComplete === 'function') {\n      deferred.promise[\"catch\"](function () {});\n    }\n\n    var promiseComplete = function promiseComplete(error, committed, snapshot) {\n      if (error) {\n        deferred.reject(error);\n      } else {\n        deferred.resolve(new TransactionResult(committed, snapshot));\n      }\n\n      if (typeof onComplete === 'function') {\n        onComplete(error, committed, snapshot);\n      }\n    };\n\n    this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\n    return deferred.promise;\n  };\n  /**\r\n   * @param {string|number|null} priority\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.setPriority = function (priority, onComplete) {\n    util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n    validateWritablePath('Reference.setPriority', this.path);\n    validatePriority('Reference.setPriority', 1, priority, false);\n    util.validateCallback('Reference.setPriority', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*=} value\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Reference}\r\n   */\n\n\n  Reference.prototype.push = function (value, onComplete) {\n    util.validateArgCount('Reference.push', 0, 2, arguments.length);\n    validateWritablePath('Reference.push', this.path);\n    validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\n    util.validateCallback('Reference.push', 2, onComplete, true);\n    var now = this.repo.serverTime();\n    var name = nextPushId(now); // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\n    // We use child() to create handles to two different references. The first is turned into a\n    // ThennableReference below by adding then() and catch() methods and is used as the\n    // return value of push(). The second remains a regular Reference and is used as the fulfilled\n    // value of the first ThennableReference.\n\n    var thennablePushRef = this.child(name);\n    var pushRef = this.child(name);\n    var promise;\n\n    if (value != null) {\n      promise = thennablePushRef.set(value, onComplete).then(function () {\n        return pushRef;\n      });\n    } else {\n      promise = Promise.resolve(pushRef);\n    }\n\n    thennablePushRef.then = promise.then.bind(promise);\n    thennablePushRef[\"catch\"] = promise.then.bind(promise, undefined);\n\n    if (typeof onComplete === 'function') {\n      promise[\"catch\"](function () {});\n    }\n\n    return thennablePushRef;\n  };\n  /**\r\n   * @return {!OnDisconnect}\r\n   */\n\n\n  Reference.prototype.onDisconnect = function () {\n    validateWritablePath('Reference.onDisconnect', this.path);\n    return new OnDisconnect(this.repo, this.path);\n  };\n\n  Object.defineProperty(Reference.prototype, \"database\", {\n    get: function get() {\n      return this.databaseProp();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"key\", {\n    get: function get() {\n      return this.getKey();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    get: function get() {\n      return this.getParent();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    get: function get() {\n      return this.getRoot();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Reference;\n}(Query);\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\n\n\nQuery.__referenceConstructor = Reference;\nSyncPoint.__referenceConstructor = Reference;\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Node in a Tree.\r\n */\n\nvar TreeNode =\n/** @class */\nfunction () {\n  function TreeNode() {\n    // TODO: Consider making accessors that create children and value lazily or\n    // separate Internal / Leaf 'types'.\n    this.children = {};\n    this.childCount = 0;\n    this.value = null;\n  }\n\n  return TreeNode;\n}();\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\n\n\nvar Tree =\n/** @class */\nfunction () {\n  /**\r\n   * @template T\r\n   * @param {string=} name_ Optional name of the node.\r\n   * @param {Tree=} parent_ Optional parent node.\r\n   * @param {TreeNode=} node_ Optional node to wrap.\r\n   */\n  function Tree(name_, parent_, node_) {\n    if (name_ === void 0) {\n      name_ = '';\n    }\n\n    if (parent_ === void 0) {\n      parent_ = null;\n    }\n\n    if (node_ === void 0) {\n      node_ = new TreeNode();\n    }\n\n    this.name_ = name_;\n    this.parent_ = parent_;\n    this.node_ = node_;\n  }\n  /**\r\n   * Returns a sub-Tree for the given path.\r\n   *\r\n   * @param {!(string|Path)} pathObj Path to look up.\r\n   * @return {!Tree.<T>} Tree for path.\r\n   */\n\n\n  Tree.prototype.subTree = function (pathObj) {\n    // TODO: Require pathObj to be Path?\n    var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n    var child = this,\n        next;\n\n    while ((next = path.getFront()) !== null) {\n      var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\n      child = new Tree(next, child, childNode);\n      path = path.popFront();\n    }\n\n    return child;\n  };\n  /**\r\n   * Returns the data associated with this tree node.\r\n   *\r\n   * @return {?T} The data or null if no data exists.\r\n   */\n\n\n  Tree.prototype.getValue = function () {\n    return this.node_.value;\n  };\n  /**\r\n   * Sets data to this tree node.\r\n   *\r\n   * @param {!T} value Value to set.\r\n   */\n\n\n  Tree.prototype.setValue = function (value) {\n    util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\n    this.node_.value = value;\n    this.updateParents_();\n  };\n  /**\r\n   * Clears the contents of the tree node (its value and all children).\r\n   */\n\n\n  Tree.prototype.clear = function () {\n    this.node_.value = null;\n    this.node_.children = {};\n    this.node_.childCount = 0;\n    this.updateParents_();\n  };\n  /**\r\n   * @return {boolean} Whether the tree has any children.\r\n   */\n\n\n  Tree.prototype.hasChildren = function () {\n    return this.node_.childCount > 0;\n  };\n  /**\r\n   * @return {boolean} Whether the tree is empty (no value or children).\r\n   */\n\n\n  Tree.prototype.isEmpty = function () {\n    return this.getValue() === null && !this.hasChildren();\n  };\n  /**\r\n   * Calls action for each child of this tree node.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n   */\n\n\n  Tree.prototype.forEachChild = function (action) {\n    var _this = this;\n\n    util.forEach(this.node_.children, function (child, childTree) {\n      action(new Tree(child, _this, childTree));\n    });\n  };\n  /**\r\n   * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n   * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n   *   false.\r\n   * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n   *   parent.\r\n   */\n\n\n  Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\n    if (includeSelf && !childrenFirst) action(this);\n    this.forEachChild(function (child) {\n      child.forEachDescendant(action,\n      /*includeSelf=*/\n      true, childrenFirst);\n    });\n    if (includeSelf && childrenFirst) action(this);\n  };\n  /**\r\n   * Calls action on each ancestor node.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n   *   true to abort.\r\n   * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n   * @return {boolean} true if the action callback returned true.\r\n   */\n\n\n  Tree.prototype.forEachAncestor = function (action, includeSelf) {\n    var node = includeSelf ? this : this.parent();\n\n    while (node !== null) {\n      if (action(node)) {\n        return true;\n      }\n\n      node = node.parent();\n    }\n\n    return false;\n  };\n  /**\r\n   * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n   * is found, action is called on it and traversal does not continue inside the node.\r\n   * Action is *not* called on this node.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n   */\n\n\n  Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\n    this.forEachChild(function (child) {\n      if (child.getValue() !== null) action(child);else child.forEachImmediateDescendantWithValue(action);\n    });\n  };\n  /**\r\n   * @return {!Path} The path of this tree node, as a Path.\r\n   */\n\n\n  Tree.prototype.path = function () {\n    return new Path(this.parent_ === null ? this.name_ : this.parent_.path() + '/' + this.name_);\n  };\n  /**\r\n   * @return {string} The name of the tree node.\r\n   */\n\n\n  Tree.prototype.name = function () {\n    return this.name_;\n  };\n  /**\r\n   * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n   */\n\n\n  Tree.prototype.parent = function () {\n    return this.parent_;\n  };\n  /**\r\n   * Adds or removes this child from its parent based on whether it's empty or not.\r\n   *\r\n   * @private\r\n   */\n\n\n  Tree.prototype.updateParents_ = function () {\n    if (this.parent_ !== null) this.parent_.updateChild_(this.name_, this);\n  };\n  /**\r\n   * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n   *\r\n   * @param {string} childName The name of the child to update.\r\n   * @param {!Tree.<T>} child The child to update.\r\n   * @private\r\n   */\n\n\n  Tree.prototype.updateChild_ = function (childName, child) {\n    var childEmpty = child.isEmpty();\n    var childExists = util.contains(this.node_.children, childName);\n\n    if (childEmpty && childExists) {\n      delete this.node_.children[childName];\n      this.node_.childCount--;\n      this.updateParents_();\n    } else if (!childEmpty && !childExists) {\n      this.node_.children[childName] = child.node_;\n      this.node_.childCount++;\n      this.updateParents_();\n    }\n  };\n\n  return Tree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\n// For now it's part of Repo, but in its own file.\n\n/**\r\n * @enum {number}\r\n */\n\n\nvar TransactionStatus;\n\n(function (TransactionStatus) {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\"; // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n\n  TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\"; // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n\n  TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\"; // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n\n  TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\"; // Temporary state used to mark transactions that need to be aborted.\n\n  TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\n})(TransactionStatus || (TransactionStatus = {}));\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\n\n\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\n\nRepo.prototype.transactions_init_ = function () {\n  /**\r\n   * Stores queues of outstanding transactions for Firebase locations.\r\n   *\r\n   * @type {!Tree.<Array.<!Transaction>>}\r\n   * @private\r\n   */\n  this.transactionQueueTree_ = new Tree();\n};\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\n\n\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\n  this.log_('transaction on ' + path); // Add a watch to make sure we get server updates.\n\n  var valueCallback = function valueCallback() {};\n\n  var watchRef = new Reference(this, path);\n  watchRef.on('value', valueCallback);\n\n  var unwatcher = function unwatcher() {\n    watchRef.off('value', valueCallback);\n  }; // Initialize transaction.\n\n\n  var transaction = {\n    path: path,\n    update: transactionUpdate,\n    onComplete: onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally: applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher: unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  }; // Run transaction initially.\n\n  var currentState = this.getLatestState_(path);\n  transaction.currentInputSnapshot = currentState;\n  var newVal = transaction.update(currentState.val());\n\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n\n    if (transaction.onComplete) {\n      // We just set the input snapshot, so this cast should be safe\n      var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\n      transaction.onComplete(null, false, snapshot);\n    }\n  } else {\n    validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path); // Mark as run and add to our queue.\n\n    transaction.status = TransactionStatus.RUN;\n    var queueNode = this.transactionQueueTree_.subTree(path);\n    var nodeQueue = queueNode.getValue() || [];\n    nodeQueue.push(transaction);\n    queueNode.setValue(nodeQueue); // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our transaction state, since the user could\n    // start new transactions from the event callbacks.\n\n    var priorityForNode = void 0;\n\n    if (typeof newVal === 'object' && newVal !== null && util.contains(newVal, '.priority')) {\n      priorityForNode = util.safeGet(newVal, '.priority');\n      util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' + 'Priority must be a valid string, finite number, server value, or null.');\n    } else {\n      var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) || ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    priorityForNode\n    /** @type {null|number|string} */\n    = priorityForNode;\n    var serverValues = this.generateServerValues();\n    var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = this.getNextWriteId_();\n    var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n    this.sendReadyTransactions_();\n  }\n};\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\n\n\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\n  return this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) || ChildrenNode.EMPTY_NODE;\n};\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\n\n\nRepo.prototype.sendReadyTransactions_ = function (node) {\n  var _this = this;\n\n  if (node === void 0) {\n    node = this.transactionQueueTree_;\n  } // Before recursing, make sure any completed transactions are removed.\n\n\n  if (!node) {\n    this.pruneCompletedTransactionsBelowNode_(node);\n  }\n\n  if (node.getValue() !== null) {\n    var queue = this.buildTransactionQueue_(node);\n    util.assert(queue.length > 0, 'Sending zero length transaction queue');\n    var allRun = queue.every(function (transaction) {\n      return transaction.status === TransactionStatus.RUN;\n    }); // If they're all run (and not sent), we can send them.  Else, we must wait.\n\n    if (allRun) {\n      this.sendTransactionQueue_(node.path(), queue);\n    }\n  } else if (node.hasChildren()) {\n    node.forEachChild(function (childNode) {\n      _this.sendReadyTransactions_(childNode);\n    });\n  }\n};\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\n\n\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\n  var _this = this; // Mark transactions as sent and increment retry count!\n\n\n  var setsToIgnore = queue.map(function (txn) {\n    return txn.currentWriteId;\n  });\n  var latestState = this.getLatestState_(path, setsToIgnore);\n  var snapToSend = latestState;\n  var latestHash = latestState.hash();\n\n  for (var i = 0; i < queue.length; i++) {\n    var txn = queue[i];\n    util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    var relativePath = Path.relativePath(path, txn.path); // If we've gotten to this point, the output snapshot must be defined.\n\n    snapToSend = snapToSend.updateChild(relativePath\n    /**@type {!Node} */\n    , txn.currentOutputSnapshotRaw);\n  }\n\n  var dataToSend = snapToSend.val(true);\n  var pathToSend = path; // Send the put.\n\n  this.server_.put(pathToSend.toString(), dataToSend, function (status) {\n    _this.log_('transaction put response', {\n      path: pathToSend.toString(),\n      status: status\n    });\n\n    var events = [];\n\n    if (status === 'ok') {\n      // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n      // the callback could trigger more transactions or sets.\n      var callbacks = [];\n\n      for (var i = 0; i < queue.length; i++) {\n        queue[i].status = TransactionStatus.COMPLETED;\n        events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\n\n        if (queue[i].onComplete) {\n          // We never unset the output snapshot, and given that this transaction is complete, it should be set\n          var node = queue[i].currentOutputSnapshotResolved;\n          var ref = new Reference(_this, queue[i].path);\n          var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\n          callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\n        }\n\n        queue[i].unwatcher();\n      } // Now remove the completed transactions.\n\n\n      _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path)); // There may be pending transactions that we can now send.\n\n\n      _this.sendReadyTransactions_();\n\n      _this.eventQueue_.raiseEventsForChangedPath(path, events); // Finally, trigger onComplete callbacks.\n\n\n      for (var i = 0; i < callbacks.length; i++) {\n        exceptionGuard(callbacks[i]);\n      }\n    } else {\n      // transactions are no longer sent.  Update their status appropriately.\n      if (status === 'datastale') {\n        for (var i = 0; i < queue.length; i++) {\n          if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) queue[i].status = TransactionStatus.NEEDS_ABORT;else queue[i].status = TransactionStatus.RUN;\n        }\n      } else {\n        warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\n\n        for (var i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.NEEDS_ABORT;\n          queue[i].abortReason = status;\n        }\n      }\n\n      _this.rerunTransactions_(path);\n    }\n  }, latestHash);\n};\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\n\n\nRepo.prototype.rerunTransactions_ = function (changedPath) {\n  var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\n  var path = rootMostTransactionNode.path();\n  var queue = this.buildTransactionQueue_(rootMostTransactionNode);\n  this.rerunTransactionQueue_(queue, path);\n  return path;\n};\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\n\n\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  } // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n  // the callback could trigger more transactions or sets.\n\n\n  var callbacks = [];\n  var events = []; // Ignore all of the sets we're going to re-run.\n\n  var txnsToRerun = queue.filter(function (q) {\n    return q.status === TransactionStatus.RUN;\n  });\n  var setsToIgnore = txnsToRerun.map(function (q) {\n    return q.currentWriteId;\n  });\n\n  for (var i = 0; i < queue.length; i++) {\n    var transaction = queue[i];\n    var relativePath = Path.relativePath(path, transaction.path);\n    var abortTransaction = false,\n        abortReason = void 0;\n    util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n      } else {\n        // This code reruns a transaction\n        var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\n        transaction.currentInputSnapshot = currentNode;\n        var newData = queue[i].update(currentNode.val());\n\n        if (newData !== undefined) {\n          validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\n          var newDataNode = nodeFromJSON$1(newData);\n          var hasExplicitPriority = typeof newData === 'object' && newData != null && util.contains(newData, '.priority');\n\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          var oldWriteId = transaction.currentWriteId;\n          var serverValues = this.generateServerValues();\n          var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, serverValues);\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = this.getNextWriteId_(); // Mutates setsToIgnore in place\n\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\n          events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n        }\n      }\n    }\n\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n    events = [];\n\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED; // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\n      // So defer the unwatcher until we're done.\n\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          var ref = new Reference(this, queue[i].path); // We set this field immediately, so it's safe to cast to an actual snapshot\n\n          var lastInput\n          /** @type {!Node} */\n          = queue[i].currentInputSnapshot;\n          var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\n          callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\n        } else {\n          callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\n        }\n      }\n    }\n  } // Clean up completed transactions.\n\n\n  this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_); // Now fire callbacks, now that we're in a good, known state.\n\n  for (var i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  } // Try to send the transaction result to the server.\n\n\n  this.sendReadyTransactions_();\n};\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\n\n\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\n  var front; // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\n\n  var transactionNode = this.transactionQueueTree_;\n\n  while ((front = path.getFront()) !== null && transactionNode.getValue() === null) {\n    transactionNode = transactionNode.subTree(front);\n    path = path.popFront();\n  }\n\n  return transactionNode;\n};\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\n\n\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  var transactionQueue = [];\n  this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue); // Sort them by the order the transactions were created.\n\n  transactionQueue.sort(function (a, b) {\n    return a.order - b.order;\n  });\n  return transactionQueue;\n};\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\n\n\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\n  var _this = this;\n\n  var nodeQueue = node.getValue();\n\n  if (nodeQueue !== null) {\n    for (var i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  node.forEachChild(function (child) {\n    _this.aggregateTransactionQueuesForNode_(child, queue);\n  });\n};\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\n\n\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\n  var _this = this;\n\n  var queue = node.getValue();\n\n  if (queue) {\n    var to = 0;\n\n    for (var from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n\n    queue.length = to;\n    node.setValue(queue.length > 0 ? queue : null);\n  }\n\n  node.forEachChild(function (childNode) {\n    _this.pruneCompletedTransactionsBelowNode_(childNode);\n  });\n};\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\n\n\nRepo.prototype.abortTransactions_ = function (path) {\n  var _this = this;\n\n  var affectedPath = this.getAncestorTransactionNode_(path).path();\n  var transactionNode = this.transactionQueueTree_.subTree(path);\n  transactionNode.forEachAncestor(function (node) {\n    _this.abortTransactionsOnNode_(node);\n  });\n  this.abortTransactionsOnNode_(transactionNode);\n  transactionNode.forEachDescendant(function (node) {\n    _this.abortTransactionsOnNode_(node);\n  });\n  return affectedPath;\n};\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\n\n\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\n  var queue = node.getValue();\n\n  if (queue !== null) {\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n    // the callback could trigger more transactions or sets.\n    var callbacks = []; // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\n    // can be immediately aborted and removed.\n\n    var events = [];\n    var lastSent = -1;\n\n    for (var i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;else if (queue[i].status === TransactionStatus.SENT) {\n        util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\n        lastSent = i; // Mark transaction for abort when it comes back.\n\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort'); // We can abort it immediately.\n\n        queue[i].unwatcher();\n        events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\n\n        if (queue[i].onComplete) {\n          var snapshot = null;\n          callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\n        }\n      }\n    }\n\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      node.setValue(null);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    } // Now fire the callbacks.\n\n\n    this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\n\n    for (var i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n};\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** @const {string} */\n\n\nvar DATABASE_URL_OPTION = 'databaseURL';\n\nvar _staticInstance;\n/**\r\n * Creates and caches Repo instances.\r\n */\n\n\nvar RepoManager =\n/** @class */\nfunction () {\n  function RepoManager() {\n    /**\r\n     * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n     */\n    this.repos_ = {};\n    /**\r\n     * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n     * @private {boolean}\r\n     */\n\n    this.useRestClient_ = false;\n  }\n\n  RepoManager.getInstance = function () {\n    if (!_staticInstance) {\n      _staticInstance = new RepoManager();\n    }\n\n    return _staticInstance;\n  }; // TODO(koss): Remove these functions unless used in tests?\n\n\n  RepoManager.prototype.interrupt = function () {\n    for (var appName in this.repos_) {\n      for (var dbUrl in this.repos_[appName]) {\n        this.repos_[appName][dbUrl].interrupt();\n      }\n    }\n  };\n\n  RepoManager.prototype.resume = function () {\n    for (var appName in this.repos_) {\n      for (var dbUrl in this.repos_[appName]) {\n        this.repos_[appName][dbUrl].resume();\n      }\n    }\n  };\n  /**\r\n   * This function should only ever be called to CREATE a new database instance.\r\n   *\r\n   * @param {!FirebaseApp} app\r\n   * @return {!Database}\r\n   */\n\n\n  RepoManager.prototype.databaseFromApp = function (app, url) {\n    var dbUrl = url || app.options[DATABASE_URL_OPTION];\n\n    if (dbUrl === undefined) {\n      fatal(\"Can't determine Firebase Database URL.  Be sure to include \" + DATABASE_URL_OPTION + ' option when calling firebase.initializeApp().');\n    }\n\n    var parsedUrl = parseRepoInfo(dbUrl);\n    var repoInfo = parsedUrl.repoInfo;\n    validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\n\n    if (!parsedUrl.path.isEmpty()) {\n      fatal('Database URL must point to the root of a Firebase Database ' + '(not including a child path).');\n    }\n\n    var repo = this.createRepo(repoInfo, app);\n    return repo.database;\n  };\n  /**\r\n   * Remove the repo and make sure it is disconnected.\r\n   *\r\n   * @param {!Repo} repo\r\n   */\n\n\n  RepoManager.prototype.deleteRepo = function (repo) {\n    var appRepos = util.safeGet(this.repos_, repo.app.name); // This should never happen...\n\n    if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\n      fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\n    }\n\n    repo.interrupt();\n    delete appRepos[repo.repoInfo_.toURLString()];\n  };\n  /**\r\n   * Ensures a repo doesn't already exist and then creates one using the\r\n   * provided app.\r\n   *\r\n   * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n   * @param {!FirebaseApp} app\r\n   * @return {!Repo} The Repo object for the specified server / repoName.\r\n   */\n\n\n  RepoManager.prototype.createRepo = function (repoInfo, app) {\n    var appRepos = util.safeGet(this.repos_, app.name);\n\n    if (!appRepos) {\n      appRepos = {};\n      this.repos_[app.name] = appRepos;\n    }\n\n    var repo = util.safeGet(appRepos, repoInfo.toURLString());\n\n    if (repo) {\n      fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\n    }\n\n    repo = new Repo(repoInfo, this.useRestClient_, app);\n    appRepos[repoInfo.toURLString()] = repo;\n    return repo;\n  };\n  /**\r\n   * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n   * @param {boolean} forceRestClient\r\n   */\n\n\n  RepoManager.prototype.forceRestClient = function (forceRestClient) {\n    this.useRestClient_ = forceRestClient;\n  };\n\n  return RepoManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\n\n\nvar Database =\n/** @class */\nfunction () {\n  /**\r\n   * The constructor should not be called by users of our public API.\r\n   * @param {!Repo} repo_\r\n   */\n  function Database(repo_) {\n    this.repo_ = repo_;\n\n    if (!(repo_ instanceof Repo)) {\n      fatal(\"Don't call new Database() directly - please use firebase.database().\");\n    }\n    /** @type {Reference} */\n\n\n    this.root_ = new Reference(repo_, Path.Empty);\n    this.INTERNAL = new DatabaseInternals(this);\n  }\n\n  Object.defineProperty(Database.prototype, \"app\", {\n    get: function get() {\n      return this.repo_.app;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Database.prototype.ref = function (path) {\n    this.checkDeleted_('ref');\n    util.validateArgCount('database.ref', 0, 1, arguments.length);\n\n    if (path instanceof Reference) {\n      return this.refFromURL(path.toString());\n    }\n\n    return path !== undefined ? this.root_.child(path) : this.root_;\n  };\n  /**\r\n   * Returns a reference to the root or the path specified in url.\r\n   * We throw a exception if the url is not in the same domain as the\r\n   * current repo.\r\n   * @param {string} url\r\n   * @return {!Reference} Firebase reference.\r\n   */\n\n\n  Database.prototype.refFromURL = function (url) {\n    /** @const {string} */\n    var apiName = 'database.refFromURL';\n    this.checkDeleted_(apiName);\n    util.validateArgCount(apiName, 1, 1, arguments.length);\n    var parsedURL = parseRepoInfo(url);\n    validateUrl(apiName, 1, parsedURL);\n    var repoInfo = parsedURL.repoInfo;\n\n    if (repoInfo.host !== this.repo_.repoInfo_.host) {\n      fatal(apiName + ': Host name does not match the current database: ' + '(found ' + repoInfo.host + ' but expected ' + this.repo_.repoInfo_.host + ')');\n    }\n\n    return this.ref(parsedURL.path.toString());\n  };\n  /**\r\n   * @param {string} apiName\r\n   */\n\n\n  Database.prototype.checkDeleted_ = function (apiName) {\n    if (this.repo_ === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }; // Make individual repo go offline.\n\n\n  Database.prototype.goOffline = function () {\n    util.validateArgCount('database.goOffline', 0, 0, arguments.length);\n    this.checkDeleted_('goOffline');\n    this.repo_.interrupt();\n  };\n\n  Database.prototype.goOnline = function () {\n    util.validateArgCount('database.goOnline', 0, 0, arguments.length);\n    this.checkDeleted_('goOnline');\n    this.repo_.resume();\n  };\n\n  Database.ServerValue = {\n    TIMESTAMP: {\n      '.sv': 'timestamp'\n    }\n  };\n  return Database;\n}();\n\nvar DatabaseInternals =\n/** @class */\nfunction () {\n  /** @param {!Database} database */\n  function DatabaseInternals(database) {\n    this.database = database;\n  }\n  /** @return {Promise<void>} */\n\n\n  DatabaseInternals.prototype[\"delete\"] = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        this.database.checkDeleted_('delete');\n        RepoManager.getInstance().deleteRepo(this.database.repo_);\n        this.database.repo_ = null;\n        this.database.root_ = null;\n        this.database.INTERNAL = null;\n        this.database = null;\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  return DatabaseInternals;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\n\n\nvar forceLongPolling = function forceLongPolling() {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\n\nvar forceWebSockets = function forceWebSockets() {\n  BrowserPollConnection.forceDisallow();\n};\n/* Used by App Manager */\n\n\nvar isWebSocketsAvailable = function isWebSocketsAvailable() {\n  return WebSocketConnection['isAvailable']();\n};\n\nvar setSecurityDebugCallback = function setSecurityDebugCallback(ref, callback) {\n  ref.repo.persistentConnection_.securityDebugCallback_ = callback;\n};\n\nvar stats = function stats(ref, showDelta) {\n  ref.repo.stats(showDelta);\n};\n\nvar statsIncrementCounter = function statsIncrementCounter(ref, metric) {\n  ref.repo.statsIncrementCounter(metric);\n};\n\nvar dataUpdateCount = function dataUpdateCount(ref) {\n  return ref.repo.dataUpdateCount;\n};\n\nvar interceptServerData = function interceptServerData(ref, callback) {\n  return ref.repo.interceptServerData_(callback);\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar DataConnection = PersistentConnection;\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\n\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\n  this.sendRequest('q', {\n    p: pathString\n  }, onComplete);\n};\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\n\n\nPersistentConnection.prototype.echo = function (data, onEcho) {\n  this.sendRequest('echo', {\n    d: data\n  }, onEcho);\n}; // RealTimeConnection properties that we use in tests.\n\n\nvar RealTimeConnection = Connection;\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\n\nvar hijackHash = function hijackHash(newHash) {\n  var oldPut = PersistentConnection.prototype.put;\n\n  PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\n    if (opt_hash !== undefined) {\n      opt_hash = newHash();\n    }\n\n    oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\n  };\n\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\n\n\nvar ConnectionTarget = RepoInfo;\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\n\nvar queryIdentifier = function queryIdentifier(query) {\n  return query.queryIdentifier();\n};\n/**\r\n * @param {!Query} firebaseRef\r\n * @return {!Object}\r\n */\n\n\nvar listens = function listens(firebaseRef) {\n  return firebaseRef.repo.persistentConnection_.listens_;\n};\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\n\n\nvar forceRestClient = function forceRestClient(_forceRestClient) {\n  RepoManager.getInstance().forceRestClient(_forceRestClient);\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  listens: listens,\n  forceRestClient: forceRestClient\n});\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar ServerValue = Database.ServerValue;\n\nfunction registerDatabase(instance) {\n  // Register the Database Service with the 'firebase' namespace.\n  var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) {\n    return RepoManager.getInstance().databaseFromApp(app, url);\n  }, // firebase.database namespace properties\n  {\n    Reference: Reference,\n    Query: Query,\n    Database: Database,\n    DataSnapshot: DataSnapshot,\n    enableLogging: enableLogging,\n    INTERNAL: INTERNAL,\n    ServerValue: ServerValue,\n    TEST_ACCESS: TEST_ACCESS\n  }, null, true);\n\n  if (util.isNodeSdk()) {\n    module.exports = namespace;\n  }\n}\n\nregisterDatabase(firebase);\nexports.DataSnapshot = DataSnapshot;\nexports.Database = Database;\nexports.OnDisconnect = OnDisconnect;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.ServerValue = ServerValue;\nexports.enableLogging = enableLogging;\nexports.registerDatabase = registerDatabase;"],"sourceRoot":""}